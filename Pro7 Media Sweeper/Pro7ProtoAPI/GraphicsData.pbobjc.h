// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graphicsData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class DigitalAudio_Device_Routing;
@class Effect;
@class Graphics_EdgeInsets;
@class Graphics_Feather;
@class Graphics_Fill;
@class Graphics_Gradient;
@class Graphics_Gradient_ColorStop;
@class Graphics_Path;
@class Graphics_Path_BezierPoint;
@class Graphics_Path_Shape;
@class Graphics_Path_Shape_Arrow;
@class Graphics_Path_Shape_Polygon;
@class Graphics_Path_Shape_RoundedRectangle;
@class Graphics_Path_Shape_Star;
@class Graphics_Point;
@class Graphics_Rect;
@class Graphics_Shadow;
@class Graphics_Size;
@class Graphics_Stroke;
@class Graphics_Text;
@class Graphics_Text_Attributes;
@class Graphics_Text_Attributes_CustomAttribute;
@class Graphics_Text_Attributes_Font;
@class Graphics_Text_Attributes_Paragraph;
@class Graphics_Text_Attributes_Paragraph_TabStop;
@class Graphics_Text_Attributes_Paragraph_TextList;
@class Graphics_Text_Attributes_Underline;
@class Graphics_Text_GradientFill;
@class Graphics_Text_LineFillMask;
@class IntRange;
@class Media;
@class Media_AudioDevice;
@class Media_AudioProperties;
@class Media_AudioTypeProperties;
@class Media_Audio_Channel;
@class Media_Audio_Channel_Output;
@class Media_DrawingProperties;
@class Media_ImageTypeProperties;
@class Media_LiveVideoProperties;
@class Media_LiveVideoTypeProperties;
@class Media_Metadata;
@class Media_TransportProperties;
@class Media_VideoDevice;
@class Media_VideoProperties;
@class Media_VideoTypeProperties;
@class Media_WebContentTypeProperties;
@class URL;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Graphics_Element_FlipMode

typedef GPB_ENUM(Graphics_Element_FlipMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Element_FlipMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Element_FlipMode_FlipModeNone = 0,
  Graphics_Element_FlipMode_FlipModeVertical = 1,
  Graphics_Element_FlipMode_FlipModeHorizontal = 2,
  Graphics_Element_FlipMode_FlipModeBoth = 3,
};

GPBEnumDescriptor *Graphics_Element_FlipMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Element_FlipMode_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Path_Shape_Type

typedef GPB_ENUM(Graphics_Path_Shape_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Path_Shape_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Path_Shape_Type_TypeUnknown = 0,
  Graphics_Path_Shape_Type_TypeRectangle = 1,
  Graphics_Path_Shape_Type_TypeEllipse = 2,
  Graphics_Path_Shape_Type_TypeIsoscelesTriangle = 3,
  Graphics_Path_Shape_Type_TypeRightTriangle = 4,
  Graphics_Path_Shape_Type_TypeRhombus = 5,
  Graphics_Path_Shape_Type_TypeStar = 6,
  Graphics_Path_Shape_Type_TypePolygon = 7,
  Graphics_Path_Shape_Type_TypeCustom = 8,
  Graphics_Path_Shape_Type_TypeRightArrow = 9,
  Graphics_Path_Shape_Type_TypeDoubleArrow = 10,
  Graphics_Path_Shape_Type_TypeRoundedRectangle = 11,
};

GPBEnumDescriptor *Graphics_Path_Shape_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Path_Shape_Type_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Gradient_Type

typedef GPB_ENUM(Graphics_Gradient_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Gradient_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Gradient_Type_TypeLinear = 0,
  Graphics_Gradient_Type_TypeRadial = 1,
  Graphics_Gradient_Type_TypeAngle = 2,
};

GPBEnumDescriptor *Graphics_Gradient_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Gradient_Type_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Shadow_Style

typedef GPB_ENUM(Graphics_Shadow_Style) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Shadow_Style_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Shadow_Style_StyleDrop = 0,
};

GPBEnumDescriptor *Graphics_Shadow_Style_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Shadow_Style_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Stroke_Style

typedef GPB_ENUM(Graphics_Stroke_Style) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Stroke_Style_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Stroke_Style_StyleSolidLine = 0,
  Graphics_Stroke_Style_StyleSquareDash = 1,
  Graphics_Stroke_Style_StyleShortDash = 2,
  Graphics_Stroke_Style_StyleLongDash = 3,
};

GPBEnumDescriptor *Graphics_Stroke_Style_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Stroke_Style_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Feather_Style

typedef GPB_ENUM(Graphics_Feather_Style) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Feather_Style_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Feather_Style_StyleInside = 0,
  Graphics_Feather_Style_StyleCenter = 1,
  Graphics_Feather_Style_StyleOutside = 2,
};

GPBEnumDescriptor *Graphics_Feather_Style_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Feather_Style_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_VerticalAlignment

typedef GPB_ENUM(Graphics_Text_VerticalAlignment) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_VerticalAlignment_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_VerticalAlignment_VerticalAlignmentTop = 0,
  Graphics_Text_VerticalAlignment_VerticalAlignmentMiddle = 1,
  Graphics_Text_VerticalAlignment_VerticalAlignmentBottom = 2,
};

GPBEnumDescriptor *Graphics_Text_VerticalAlignment_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_VerticalAlignment_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_ScaleBehavior

typedef GPB_ENUM(Graphics_Text_ScaleBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_ScaleBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_ScaleBehavior_ScaleBehaviorNone = 0,
  Graphics_Text_ScaleBehavior_ScaleBehaviorAdjustContainerHeight = 1,
  Graphics_Text_ScaleBehavior_ScaleBehaviorScaleFontDown = 2,
  Graphics_Text_ScaleBehavior_ScaleBehaviorScaleFontUp = 3,
  Graphics_Text_ScaleBehavior_ScaleBehaviorScaleFontUpDown = 4,
};

GPBEnumDescriptor *Graphics_Text_ScaleBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_ScaleBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Transform

typedef GPB_ENUM(Graphics_Text_Transform) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Transform_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Transform_TransformNone = 0,
  Graphics_Text_Transform_TransformSingleLine = 1,
  Graphics_Text_Transform_TransformOneWordPerLine = 2,
  Graphics_Text_Transform_TransformOneCharacterPerLine = 3,
  Graphics_Text_Transform_TransformReplaceLineReturns = 4,
};

GPBEnumDescriptor *Graphics_Text_Transform_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Transform_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_LineFillMask_LineMaskStyle

typedef GPB_ENUM(Graphics_Text_LineFillMask_LineMaskStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_LineFillMask_LineMaskStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_LineFillMask_LineMaskStyle_LineMaskStyleFullWidth = 0,
  Graphics_Text_LineFillMask_LineMaskStyle_LineMaskStyleLineWidth = 1,
  Graphics_Text_LineFillMask_LineMaskStyle_LineMaskStyleMaxLineWidth = 2,
};

GPBEnumDescriptor *Graphics_Text_LineFillMask_LineMaskStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_LineFillMask_LineMaskStyle_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Capitalization

typedef GPB_ENUM(Graphics_Text_Attributes_Capitalization) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Capitalization_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Capitalization_CapitalizationNone = 0,
  Graphics_Text_Attributes_Capitalization_CapitalizationAllCaps = 1,
  Graphics_Text_Attributes_Capitalization_CapitalizationSmallCaps = 2,
  Graphics_Text_Attributes_Capitalization_CapitalizationTitleCase = 3,
  Graphics_Text_Attributes_Capitalization_CapitalizationStartCase = 4,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Capitalization_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Capitalization_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Underline_Style

typedef GPB_ENUM(Graphics_Text_Attributes_Underline_Style) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Underline_Style_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Underline_Style_StyleNone = 0,
  Graphics_Text_Attributes_Underline_Style_StyleSingle = 1,
  Graphics_Text_Attributes_Underline_Style_StyleThick = 2,
  Graphics_Text_Attributes_Underline_Style_StyleDouble = 3,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Underline_Style_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Underline_Style_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Underline_Pattern

typedef GPB_ENUM(Graphics_Text_Attributes_Underline_Pattern) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Underline_Pattern_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Underline_Pattern_PatternSolid = 0,
  Graphics_Text_Attributes_Underline_Pattern_PatternDot = 1,
  Graphics_Text_Attributes_Underline_Pattern_PatternDash = 2,
  Graphics_Text_Attributes_Underline_Pattern_PatternDashDot = 3,
  Graphics_Text_Attributes_Underline_Pattern_PatternDashDotDot = 4,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Underline_Pattern_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Underline_Pattern_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Paragraph_Alignment

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_Alignment) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Paragraph_Alignment_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Paragraph_Alignment_AlignmentLeft = 0,
  Graphics_Text_Attributes_Paragraph_Alignment_AlignmentRight = 1,
  Graphics_Text_Attributes_Paragraph_Alignment_AlignmentCenter = 2,
  Graphics_Text_Attributes_Paragraph_Alignment_AlignmentJustified = 3,
  Graphics_Text_Attributes_Paragraph_Alignment_AlignmentNatural = 4,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Paragraph_Alignment_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Paragraph_Alignment_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Paragraph_TabStop_Alignment

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_TabStop_Alignment) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_AlignmentLeft = 0,
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_AlignmentRight = 1,
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_AlignmentCenter = 2,
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_AlignmentJustified = 3,
  Graphics_Text_Attributes_Paragraph_TabStop_Alignment_AlignmentNatural = 4,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Paragraph_TabStop_Alignment_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Paragraph_TabStop_Alignment_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_Paragraph_TextList_NumberType

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_TextList_NumberType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeBox = 0,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeCheck = 1,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeCircle = 2,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeDiamond = 3,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeDisc = 4,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeHyphen = 5,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeSquare = 6,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeDecimal = 7,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeLowercaseAlpha = 8,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeUppercaseAlpha = 9,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeLowercaseRoman = 10,
  Graphics_Text_Attributes_Paragraph_TextList_NumberType_NumberTypeUppercaseRoman = 11,
};

GPBEnumDescriptor *Graphics_Text_Attributes_Paragraph_TextList_NumberType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_Paragraph_TextList_NumberType_IsValidValue(int32_t value);

#pragma mark - Enum Graphics_Text_Attributes_CustomAttribute_Capitalization

typedef GPB_ENUM(Graphics_Text_Attributes_CustomAttribute_Capitalization) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Graphics_Text_Attributes_CustomAttribute_Capitalization_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Graphics_Text_Attributes_CustomAttribute_Capitalization_CapitalizationNone = 0,
  Graphics_Text_Attributes_CustomAttribute_Capitalization_CapitalizationAllCaps = 1,
  Graphics_Text_Attributes_CustomAttribute_Capitalization_CapitalizationSmallCaps = 2,
  Graphics_Text_Attributes_CustomAttribute_Capitalization_CapitalizationTitleCase = 3,
  Graphics_Text_Attributes_CustomAttribute_Capitalization_CapitalizationStartCase = 4,
};

GPBEnumDescriptor *Graphics_Text_Attributes_CustomAttribute_Capitalization_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Graphics_Text_Attributes_CustomAttribute_Capitalization_IsValidValue(int32_t value);

#pragma mark - Enum Media_VideoDevice_Type

typedef GPB_ENUM(Media_VideoDevice_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_VideoDevice_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_VideoDevice_Type_TypeGeneric = 0,
  Media_VideoDevice_Type_TypeDirectshow = 1,
  Media_VideoDevice_Type_TypeBlackmagic = 2,
  Media_VideoDevice_Type_TypeAja = 3,
  Media_VideoDevice_Type_TypeAv = 4,
  Media_VideoDevice_Type_TypeSyphon = 5,
  Media_VideoDevice_Type_TypeNdi = 6,
  Media_VideoDevice_Type_TypeBluefish = 7,
};

GPBEnumDescriptor *Media_VideoDevice_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_VideoDevice_Type_IsValidValue(int32_t value);

#pragma mark - Enum Media_TransportProperties_PlaybackBehavior

typedef GPB_ENUM(Media_TransportProperties_PlaybackBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_TransportProperties_PlaybackBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_TransportProperties_PlaybackBehavior_PlaybackBehaviorStop = 0,
  Media_TransportProperties_PlaybackBehavior_PlaybackBehaviorLoop = 1,
  Media_TransportProperties_PlaybackBehavior_PlaybackBehaviorLoopForCount = 2,
  Media_TransportProperties_PlaybackBehavior_PlaybackBehaviorLoopForTime = 3,
};

GPBEnumDescriptor *Media_TransportProperties_PlaybackBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_TransportProperties_PlaybackBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Media_DrawingProperties_ScaleBehavior

typedef GPB_ENUM(Media_DrawingProperties_ScaleBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_DrawingProperties_ScaleBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_DrawingProperties_ScaleBehavior_ScaleBehaviorFit = 0,
  Media_DrawingProperties_ScaleBehavior_ScaleBehaviorFill = 1,
  Media_DrawingProperties_ScaleBehavior_ScaleBehaviorStretch = 2,
  Media_DrawingProperties_ScaleBehavior_ScaleBehaviorCustom = 3,
};

GPBEnumDescriptor *Media_DrawingProperties_ScaleBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_DrawingProperties_ScaleBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Media_DrawingProperties_ScaleAlignment

typedef GPB_ENUM(Media_DrawingProperties_ScaleAlignment) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_DrawingProperties_ScaleAlignment_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentMiddleCenter = 0,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentTopLeft = 1,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentTopCenter = 2,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentTopRight = 3,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentMiddleRight = 4,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentBottomRight = 5,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentBottomCenter = 6,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentBottomLeft = 7,
  Media_DrawingProperties_ScaleAlignment_ScaleAlignmentMiddleLeft = 8,
};

GPBEnumDescriptor *Media_DrawingProperties_ScaleAlignment_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_DrawingProperties_ScaleAlignment_IsValidValue(int32_t value);

#pragma mark - Enum Media_DrawingProperties_NativeRotationType

typedef GPB_ENUM(Media_DrawingProperties_NativeRotationType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_DrawingProperties_NativeRotationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_DrawingProperties_NativeRotationType_NativeRotationTypeRotateStandard = 0,
  Media_DrawingProperties_NativeRotationType_NativeRotationTypeRotate90 = 90,
  Media_DrawingProperties_NativeRotationType_NativeRotationTypeRotate180 = 180,
  Media_DrawingProperties_NativeRotationType_NativeRotationTypeRotate270 = 270,
};

GPBEnumDescriptor *Media_DrawingProperties_NativeRotationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_DrawingProperties_NativeRotationType_IsValidValue(int32_t value);

#pragma mark - Enum Media_VideoProperties_FieldType

typedef GPB_ENUM(Media_VideoProperties_FieldType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_VideoProperties_FieldType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_VideoProperties_FieldType_FieldTypeUnknown = 0,
  Media_VideoProperties_FieldType_FieldTypeProgressive = 1,
  Media_VideoProperties_FieldType_FieldTypeInterlacedUpperFirst = 2,
  Media_VideoProperties_FieldType_FieldTypeInterlacedLowerFirst = 3,
};

GPBEnumDescriptor *Media_VideoProperties_FieldType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_VideoProperties_FieldType_IsValidValue(int32_t value);

#pragma mark - Enum Media_VideoProperties_EndBehavior

typedef GPB_ENUM(Media_VideoProperties_EndBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Media_VideoProperties_EndBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Media_VideoProperties_EndBehavior_EndBehaviorStop = 0,
  Media_VideoProperties_EndBehavior_EndBehaviorStopOnBlack = 1,
  Media_VideoProperties_EndBehavior_EndBehaviorStopOnClear = 2,
  Media_VideoProperties_EndBehavior_EndBehaviorFadeToBlack = 3,
  Media_VideoProperties_EndBehavior_EndBehaviorFadeToClear = 4,
};

GPBEnumDescriptor *Media_VideoProperties_EndBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Media_VideoProperties_EndBehavior_IsValidValue(int32_t value);

#pragma mark - GraphicsDataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GraphicsDataRoot : GPBRootObject
@end

#pragma mark - Graphics

GPB_FINAL @interface Graphics : GPBMessage

@end

#pragma mark - Graphics_Element

typedef GPB_ENUM(Graphics_Element_FieldNumber) {
  Graphics_Element_FieldNumber_Uuid = 1,
  Graphics_Element_FieldNumber_Name = 2,
  Graphics_Element_FieldNumber_Bounds = 3,
  Graphics_Element_FieldNumber_Rotation = 4,
  Graphics_Element_FieldNumber_Opacity = 5,
  Graphics_Element_FieldNumber_Locked = 6,
  Graphics_Element_FieldNumber_AspectRatioLocked = 7,
  Graphics_Element_FieldNumber_Path = 8,
  Graphics_Element_FieldNumber_Fill = 9,
  Graphics_Element_FieldNumber_Stroke = 10,
  Graphics_Element_FieldNumber_Shadow = 11,
  Graphics_Element_FieldNumber_Feather = 12,
  Graphics_Element_FieldNumber_Text = 13,
  Graphics_Element_FieldNumber_TextLineMask = 14,
  Graphics_Element_FieldNumber_FlipMode = 15,
  Graphics_Element_FieldNumber_Hidden = 16,
};

typedef GPB_ENUM(Graphics_Element_Mask_OneOfCase) {
  Graphics_Element_Mask_OneOfCase_GPBUnsetOneOfCase = 0,
  Graphics_Element_Mask_OneOfCase_TextLineMask = 14,
};

GPB_FINAL @interface Graphics_Element : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Rect *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

@property(nonatomic, readwrite) double rotation;

@property(nonatomic, readwrite) double opacity;

@property(nonatomic, readwrite) BOOL locked;

@property(nonatomic, readwrite) BOOL aspectRatioLocked;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path *path;
/** Test to see if @c path has been set. */
@property(nonatomic, readwrite) BOOL hasPath;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Stroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Shadow *shadow;
/** Test to see if @c shadow has been set. */
@property(nonatomic, readwrite) BOOL hasShadow;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Feather *feather;
/** Test to see if @c feather has been set. */
@property(nonatomic, readwrite) BOOL hasFeather;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite) Graphics_Element_FlipMode flipMode;

@property(nonatomic, readwrite) BOOL hidden;

@property(nonatomic, readonly) Graphics_Element_Mask_OneOfCase maskOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_LineFillMask *textLineMask;

@end

/**
 * Fetches the raw value of a @c Graphics_Element's @c flipMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Element_FlipMode_RawValue(Graphics_Element *message);
/**
 * Sets the raw value of an @c Graphics_Element's @c flipMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Element_FlipMode_RawValue(Graphics_Element *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'mask'.
 **/
void Graphics_Element_ClearMaskOneOfCase(Graphics_Element *message);

#pragma mark - Graphics_Rect

typedef GPB_ENUM(Graphics_Rect_FieldNumber) {
  Graphics_Rect_FieldNumber_Origin = 1,
  Graphics_Rect_FieldNumber_Size = 2,
};

GPB_FINAL @interface Graphics_Rect : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Point *origin;
/** Test to see if @c origin has been set. */
@property(nonatomic, readwrite) BOOL hasOrigin;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Size *size;
/** Test to see if @c size has been set. */
@property(nonatomic, readwrite) BOOL hasSize;

@end

#pragma mark - Graphics_Point

typedef GPB_ENUM(Graphics_Point_FieldNumber) {
  Graphics_Point_FieldNumber_X = 1,
  Graphics_Point_FieldNumber_Y = 2,
};

GPB_FINAL @interface Graphics_Point : GPBMessage

@property(nonatomic, readwrite) double x;

@property(nonatomic, readwrite) double y;

@end

#pragma mark - Graphics_Size

typedef GPB_ENUM(Graphics_Size_FieldNumber) {
  Graphics_Size_FieldNumber_Width = 1,
  Graphics_Size_FieldNumber_Height = 2,
};

GPB_FINAL @interface Graphics_Size : GPBMessage

@property(nonatomic, readwrite) double width;

@property(nonatomic, readwrite) double height;

@end

#pragma mark - Graphics_EdgeInsets

typedef GPB_ENUM(Graphics_EdgeInsets_FieldNumber) {
  Graphics_EdgeInsets_FieldNumber_Left = 1,
  Graphics_EdgeInsets_FieldNumber_Right = 2,
  Graphics_EdgeInsets_FieldNumber_Top = 3,
  Graphics_EdgeInsets_FieldNumber_Bottom = 4,
};

GPB_FINAL @interface Graphics_EdgeInsets : GPBMessage

@property(nonatomic, readwrite) double left;

@property(nonatomic, readwrite) double right;

@property(nonatomic, readwrite) double top;

@property(nonatomic, readwrite) double bottom;

@end

#pragma mark - Graphics_Path

typedef GPB_ENUM(Graphics_Path_FieldNumber) {
  Graphics_Path_FieldNumber_Closed = 1,
  Graphics_Path_FieldNumber_PointsArray = 2,
  Graphics_Path_FieldNumber_Shape = 3,
};

GPB_FINAL @interface Graphics_Path : GPBMessage

@property(nonatomic, readwrite) BOOL closed;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Path_BezierPoint*> *pointsArray;
/** The number of items in @c pointsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pointsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path_Shape *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@end

#pragma mark - Graphics_Path_BezierPoint

typedef GPB_ENUM(Graphics_Path_BezierPoint_FieldNumber) {
  Graphics_Path_BezierPoint_FieldNumber_Point = 1,
  Graphics_Path_BezierPoint_FieldNumber_Q0 = 2,
  Graphics_Path_BezierPoint_FieldNumber_Q1 = 3,
  Graphics_Path_BezierPoint_FieldNumber_Curved = 4,
};

GPB_FINAL @interface Graphics_Path_BezierPoint : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Point *point;
/** Test to see if @c point has been set. */
@property(nonatomic, readwrite) BOOL hasPoint;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Point *q0;
/** Test to see if @c q0 has been set. */
@property(nonatomic, readwrite) BOOL hasQ0;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Point *q1;
/** Test to see if @c q1 has been set. */
@property(nonatomic, readwrite) BOOL hasQ1;

@property(nonatomic, readwrite) BOOL curved;

@end

#pragma mark - Graphics_Path_Shape

typedef GPB_ENUM(Graphics_Path_Shape_FieldNumber) {
  Graphics_Path_Shape_FieldNumber_Type = 1,
  Graphics_Path_Shape_FieldNumber_RoundedRectangle = 2,
  Graphics_Path_Shape_FieldNumber_Polygon = 3,
  Graphics_Path_Shape_FieldNumber_Star = 4,
  Graphics_Path_Shape_FieldNumber_Arrow = 5,
};

typedef GPB_ENUM(Graphics_Path_Shape_AdditionalData_OneOfCase) {
  Graphics_Path_Shape_AdditionalData_OneOfCase_GPBUnsetOneOfCase = 0,
  Graphics_Path_Shape_AdditionalData_OneOfCase_RoundedRectangle = 2,
  Graphics_Path_Shape_AdditionalData_OneOfCase_Polygon = 3,
  Graphics_Path_Shape_AdditionalData_OneOfCase_Star = 4,
  Graphics_Path_Shape_AdditionalData_OneOfCase_Arrow = 5,
};

GPB_FINAL @interface Graphics_Path_Shape : GPBMessage

@property(nonatomic, readwrite) Graphics_Path_Shape_Type type;

@property(nonatomic, readonly) Graphics_Path_Shape_AdditionalData_OneOfCase additionalDataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path_Shape_RoundedRectangle *roundedRectangle;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path_Shape_Polygon *polygon;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path_Shape_Star *star;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Path_Shape_Arrow *arrow;

@end

/**
 * Fetches the raw value of a @c Graphics_Path_Shape's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Path_Shape_Type_RawValue(Graphics_Path_Shape *message);
/**
 * Sets the raw value of an @c Graphics_Path_Shape's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Path_Shape_Type_RawValue(Graphics_Path_Shape *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'additionalData'.
 **/
void Graphics_Path_Shape_ClearAdditionalDataOneOfCase(Graphics_Path_Shape *message);

#pragma mark - Graphics_Path_Shape_RoundedRectangle

typedef GPB_ENUM(Graphics_Path_Shape_RoundedRectangle_FieldNumber) {
  Graphics_Path_Shape_RoundedRectangle_FieldNumber_Roundness = 1,
};

GPB_FINAL @interface Graphics_Path_Shape_RoundedRectangle : GPBMessage

@property(nonatomic, readwrite) double roundness;

@end

#pragma mark - Graphics_Path_Shape_Arrow

typedef GPB_ENUM(Graphics_Path_Shape_Arrow_FieldNumber) {
  Graphics_Path_Shape_Arrow_FieldNumber_Corner = 1,
};

GPB_FINAL @interface Graphics_Path_Shape_Arrow : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Point *corner;
/** Test to see if @c corner has been set. */
@property(nonatomic, readwrite) BOOL hasCorner;

@end

#pragma mark - Graphics_Path_Shape_Polygon

typedef GPB_ENUM(Graphics_Path_Shape_Polygon_FieldNumber) {
  Graphics_Path_Shape_Polygon_FieldNumber_NumberSides = 1,
};

GPB_FINAL @interface Graphics_Path_Shape_Polygon : GPBMessage

@property(nonatomic, readwrite) uint32_t numberSides;

@end

#pragma mark - Graphics_Path_Shape_Star

typedef GPB_ENUM(Graphics_Path_Shape_Star_FieldNumber) {
  Graphics_Path_Shape_Star_FieldNumber_InnerRadius = 1,
  Graphics_Path_Shape_Star_FieldNumber_NumberPoints = 2,
};

GPB_FINAL @interface Graphics_Path_Shape_Star : GPBMessage

@property(nonatomic, readwrite) double innerRadius;

@property(nonatomic, readwrite) uint32_t numberPoints;

@end

#pragma mark - Graphics_Fill

typedef GPB_ENUM(Graphics_Fill_FieldNumber) {
  Graphics_Fill_FieldNumber_Color = 1,
  Graphics_Fill_FieldNumber_Gradient = 2,
  Graphics_Fill_FieldNumber_Media = 3,
  Graphics_Fill_FieldNumber_Enable = 4,
};

typedef GPB_ENUM(Graphics_Fill_FillType_OneOfCase) {
  Graphics_Fill_FillType_OneOfCase_GPBUnsetOneOfCase = 0,
  Graphics_Fill_FillType_OneOfCase_Color = 1,
  Graphics_Fill_FillType_OneOfCase_Gradient = 2,
  Graphics_Fill_FillType_OneOfCase_Media = 3,
};

GPB_FINAL @interface Graphics_Fill : GPBMessage

@property(nonatomic, readwrite) BOOL enable;

@property(nonatomic, readonly) Graphics_Fill_FillType_OneOfCase fillTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Gradient *gradient;

@property(nonatomic, readwrite, strong, null_resettable) Media *media;

@end

/**
 * Clears whatever value was set for the oneof 'fillType'.
 **/
void Graphics_Fill_ClearFillTypeOneOfCase(Graphics_Fill *message);

#pragma mark - Graphics_Gradient

typedef GPB_ENUM(Graphics_Gradient_FieldNumber) {
  Graphics_Gradient_FieldNumber_Type = 1,
  Graphics_Gradient_FieldNumber_Angle = 2,
  Graphics_Gradient_FieldNumber_Length = 3,
  Graphics_Gradient_FieldNumber_StopsArray = 4,
};

GPB_FINAL @interface Graphics_Gradient : GPBMessage

@property(nonatomic, readwrite) Graphics_Gradient_Type type;

@property(nonatomic, readwrite) double angle;

@property(nonatomic, readwrite) double length;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Gradient_ColorStop*> *stopsArray;
/** The number of items in @c stopsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stopsArray_Count;

@end

/**
 * Fetches the raw value of a @c Graphics_Gradient's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Gradient_Type_RawValue(Graphics_Gradient *message);
/**
 * Sets the raw value of an @c Graphics_Gradient's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Gradient_Type_RawValue(Graphics_Gradient *message, int32_t value);

#pragma mark - Graphics_Gradient_ColorStop

typedef GPB_ENUM(Graphics_Gradient_ColorStop_FieldNumber) {
  Graphics_Gradient_ColorStop_FieldNumber_Color = 1,
  Graphics_Gradient_ColorStop_FieldNumber_Position = 2,
  Graphics_Gradient_ColorStop_FieldNumber_BlendPoint = 3,
};

GPB_FINAL @interface Graphics_Gradient_ColorStop : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite) double position;

@property(nonatomic, readwrite) double blendPoint;

@end

#pragma mark - Graphics_Shadow

typedef GPB_ENUM(Graphics_Shadow_FieldNumber) {
  Graphics_Shadow_FieldNumber_Style = 1,
  Graphics_Shadow_FieldNumber_Angle = 2,
  Graphics_Shadow_FieldNumber_Offset = 3,
  Graphics_Shadow_FieldNumber_Radius = 4,
  Graphics_Shadow_FieldNumber_Color = 5,
  Graphics_Shadow_FieldNumber_Opacity = 6,
  Graphics_Shadow_FieldNumber_Enable = 7,
};

GPB_FINAL @interface Graphics_Shadow : GPBMessage

@property(nonatomic, readwrite) Graphics_Shadow_Style style;

@property(nonatomic, readwrite) double angle;

@property(nonatomic, readwrite) double offset;

@property(nonatomic, readwrite) double radius;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite) double opacity;

@property(nonatomic, readwrite) BOOL enable;

@end

/**
 * Fetches the raw value of a @c Graphics_Shadow's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Shadow_Style_RawValue(Graphics_Shadow *message);
/**
 * Sets the raw value of an @c Graphics_Shadow's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Shadow_Style_RawValue(Graphics_Shadow *message, int32_t value);

#pragma mark - Graphics_Stroke

typedef GPB_ENUM(Graphics_Stroke_FieldNumber) {
  Graphics_Stroke_FieldNumber_Style = 1,
  Graphics_Stroke_FieldNumber_Width = 2,
  Graphics_Stroke_FieldNumber_Color = 3,
  Graphics_Stroke_FieldNumber_PatternArray = 4,
  Graphics_Stroke_FieldNumber_Enable = 5,
};

GPB_FINAL @interface Graphics_Stroke : GPBMessage

@property(nonatomic, readwrite) Graphics_Stroke_Style style;

@property(nonatomic, readwrite) double width;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *patternArray;
/** The number of items in @c patternArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger patternArray_Count;

@property(nonatomic, readwrite) BOOL enable;

@end

/**
 * Fetches the raw value of a @c Graphics_Stroke's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Stroke_Style_RawValue(Graphics_Stroke *message);
/**
 * Sets the raw value of an @c Graphics_Stroke's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Stroke_Style_RawValue(Graphics_Stroke *message, int32_t value);

#pragma mark - Graphics_Feather

typedef GPB_ENUM(Graphics_Feather_FieldNumber) {
  Graphics_Feather_FieldNumber_Style = 1,
  Graphics_Feather_FieldNumber_Radius = 2,
  Graphics_Feather_FieldNumber_Enable = 3,
};

GPB_FINAL @interface Graphics_Feather : GPBMessage

@property(nonatomic, readwrite) Graphics_Feather_Style style;

@property(nonatomic, readwrite) double radius;

@property(nonatomic, readwrite) BOOL enable;

@end

/**
 * Fetches the raw value of a @c Graphics_Feather's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Feather_Style_RawValue(Graphics_Feather *message);
/**
 * Sets the raw value of an @c Graphics_Feather's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Feather_Style_RawValue(Graphics_Feather *message, int32_t value);

#pragma mark - Graphics_Text

typedef GPB_ENUM(Graphics_Text_FieldNumber) {
  Graphics_Text_FieldNumber_Attributes = 3,
  Graphics_Text_FieldNumber_Shadow = 4,
  Graphics_Text_FieldNumber_RtfData = 5,
  Graphics_Text_FieldNumber_VerticalAlignment = 6,
  Graphics_Text_FieldNumber_ScaleBehavior = 7,
  Graphics_Text_FieldNumber_Margins = 8,
  Graphics_Text_FieldNumber_IsSuperscriptStandardized = 9,
  Graphics_Text_FieldNumber_Transform = 10,
  Graphics_Text_FieldNumber_TransformDelimiter = 11,
};

GPB_FINAL @interface Graphics_Text : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes *attributes;
/** Test to see if @c attributes has been set. */
@property(nonatomic, readwrite) BOOL hasAttributes;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Shadow *shadow;
/** Test to see if @c shadow has been set. */
@property(nonatomic, readwrite) BOOL hasShadow;

@property(nonatomic, readwrite, copy, null_resettable) NSData *rtfData;

@property(nonatomic, readwrite) Graphics_Text_VerticalAlignment verticalAlignment;

@property(nonatomic, readwrite) Graphics_Text_ScaleBehavior scaleBehavior;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_EdgeInsets *margins;
/** Test to see if @c margins has been set. */
@property(nonatomic, readwrite) BOOL hasMargins;

@property(nonatomic, readwrite) BOOL isSuperscriptStandardized;

@property(nonatomic, readwrite) Graphics_Text_Transform transform;

@property(nonatomic, readwrite, copy, null_resettable) NSString *transformDelimiter;

@end

/**
 * Fetches the raw value of a @c Graphics_Text's @c verticalAlignment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_VerticalAlignment_RawValue(Graphics_Text *message);
/**
 * Sets the raw value of an @c Graphics_Text's @c verticalAlignment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_VerticalAlignment_RawValue(Graphics_Text *message, int32_t value);

/**
 * Fetches the raw value of a @c Graphics_Text's @c scaleBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_ScaleBehavior_RawValue(Graphics_Text *message);
/**
 * Sets the raw value of an @c Graphics_Text's @c scaleBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_ScaleBehavior_RawValue(Graphics_Text *message, int32_t value);

/**
 * Fetches the raw value of a @c Graphics_Text's @c transform property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Transform_RawValue(Graphics_Text *message);
/**
 * Sets the raw value of an @c Graphics_Text's @c transform property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Transform_RawValue(Graphics_Text *message, int32_t value);

#pragma mark - Graphics_Text_LineFillMask

typedef GPB_ENUM(Graphics_Text_LineFillMask_FieldNumber) {
  Graphics_Text_LineFillMask_FieldNumber_Enabled = 1,
  Graphics_Text_LineFillMask_FieldNumber_HeightOffset = 2,
  Graphics_Text_LineFillMask_FieldNumber_VerticalOffset = 3,
  Graphics_Text_LineFillMask_FieldNumber_MaskStyle = 4,
  Graphics_Text_LineFillMask_FieldNumber_WidthOffset = 5,
  Graphics_Text_LineFillMask_FieldNumber_HorizontalOffset = 6,
};

GPB_FINAL @interface Graphics_Text_LineFillMask : GPBMessage

@property(nonatomic, readwrite) BOOL enabled;

@property(nonatomic, readwrite) double heightOffset;

@property(nonatomic, readwrite) double verticalOffset;

@property(nonatomic, readwrite) Graphics_Text_LineFillMask_LineMaskStyle maskStyle;

@property(nonatomic, readwrite) double widthOffset;

@property(nonatomic, readwrite) double horizontalOffset;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_LineFillMask's @c maskStyle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_LineFillMask_MaskStyle_RawValue(Graphics_Text_LineFillMask *message);
/**
 * Sets the raw value of an @c Graphics_Text_LineFillMask's @c maskStyle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_LineFillMask_MaskStyle_RawValue(Graphics_Text_LineFillMask *message, int32_t value);

#pragma mark - Graphics_Text_GradientFill

typedef GPB_ENUM(Graphics_Text_GradientFill_FieldNumber) {
  Graphics_Text_GradientFill_FieldNumber_Gradient = 1,
  Graphics_Text_GradientFill_FieldNumber_StretchToDocumentBounds = 2,
};

GPB_FINAL @interface Graphics_Text_GradientFill : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Gradient *gradient;
/** Test to see if @c gradient has been set. */
@property(nonatomic, readwrite) BOOL hasGradient;

@property(nonatomic, readwrite) BOOL stretchToDocumentBounds;

@end

#pragma mark - Graphics_Text_Attributes

typedef GPB_ENUM(Graphics_Text_Attributes_FieldNumber) {
  Graphics_Text_Attributes_FieldNumber_Font = 1,
  Graphics_Text_Attributes_FieldNumber_Capitalization = 2,
  Graphics_Text_Attributes_FieldNumber_TextSolidFill = 3,
  Graphics_Text_Attributes_FieldNumber_UnderlineStyle = 4,
  Graphics_Text_Attributes_FieldNumber_UnderlineColor = 5,
  Graphics_Text_Attributes_FieldNumber_ParagraphStyle = 6,
  Graphics_Text_Attributes_FieldNumber_Kerning = 7,
  Graphics_Text_Attributes_FieldNumber_Superscript = 8,
  Graphics_Text_Attributes_FieldNumber_StrikethroughStyle = 9,
  Graphics_Text_Attributes_FieldNumber_StrikethroughColor = 10,
  Graphics_Text_Attributes_FieldNumber_StrokeWidth = 11,
  Graphics_Text_Attributes_FieldNumber_StrokeColor = 12,
  Graphics_Text_Attributes_FieldNumber_CustomAttributesArray = 13,
  Graphics_Text_Attributes_FieldNumber_TextGradientFill = 14,
  Graphics_Text_Attributes_FieldNumber_BackgroundColor = 15,
};

typedef GPB_ENUM(Graphics_Text_Attributes_Fill_OneOfCase) {
  Graphics_Text_Attributes_Fill_OneOfCase_GPBUnsetOneOfCase = 0,
  Graphics_Text_Attributes_Fill_OneOfCase_TextSolidFill = 3,
  Graphics_Text_Attributes_Fill_OneOfCase_TextGradientFill = 14,
};

GPB_FINAL @interface Graphics_Text_Attributes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes_Font *font;
/** Test to see if @c font has been set. */
@property(nonatomic, readwrite) BOOL hasFont;

@property(nonatomic, readwrite) Graphics_Text_Attributes_Capitalization capitalization;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes_Underline *underlineStyle;
/** Test to see if @c underlineStyle has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlineStyle;

@property(nonatomic, readwrite, strong, null_resettable) Color *underlineColor;
/** Test to see if @c underlineColor has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlineColor;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes_Paragraph *paragraphStyle;
/** Test to see if @c paragraphStyle has been set. */
@property(nonatomic, readwrite) BOOL hasParagraphStyle;

@property(nonatomic, readwrite) double kerning;

@property(nonatomic, readwrite) int32_t superscript;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes_Underline *strikethroughStyle;
/** Test to see if @c strikethroughStyle has been set. */
@property(nonatomic, readwrite) BOOL hasStrikethroughStyle;

@property(nonatomic, readwrite, strong, null_resettable) Color *strikethroughColor;
/** Test to see if @c strikethroughColor has been set. */
@property(nonatomic, readwrite) BOOL hasStrikethroughColor;

@property(nonatomic, readwrite) double strokeWidth;

@property(nonatomic, readwrite, strong, null_resettable) Color *strokeColor;
/** Test to see if @c strokeColor has been set. */
@property(nonatomic, readwrite) BOOL hasStrokeColor;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Text_Attributes_CustomAttribute*> *customAttributesArray;
/** The number of items in @c customAttributesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger customAttributesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Color *backgroundColor;
/** Test to see if @c backgroundColor has been set. */
@property(nonatomic, readwrite) BOOL hasBackgroundColor;

@property(nonatomic, readonly) Graphics_Text_Attributes_Fill_OneOfCase fillOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Color *textSolidFill;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_GradientFill *textGradientFill;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes's @c capitalization property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Capitalization_RawValue(Graphics_Text_Attributes *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes's @c capitalization property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Capitalization_RawValue(Graphics_Text_Attributes *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'fill'.
 **/
void Graphics_Text_Attributes_ClearFillOneOfCase(Graphics_Text_Attributes *message);

#pragma mark - Graphics_Text_Attributes_Font

typedef GPB_ENUM(Graphics_Text_Attributes_Font_FieldNumber) {
  Graphics_Text_Attributes_Font_FieldNumber_Name = 1,
  Graphics_Text_Attributes_Font_FieldNumber_Size = 2,
  Graphics_Text_Attributes_Font_FieldNumber_Italic = 4,
  Graphics_Text_Attributes_Font_FieldNumber_Bold = 8,
  Graphics_Text_Attributes_Font_FieldNumber_Family = 9,
  Graphics_Text_Attributes_Font_FieldNumber_Face = 10,
};

GPB_FINAL @interface Graphics_Text_Attributes_Font : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) double size;

@property(nonatomic, readwrite) BOOL italic;

@property(nonatomic, readwrite) BOOL bold;

@property(nonatomic, readwrite, copy, null_resettable) NSString *family;

@property(nonatomic, readwrite, copy, null_resettable) NSString *face;

@end

#pragma mark - Graphics_Text_Attributes_Underline

typedef GPB_ENUM(Graphics_Text_Attributes_Underline_FieldNumber) {
  Graphics_Text_Attributes_Underline_FieldNumber_Style = 1,
  Graphics_Text_Attributes_Underline_FieldNumber_Pattern = 2,
  Graphics_Text_Attributes_Underline_FieldNumber_ByWord = 3,
};

GPB_FINAL @interface Graphics_Text_Attributes_Underline : GPBMessage

@property(nonatomic, readwrite) Graphics_Text_Attributes_Underline_Style style;

@property(nonatomic, readwrite) Graphics_Text_Attributes_Underline_Pattern pattern;

@property(nonatomic, readwrite) BOOL byWord;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_Underline's @c style property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Underline_Style_RawValue(Graphics_Text_Attributes_Underline *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_Underline's @c style property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Underline_Style_RawValue(Graphics_Text_Attributes_Underline *message, int32_t value);

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_Underline's @c pattern property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Underline_Pattern_RawValue(Graphics_Text_Attributes_Underline *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_Underline's @c pattern property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Underline_Pattern_RawValue(Graphics_Text_Attributes_Underline *message, int32_t value);

#pragma mark - Graphics_Text_Attributes_Paragraph

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_FieldNumber) {
  Graphics_Text_Attributes_Paragraph_FieldNumber_Alignment = 1,
  Graphics_Text_Attributes_Paragraph_FieldNumber_FirstLineHeadIndent = 2,
  Graphics_Text_Attributes_Paragraph_FieldNumber_HeadIndent = 3,
  Graphics_Text_Attributes_Paragraph_FieldNumber_TailIndent = 4,
  Graphics_Text_Attributes_Paragraph_FieldNumber_LineHeightMultiple = 5,
  Graphics_Text_Attributes_Paragraph_FieldNumber_MaximumLineHeight = 6,
  Graphics_Text_Attributes_Paragraph_FieldNumber_MinimumLineHeight = 7,
  Graphics_Text_Attributes_Paragraph_FieldNumber_LineSpacing = 8,
  Graphics_Text_Attributes_Paragraph_FieldNumber_ParagraphSpacing = 9,
  Graphics_Text_Attributes_Paragraph_FieldNumber_ParagraphSpacingBefore = 10,
  Graphics_Text_Attributes_Paragraph_FieldNumber_TabStopsArray = 11,
  Graphics_Text_Attributes_Paragraph_FieldNumber_DefaultTabInterval = 12,
  Graphics_Text_Attributes_Paragraph_FieldNumber_TextList = 13,
  Graphics_Text_Attributes_Paragraph_FieldNumber_TextListsArray = 14,
};

GPB_FINAL @interface Graphics_Text_Attributes_Paragraph : GPBMessage

@property(nonatomic, readwrite) Graphics_Text_Attributes_Paragraph_Alignment alignment;

@property(nonatomic, readwrite) double firstLineHeadIndent;

@property(nonatomic, readwrite) double headIndent;

@property(nonatomic, readwrite) double tailIndent;

@property(nonatomic, readwrite) double lineHeightMultiple;

@property(nonatomic, readwrite) double maximumLineHeight;

@property(nonatomic, readwrite) double minimumLineHeight;

@property(nonatomic, readwrite) double lineSpacing;

@property(nonatomic, readwrite) double paragraphSpacing;

@property(nonatomic, readwrite) double paragraphSpacingBefore;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Text_Attributes_Paragraph_TabStop*> *tabStopsArray;
/** The number of items in @c tabStopsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tabStopsArray_Count;

@property(nonatomic, readwrite) double defaultTabInterval;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_Attributes_Paragraph_TextList *textList;
/** Test to see if @c textList has been set. */
@property(nonatomic, readwrite) BOOL hasTextList;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Text_Attributes_Paragraph_TextList*> *textListsArray;
/** The number of items in @c textListsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger textListsArray_Count;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_Paragraph's @c alignment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Paragraph_Alignment_RawValue(Graphics_Text_Attributes_Paragraph *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_Paragraph's @c alignment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Paragraph_Alignment_RawValue(Graphics_Text_Attributes_Paragraph *message, int32_t value);

#pragma mark - Graphics_Text_Attributes_Paragraph_TabStop

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_TabStop_FieldNumber) {
  Graphics_Text_Attributes_Paragraph_TabStop_FieldNumber_Location = 1,
  Graphics_Text_Attributes_Paragraph_TabStop_FieldNumber_Alignment = 2,
};

GPB_FINAL @interface Graphics_Text_Attributes_Paragraph_TabStop : GPBMessage

@property(nonatomic, readwrite) double location;

@property(nonatomic, readwrite) Graphics_Text_Attributes_Paragraph_TabStop_Alignment alignment;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_Paragraph_TabStop's @c alignment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Paragraph_TabStop_Alignment_RawValue(Graphics_Text_Attributes_Paragraph_TabStop *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_Paragraph_TabStop's @c alignment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Paragraph_TabStop_Alignment_RawValue(Graphics_Text_Attributes_Paragraph_TabStop *message, int32_t value);

#pragma mark - Graphics_Text_Attributes_Paragraph_TextList

typedef GPB_ENUM(Graphics_Text_Attributes_Paragraph_TextList_FieldNumber) {
  Graphics_Text_Attributes_Paragraph_TextList_FieldNumber_IsEnabled = 1,
  Graphics_Text_Attributes_Paragraph_TextList_FieldNumber_NumberType = 2,
  Graphics_Text_Attributes_Paragraph_TextList_FieldNumber_Prefix = 3,
  Graphics_Text_Attributes_Paragraph_TextList_FieldNumber_Postfix = 4,
  Graphics_Text_Attributes_Paragraph_TextList_FieldNumber_StartingNumber = 5,
};

GPB_FINAL @interface Graphics_Text_Attributes_Paragraph_TextList : GPBMessage

@property(nonatomic, readwrite) BOOL isEnabled;

@property(nonatomic, readwrite) Graphics_Text_Attributes_Paragraph_TextList_NumberType numberType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *prefix;

@property(nonatomic, readwrite, copy, null_resettable) NSString *postfix;

@property(nonatomic, readwrite) int32_t startingNumber;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_Paragraph_TextList's @c numberType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_Paragraph_TextList_NumberType_RawValue(Graphics_Text_Attributes_Paragraph_TextList *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_Paragraph_TextList's @c numberType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_Paragraph_TextList_NumberType_RawValue(Graphics_Text_Attributes_Paragraph_TextList *message, int32_t value);

#pragma mark - Graphics_Text_Attributes_CustomAttribute

typedef GPB_ENUM(Graphics_Text_Attributes_CustomAttribute_FieldNumber) {
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_Range = 1,
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_Capitalization = 2,
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_OriginalFontSize = 3,
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_FontScaleFactor = 4,
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_TextGradientFill = 5,
  Graphics_Text_Attributes_CustomAttribute_FieldNumber_ShouldPreserveForegroundColor = 6,
};

typedef GPB_ENUM(Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase) {
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_GPBUnsetOneOfCase = 0,
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_Capitalization = 2,
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_OriginalFontSize = 3,
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_FontScaleFactor = 4,
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_TextGradientFill = 5,
  Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase_ShouldPreserveForegroundColor = 6,
};

GPB_FINAL @interface Graphics_Text_Attributes_CustomAttribute : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) IntRange *range;
/** Test to see if @c range has been set. */
@property(nonatomic, readwrite) BOOL hasRange;

@property(nonatomic, readonly) Graphics_Text_Attributes_CustomAttribute_Attribute_OneOfCase attributeOneOfCase;

@property(nonatomic, readwrite) Graphics_Text_Attributes_CustomAttribute_Capitalization capitalization;

@property(nonatomic, readwrite) double originalFontSize;

@property(nonatomic, readwrite) double fontScaleFactor;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Text_GradientFill *textGradientFill;

@property(nonatomic, readwrite) BOOL shouldPreserveForegroundColor;

@end

/**
 * Fetches the raw value of a @c Graphics_Text_Attributes_CustomAttribute's @c capitalization property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Graphics_Text_Attributes_CustomAttribute_Capitalization_RawValue(Graphics_Text_Attributes_CustomAttribute *message);
/**
 * Sets the raw value of an @c Graphics_Text_Attributes_CustomAttribute's @c capitalization property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphics_Text_Attributes_CustomAttribute_Capitalization_RawValue(Graphics_Text_Attributes_CustomAttribute *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'attribute'.
 **/
void Graphics_Text_Attributes_CustomAttribute_ClearAttributeOneOfCase(Graphics_Text_Attributes_CustomAttribute *message);

#pragma mark - Media

typedef GPB_ENUM(Media_FieldNumber) {
  Media_FieldNumber_Uuid = 1,
  Media_FieldNumber_URL = 2,
  Media_FieldNumber_Metadata = 3,
  Media_FieldNumber_Audio = 4,
  Media_FieldNumber_Image = 5,
  Media_FieldNumber_Video = 6,
  Media_FieldNumber_LiveVideo = 7,
  Media_FieldNumber_WebContent = 8,
};

typedef GPB_ENUM(Media_TypeProperties_OneOfCase) {
  Media_TypeProperties_OneOfCase_GPBUnsetOneOfCase = 0,
  Media_TypeProperties_OneOfCase_Audio = 4,
  Media_TypeProperties_OneOfCase_Image = 5,
  Media_TypeProperties_OneOfCase_Video = 6,
  Media_TypeProperties_OneOfCase_LiveVideo = 7,
  Media_TypeProperties_OneOfCase_WebContent = 8,
};

GPB_FINAL @interface Media : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite, strong, null_resettable) Media_Metadata *metadata;
/** Test to see if @c metadata has been set. */
@property(nonatomic, readwrite) BOOL hasMetadata;

@property(nonatomic, readonly) Media_TypeProperties_OneOfCase typePropertiesOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Media_AudioTypeProperties *audio;

@property(nonatomic, readwrite, strong, null_resettable) Media_ImageTypeProperties *image;

@property(nonatomic, readwrite, strong, null_resettable) Media_VideoTypeProperties *video;

@property(nonatomic, readwrite, strong, null_resettable) Media_LiveVideoTypeProperties *liveVideo;

@property(nonatomic, readwrite, strong, null_resettable) Media_WebContentTypeProperties *webContent;

@end

/**
 * Clears whatever value was set for the oneof 'typeProperties'.
 **/
void Media_ClearTypePropertiesOneOfCase(Media *message);

#pragma mark - Media_Metadata

typedef GPB_ENUM(Media_Metadata_FieldNumber) {
  Media_Metadata_FieldNumber_ManufactureName = 1,
  Media_Metadata_FieldNumber_ManufactureURL = 2,
  Media_Metadata_FieldNumber_Information = 3,
  Media_Metadata_FieldNumber_Artist = 4,
  Media_Metadata_FieldNumber_Format = 5,
};

GPB_FINAL @interface Media_Metadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *manufactureName;

@property(nonatomic, readwrite, strong, null_resettable) URL *manufactureURL;
/** Test to see if @c manufactureURL has been set. */
@property(nonatomic, readwrite) BOOL hasManufactureURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *information;

@property(nonatomic, readwrite, copy, null_resettable) NSString *artist;

@property(nonatomic, readwrite, copy, null_resettable) NSString *format;

@end

#pragma mark - Media_VideoDevice

typedef GPB_ENUM(Media_VideoDevice_FieldNumber) {
  Media_VideoDevice_FieldNumber_Type = 1,
  Media_VideoDevice_FieldNumber_Name = 2,
  Media_VideoDevice_FieldNumber_UniqueId = 3,
  Media_VideoDevice_FieldNumber_ModelId = 4,
  Media_VideoDevice_FieldNumber_FormatIndex = 5,
  Media_VideoDevice_FieldNumber_AudioRouting = 6,
};

GPB_FINAL @interface Media_VideoDevice : GPBMessage

@property(nonatomic, readwrite) Media_VideoDevice_Type type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modelId;

@property(nonatomic, readwrite) uint32_t formatIndex;

@property(nonatomic, readwrite, strong, null_resettable) DigitalAudio_Device_Routing *audioRouting;
/** Test to see if @c audioRouting has been set. */
@property(nonatomic, readwrite) BOOL hasAudioRouting;

@end

/**
 * Fetches the raw value of a @c Media_VideoDevice's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_VideoDevice_Type_RawValue(Media_VideoDevice *message);
/**
 * Sets the raw value of an @c Media_VideoDevice's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_VideoDevice_Type_RawValue(Media_VideoDevice *message, int32_t value);

#pragma mark - Media_AudioDevice

typedef GPB_ENUM(Media_AudioDevice_FieldNumber) {
  Media_AudioDevice_FieldNumber_Name = 1,
  Media_AudioDevice_FieldNumber_UniqueId = 2,
  Media_AudioDevice_FieldNumber_ModelId = 3,
  Media_AudioDevice_FieldNumber_ChannelCount = 4,
};

GPB_FINAL @interface Media_AudioDevice : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modelId;

@property(nonatomic, readwrite) uint32_t channelCount;

@end

#pragma mark - Media_Audio

GPB_FINAL @interface Media_Audio : GPBMessage

@end

#pragma mark - Media_Audio_Channel

typedef GPB_ENUM(Media_Audio_Channel_FieldNumber) {
  Media_Audio_Channel_FieldNumber_Index = 1,
  Media_Audio_Channel_FieldNumber_Muted = 2,
  Media_Audio_Channel_FieldNumber_Volume = 3,
  Media_Audio_Channel_FieldNumber_CompressLimit = 4,
  Media_Audio_Channel_FieldNumber_OutputsArray = 5,
};

GPB_FINAL @interface Media_Audio_Channel : GPBMessage

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite) BOOL muted;

@property(nonatomic, readwrite) double volume;

@property(nonatomic, readwrite) BOOL compressLimit;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Media_Audio_Channel_Output*> *outputsArray;
/** The number of items in @c outputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger outputsArray_Count;

@end

#pragma mark - Media_Audio_Channel_Output

typedef GPB_ENUM(Media_Audio_Channel_Output_FieldNumber) {
  Media_Audio_Channel_Output_FieldNumber_ChannelIndex = 2,
};

GPB_FINAL @interface Media_Audio_Channel_Output : GPBMessage

@property(nonatomic, readwrite) int32_t channelIndex;

@end

#pragma mark - Media_AudioProperties

typedef GPB_ENUM(Media_AudioProperties_FieldNumber) {
  Media_AudioProperties_FieldNumber_Volume = 1,
  Media_AudioProperties_FieldNumber_AudioChannelsArray = 2,
  Media_AudioProperties_FieldNumber_IsCustomMapping = 3,
};

GPB_FINAL @interface Media_AudioProperties : GPBMessage

@property(nonatomic, readwrite) double volume;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Media_Audio_Channel*> *audioChannelsArray;
/** The number of items in @c audioChannelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger audioChannelsArray_Count;

@property(nonatomic, readwrite) BOOL isCustomMapping;

@end

#pragma mark - Media_TransportProperties

typedef GPB_ENUM(Media_TransportProperties_FieldNumber) {
  Media_TransportProperties_FieldNumber_PlayRate = 1,
  Media_TransportProperties_FieldNumber_InPoint = 2,
  Media_TransportProperties_FieldNumber_OutPoint = 3,
  Media_TransportProperties_FieldNumber_FadeInDuration = 7,
  Media_TransportProperties_FieldNumber_FadeOutDuration = 8,
  Media_TransportProperties_FieldNumber_ShouldFadeIn = 9,
  Media_TransportProperties_FieldNumber_ShouldFadeOut = 10,
  Media_TransportProperties_FieldNumber_EndPoint = 11,
  Media_TransportProperties_FieldNumber_PlaybackBehavior = 12,
  Media_TransportProperties_FieldNumber_LoopTime = 13,
  Media_TransportProperties_FieldNumber_TimesToLoop = 14,
};

GPB_FINAL @interface Media_TransportProperties : GPBMessage

@property(nonatomic, readwrite) double playRate;

@property(nonatomic, readwrite) double inPoint;

@property(nonatomic, readwrite) double outPoint;

@property(nonatomic, readwrite) double fadeInDuration;

@property(nonatomic, readwrite) double fadeOutDuration;

@property(nonatomic, readwrite) BOOL shouldFadeIn;

@property(nonatomic, readwrite) BOOL shouldFadeOut;

@property(nonatomic, readwrite) double endPoint;

@property(nonatomic, readwrite) Media_TransportProperties_PlaybackBehavior playbackBehavior;

@property(nonatomic, readwrite) double loopTime;

@property(nonatomic, readwrite) uint32_t timesToLoop;

@end

/**
 * Fetches the raw value of a @c Media_TransportProperties's @c playbackBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_TransportProperties_PlaybackBehavior_RawValue(Media_TransportProperties *message);
/**
 * Sets the raw value of an @c Media_TransportProperties's @c playbackBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_TransportProperties_PlaybackBehavior_RawValue(Media_TransportProperties *message, int32_t value);

#pragma mark - Media_DrawingProperties

typedef GPB_ENUM(Media_DrawingProperties_FieldNumber) {
  Media_DrawingProperties_FieldNumber_ScaleBehavior = 1,
  Media_DrawingProperties_FieldNumber_ScaleAlignment = 2,
  Media_DrawingProperties_FieldNumber_FlippedHorizontally = 3,
  Media_DrawingProperties_FieldNumber_FlippedVertically = 4,
  Media_DrawingProperties_FieldNumber_NaturalSize = 5,
  Media_DrawingProperties_FieldNumber_CustomImageRotation = 6,
  Media_DrawingProperties_FieldNumber_CustomImageBounds = 7,
  Media_DrawingProperties_FieldNumber_CustomImageAspectLocked = 8,
  Media_DrawingProperties_FieldNumber_AlphaInverted = 9,
  Media_DrawingProperties_FieldNumber_NativeRotation = 10,
  Media_DrawingProperties_FieldNumber_SelectedEffectPresetUuid = 11,
  Media_DrawingProperties_FieldNumber_EffectsArray = 12,
  Media_DrawingProperties_FieldNumber_CropEnable = 13,
  Media_DrawingProperties_FieldNumber_CropInsets = 14,
};

GPB_FINAL @interface Media_DrawingProperties : GPBMessage

@property(nonatomic, readwrite) Media_DrawingProperties_ScaleBehavior scaleBehavior;

@property(nonatomic, readwrite) Media_DrawingProperties_ScaleAlignment scaleAlignment;

@property(nonatomic, readwrite) BOOL flippedHorizontally;

@property(nonatomic, readwrite) BOOL flippedVertically;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Size *naturalSize;
/** Test to see if @c naturalSize has been set. */
@property(nonatomic, readwrite) BOOL hasNaturalSize;

@property(nonatomic, readwrite) double customImageRotation;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Rect *customImageBounds;
/** Test to see if @c customImageBounds has been set. */
@property(nonatomic, readwrite) BOOL hasCustomImageBounds;

@property(nonatomic, readwrite) BOOL customImageAspectLocked;

@property(nonatomic, readwrite) BOOL alphaInverted;

@property(nonatomic, readwrite) Media_DrawingProperties_NativeRotationType nativeRotation;

@property(nonatomic, readwrite, strong, null_resettable) UUID *selectedEffectPresetUuid;
/** Test to see if @c selectedEffectPresetUuid has been set. */
@property(nonatomic, readwrite) BOOL hasSelectedEffectPresetUuid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@property(nonatomic, readwrite) BOOL cropEnable;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_EdgeInsets *cropInsets;
/** Test to see if @c cropInsets has been set. */
@property(nonatomic, readwrite) BOOL hasCropInsets;

@end

/**
 * Fetches the raw value of a @c Media_DrawingProperties's @c scaleBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_DrawingProperties_ScaleBehavior_RawValue(Media_DrawingProperties *message);
/**
 * Sets the raw value of an @c Media_DrawingProperties's @c scaleBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_DrawingProperties_ScaleBehavior_RawValue(Media_DrawingProperties *message, int32_t value);

/**
 * Fetches the raw value of a @c Media_DrawingProperties's @c scaleAlignment property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_DrawingProperties_ScaleAlignment_RawValue(Media_DrawingProperties *message);
/**
 * Sets the raw value of an @c Media_DrawingProperties's @c scaleAlignment property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_DrawingProperties_ScaleAlignment_RawValue(Media_DrawingProperties *message, int32_t value);

/**
 * Fetches the raw value of a @c Media_DrawingProperties's @c nativeRotation property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_DrawingProperties_NativeRotation_RawValue(Media_DrawingProperties *message);
/**
 * Sets the raw value of an @c Media_DrawingProperties's @c nativeRotation property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_DrawingProperties_NativeRotation_RawValue(Media_DrawingProperties *message, int32_t value);

#pragma mark - Media_VideoProperties

typedef GPB_ENUM(Media_VideoProperties_FieldNumber) {
  Media_VideoProperties_FieldNumber_FrameRate = 1,
  Media_VideoProperties_FieldNumber_FieldType = 2,
  Media_VideoProperties_FieldNumber_ThumbnailPosition = 3,
  Media_VideoProperties_FieldNumber_EndBehavior = 4,
  Media_VideoProperties_FieldNumber_SoftLoop = 5,
  Media_VideoProperties_FieldNumber_SoftLoopDuration = 6,
};

GPB_FINAL @interface Media_VideoProperties : GPBMessage

@property(nonatomic, readwrite) double frameRate;

@property(nonatomic, readwrite) Media_VideoProperties_FieldType fieldType;

@property(nonatomic, readwrite) double thumbnailPosition;

@property(nonatomic, readwrite) Media_VideoProperties_EndBehavior endBehavior;

@property(nonatomic, readwrite) BOOL softLoop;

@property(nonatomic, readwrite) double softLoopDuration;

@end

/**
 * Fetches the raw value of a @c Media_VideoProperties's @c fieldType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_VideoProperties_FieldType_RawValue(Media_VideoProperties *message);
/**
 * Sets the raw value of an @c Media_VideoProperties's @c fieldType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_VideoProperties_FieldType_RawValue(Media_VideoProperties *message, int32_t value);

/**
 * Fetches the raw value of a @c Media_VideoProperties's @c endBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Media_VideoProperties_EndBehavior_RawValue(Media_VideoProperties *message);
/**
 * Sets the raw value of an @c Media_VideoProperties's @c endBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMedia_VideoProperties_EndBehavior_RawValue(Media_VideoProperties *message, int32_t value);

#pragma mark - Media_LiveVideoProperties

typedef GPB_ENUM(Media_LiveVideoProperties_FieldNumber) {
  Media_LiveVideoProperties_FieldNumber_VideoDevice = 1,
  Media_LiveVideoProperties_FieldNumber_AudioDevice = 2,
  Media_LiveVideoProperties_FieldNumber_LiveVideoIndex = 3,
};

GPB_FINAL @interface Media_LiveVideoProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_VideoDevice *videoDevice;
/** Test to see if @c videoDevice has been set. */
@property(nonatomic, readwrite) BOOL hasVideoDevice;

@property(nonatomic, readwrite, strong, null_resettable) Media_AudioDevice *audioDevice;
/** Test to see if @c audioDevice has been set. */
@property(nonatomic, readwrite) BOOL hasAudioDevice;

@property(nonatomic, readwrite) int32_t liveVideoIndex;

@end

#pragma mark - Media_AudioTypeProperties

typedef GPB_ENUM(Media_AudioTypeProperties_FieldNumber) {
  Media_AudioTypeProperties_FieldNumber_Audio = 1,
  Media_AudioTypeProperties_FieldNumber_Transport = 2,
};

GPB_FINAL @interface Media_AudioTypeProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_AudioProperties *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@property(nonatomic, readwrite, strong, null_resettable) Media_TransportProperties *transport;
/** Test to see if @c transport has been set. */
@property(nonatomic, readwrite) BOOL hasTransport;

@end

#pragma mark - Media_ImageTypeProperties

typedef GPB_ENUM(Media_ImageTypeProperties_FieldNumber) {
  Media_ImageTypeProperties_FieldNumber_Drawing = 1,
};

GPB_FINAL @interface Media_ImageTypeProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_DrawingProperties *drawing;
/** Test to see if @c drawing has been set. */
@property(nonatomic, readwrite) BOOL hasDrawing;

@end

#pragma mark - Media_VideoTypeProperties

typedef GPB_ENUM(Media_VideoTypeProperties_FieldNumber) {
  Media_VideoTypeProperties_FieldNumber_Drawing = 1,
  Media_VideoTypeProperties_FieldNumber_Audio = 2,
  Media_VideoTypeProperties_FieldNumber_Transport = 3,
  Media_VideoTypeProperties_FieldNumber_Video = 4,
};

GPB_FINAL @interface Media_VideoTypeProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_DrawingProperties *drawing;
/** Test to see if @c drawing has been set. */
@property(nonatomic, readwrite) BOOL hasDrawing;

@property(nonatomic, readwrite, strong, null_resettable) Media_AudioProperties *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@property(nonatomic, readwrite, strong, null_resettable) Media_TransportProperties *transport;
/** Test to see if @c transport has been set. */
@property(nonatomic, readwrite) BOOL hasTransport;

@property(nonatomic, readwrite, strong, null_resettable) Media_VideoProperties *video;
/** Test to see if @c video has been set. */
@property(nonatomic, readwrite) BOOL hasVideo;

@end

#pragma mark - Media_LiveVideoTypeProperties

typedef GPB_ENUM(Media_LiveVideoTypeProperties_FieldNumber) {
  Media_LiveVideoTypeProperties_FieldNumber_Drawing = 1,
  Media_LiveVideoTypeProperties_FieldNumber_Audio = 2,
  Media_LiveVideoTypeProperties_FieldNumber_LiveVideo = 3,
};

GPB_FINAL @interface Media_LiveVideoTypeProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_DrawingProperties *drawing;
/** Test to see if @c drawing has been set. */
@property(nonatomic, readwrite) BOOL hasDrawing;

@property(nonatomic, readwrite, strong, null_resettable) Media_AudioProperties *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@property(nonatomic, readwrite, strong, null_resettable) Media_LiveVideoProperties *liveVideo;
/** Test to see if @c liveVideo has been set. */
@property(nonatomic, readwrite) BOOL hasLiveVideo;

@end

#pragma mark - Media_WebContentTypeProperties

typedef GPB_ENUM(Media_WebContentTypeProperties_FieldNumber) {
  Media_WebContentTypeProperties_FieldNumber_Drawing = 1,
  Media_WebContentTypeProperties_FieldNumber_URL = 2,
};

GPB_FINAL @interface Media_WebContentTypeProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Media_DrawingProperties *drawing;
/** Test to see if @c drawing has been set. */
@property(nonatomic, readwrite) BOOL hasDrawing;

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
