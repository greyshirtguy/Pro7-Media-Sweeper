// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ApplicationInfo;
@class Clock_Format;
@class Message;
@class Message_Token;
@class Message_TokenValue;
@class Message_TokenValue_TokenValueClock;
@class Message_TokenValue_TokenValueText;
@class Message_TokenValue_TokenValueTimer;
@class Message_Token_TokenTypeClock;
@class Message_Token_TokenTypeText;
@class Message_Token_TokenTypeTimer;
@class Template_Identification;
@class Timer_Configuration;
@class Timer_Format;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Message_ClearType

typedef GPB_ENUM(Message_ClearType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Message_ClearType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Message_ClearType_ClearTypeManual = 0,
  Message_ClearType_ClearTypeAfterTime = 1,
  Message_ClearType_ClearTypeAfterTimers = 2,
};

GPBEnumDescriptor *Message_ClearType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Message_ClearType_IsValidValue(int32_t value);

#pragma mark - MessagesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MessagesRoot : GPBRootObject
@end

#pragma mark - Message

typedef GPB_ENUM(Message_FieldNumber) {
  Message_FieldNumber_Uuid = 1,
  Message_FieldNumber_Title = 2,
  Message_FieldNumber_TimeToRemove = 3,
  Message_FieldNumber_VisibleOnNetwork = 4,
  Message_FieldNumber_Template_p = 6,
  Message_FieldNumber_ClearType = 9,
  Message_FieldNumber_MessageText = 10,
  Message_FieldNumber_TokensArray = 11,
  Message_FieldNumber_TokenValuesArray = 12,
};

GPB_FINAL @interface Message : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite) double timeToRemove;

@property(nonatomic, readwrite) BOOL visibleOnNetwork;

@property(nonatomic, readwrite, strong, null_resettable) Template_Identification *template_p;
/** Test to see if @c template_p has been set. */
@property(nonatomic, readwrite) BOOL hasTemplate_p;

@property(nonatomic, readwrite) Message_ClearType clearType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageText;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Message_Token*> *tokensArray;
/** The number of items in @c tokensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokensArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Message_TokenValue*> *tokenValuesArray;
/** The number of items in @c tokenValuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokenValuesArray_Count;

@end

/**
 * Fetches the raw value of a @c Message's @c clearType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Message_ClearType_RawValue(Message *message);
/**
 * Sets the raw value of an @c Message's @c clearType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessage_ClearType_RawValue(Message *message, int32_t value);

#pragma mark - Message_Token

typedef GPB_ENUM(Message_Token_FieldNumber) {
  Message_Token_FieldNumber_Uuid = 1,
  Message_Token_FieldNumber_Text = 2,
  Message_Token_FieldNumber_Timer = 3,
  Message_Token_FieldNumber_Clock = 4,
};

typedef GPB_ENUM(Message_Token_TokenType_OneOfCase) {
  Message_Token_TokenType_OneOfCase_GPBUnsetOneOfCase = 0,
  Message_Token_TokenType_OneOfCase_Text = 2,
  Message_Token_TokenType_OneOfCase_Timer = 3,
  Message_Token_TokenType_OneOfCase_Clock = 4,
};

GPB_FINAL @interface Message_Token : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readonly) Message_Token_TokenType_OneOfCase tokenTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Message_Token_TokenTypeText *text;

@property(nonatomic, readwrite, strong, null_resettable) Message_Token_TokenTypeTimer *timer;

@property(nonatomic, readwrite, strong, null_resettable) Message_Token_TokenTypeClock *clock;

@end

/**
 * Clears whatever value was set for the oneof 'tokenType'.
 **/
void Message_Token_ClearTokenTypeOneOfCase(Message_Token *message);

#pragma mark - Message_Token_TokenTypeText

typedef GPB_ENUM(Message_Token_TokenTypeText_FieldNumber) {
  Message_Token_TokenTypeText_FieldNumber_Name = 1,
};

GPB_FINAL @interface Message_Token_TokenTypeText : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - Message_Token_TokenTypeTimer

typedef GPB_ENUM(Message_Token_TokenTypeTimer_FieldNumber) {
  Message_Token_TokenTypeTimer_FieldNumber_Name = 1,
  Message_Token_TokenTypeTimer_FieldNumber_TimerUuid = 2,
};

GPB_FINAL @interface Message_Token_TokenTypeTimer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) UUID *timerUuid;
/** Test to see if @c timerUuid has been set. */
@property(nonatomic, readwrite) BOOL hasTimerUuid;

@end

#pragma mark - Message_Token_TokenTypeClock

GPB_FINAL @interface Message_Token_TokenTypeClock : GPBMessage

@end

#pragma mark - Message_TokenValue

typedef GPB_ENUM(Message_TokenValue_FieldNumber) {
  Message_TokenValue_FieldNumber_TokenId = 1,
  Message_TokenValue_FieldNumber_Text = 2,
  Message_TokenValue_FieldNumber_Timer = 3,
  Message_TokenValue_FieldNumber_Clock = 4,
  Message_TokenValue_FieldNumber_TokenName = 5,
};

typedef GPB_ENUM(Message_TokenValue_TokenValueType_OneOfCase) {
  Message_TokenValue_TokenValueType_OneOfCase_GPBUnsetOneOfCase = 0,
  Message_TokenValue_TokenValueType_OneOfCase_Text = 2,
  Message_TokenValue_TokenValueType_OneOfCase_Timer = 3,
  Message_TokenValue_TokenValueType_OneOfCase_Clock = 4,
};

GPB_FINAL @interface Message_TokenValue : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *tokenId;
/** Test to see if @c tokenId has been set. */
@property(nonatomic, readwrite) BOOL hasTokenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tokenName;

@property(nonatomic, readonly) Message_TokenValue_TokenValueType_OneOfCase tokenValueTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Message_TokenValue_TokenValueText *text;

@property(nonatomic, readwrite, strong, null_resettable) Message_TokenValue_TokenValueTimer *timer;

@property(nonatomic, readwrite, strong, null_resettable) Message_TokenValue_TokenValueClock *clock;

@end

/**
 * Clears whatever value was set for the oneof 'tokenValueType'.
 **/
void Message_TokenValue_ClearTokenValueTypeOneOfCase(Message_TokenValue *message);

#pragma mark - Message_TokenValue_TokenValueText

typedef GPB_ENUM(Message_TokenValue_TokenValueText_FieldNumber) {
  Message_TokenValue_TokenValueText_FieldNumber_Value = 1,
};

GPB_FINAL @interface Message_TokenValue_TokenValueText : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - Message_TokenValue_TokenValueTimer

typedef GPB_ENUM(Message_TokenValue_TokenValueTimer_FieldNumber) {
  Message_TokenValue_TokenValueTimer_FieldNumber_Configuration = 1,
  Message_TokenValue_TokenValueTimer_FieldNumber_Format = 2,
};

GPB_FINAL @interface Message_TokenValue_TokenValueTimer : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Timer_Configuration *configuration;
/** Test to see if @c configuration has been set. */
@property(nonatomic, readwrite) BOOL hasConfiguration;

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *format;
/** Test to see if @c format has been set. */
@property(nonatomic, readwrite) BOOL hasFormat;

@end

#pragma mark - Message_TokenValue_TokenValueClock

typedef GPB_ENUM(Message_TokenValue_TokenValueClock_FieldNumber) {
  Message_TokenValue_TokenValueClock_FieldNumber_Format = 1,
};

GPB_FINAL @interface Message_TokenValue_TokenValueClock : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Clock_Format *format;
/** Test to see if @c format has been set. */
@property(nonatomic, readwrite) BOOL hasFormat;

@end

#pragma mark - MessageDocument

typedef GPB_ENUM(MessageDocument_FieldNumber) {
  MessageDocument_FieldNumber_ApplicationInfo = 1,
  MessageDocument_FieldNumber_MessagesArray = 2,
};

GPB_FINAL @interface MessageDocument : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ApplicationInfo *applicationInfo;
/** Test to see if @c applicationInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Message*> *messagesArray;
/** The number of items in @c messagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messagesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
