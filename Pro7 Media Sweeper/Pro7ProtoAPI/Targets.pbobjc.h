// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: targets.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class Graphics_Element;
@class Graphics_Rect;
@class Graphics_Size;
@class Media;
@class Target;
@class TestPattern;
@class URL;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Target_FlipMode

typedef GPB_ENUM(Target_FlipMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Target_FlipMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Target_FlipMode_FlipModeNone = 0,
  Target_FlipMode_FlipModeVertical = 1,
  Target_FlipMode_FlipModeHorizontal = 2,
  Target_FlipMode_FlipModeBoth = 3,
};

GPBEnumDescriptor *Target_FlipMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Target_FlipMode_IsValidValue(int32_t value);

#pragma mark - TargetsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TargetsRoot : GPBRootObject
@end

#pragma mark - TargetSet

typedef GPB_ENUM(TargetSet_FieldNumber) {
  TargetSet_FieldNumber_Uuid = 1,
  TargetSet_FieldNumber_Name = 2,
  TargetSet_FieldNumber_Color = 3,
  TargetSet_FieldNumber_TestImagePath = 4,
  TargetSet_FieldNumber_SourceSize = 5,
  TargetSet_FieldNumber_TargetsArray = 6,
  TargetSet_FieldNumber_TestPattern = 7,
};

GPB_FINAL @interface TargetSet : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite, strong, null_resettable) URL *testImagePath;
/** Test to see if @c testImagePath has been set. */
@property(nonatomic, readwrite) BOOL hasTestImagePath;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Size *sourceSize;
/** Test to see if @c sourceSize has been set. */
@property(nonatomic, readwrite) BOOL hasSourceSize;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Target*> *targetsArray;
/** The number of items in @c targetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) TestPattern *testPattern;
/** Test to see if @c testPattern has been set. */
@property(nonatomic, readwrite) BOOL hasTestPattern;

@end

#pragma mark - Target

typedef GPB_ENUM(Target_FieldNumber) {
  Target_FieldNumber_Uuid = 1,
  Target_FieldNumber_Name = 2,
  Target_FieldNumber_SourceUnitRect = 3,
  Target_FieldNumber_TestImageFill = 4,
  Target_FieldNumber_Shape = 5,
  Target_FieldNumber_FlipMode = 6,
};

GPB_FINAL @interface Target : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Rect *sourceUnitRect;
/** Test to see if @c sourceUnitRect has been set. */
@property(nonatomic, readwrite) BOOL hasSourceUnitRect;

@property(nonatomic, readwrite, strong, null_resettable) Media *testImageFill;
/** Test to see if @c testImageFill has been set. */
@property(nonatomic, readwrite) BOOL hasTestImageFill;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Element *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@property(nonatomic, readwrite) Target_FlipMode flipMode;

@end

/**
 * Fetches the raw value of a @c Target's @c flipMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Target_FlipMode_RawValue(Target *message);
/**
 * Sets the raw value of an @c Target's @c flipMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTarget_FlipMode_RawValue(Target *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
