// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Audio_Device;
@class Audio_Device_Format;
@class Audio_LogicalChannel;
@class Audio_LogicalChannel_OutputChannel;
@class Audio_OutputSetup;
@class Audio_PhysicalChannel;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Audio_Device_Format_Type

typedef GPB_ENUM(Audio_Device_Format_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Audio_Device_Format_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Audio_Device_Format_Type_TypeInt = 0,
  Audio_Device_Format_Type_TypeFloat = 1,
};

GPBEnumDescriptor *Audio_Device_Format_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Audio_Device_Format_Type_IsValidValue(int32_t value);

#pragma mark - AudioRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface AudioRoot : GPBRootObject
@end

#pragma mark - Audio

GPB_FINAL @interface Audio : GPBMessage

@end

#pragma mark - Audio_SettingsDocument

typedef GPB_ENUM(Audio_SettingsDocument_FieldNumber) {
  Audio_SettingsDocument_FieldNumber_OutputSetup = 1,
  Audio_SettingsDocument_FieldNumber_MonitorDevice = 2,
  Audio_SettingsDocument_FieldNumber_MonitorOnMains = 3,
};

GPB_FINAL @interface Audio_SettingsDocument : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Audio_OutputSetup *outputSetup;
/** Test to see if @c outputSetup has been set. */
@property(nonatomic, readwrite) BOOL hasOutputSetup;

@property(nonatomic, readwrite, strong, null_resettable) Audio_Device *monitorDevice;
/** Test to see if @c monitorDevice has been set. */
@property(nonatomic, readwrite) BOOL hasMonitorDevice;

@property(nonatomic, readwrite) BOOL monitorOnMains;

@end

#pragma mark - Audio_OutputSetup

typedef GPB_ENUM(Audio_OutputSetup_FieldNumber) {
  Audio_OutputSetup_FieldNumber_Uuid = 1,
  Audio_OutputSetup_FieldNumber_AudioDevice = 2,
  Audio_OutputSetup_FieldNumber_LogicalChannelsArray = 3,
  Audio_OutputSetup_FieldNumber_AudioDelay = 4,
  Audio_OutputSetup_FieldNumber_MasterLevel = 5,
  Audio_OutputSetup_FieldNumber_PhysicalChanelsArray = 6,
};

GPB_FINAL @interface Audio_OutputSetup : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, strong, null_resettable) Audio_Device *audioDevice;
/** Test to see if @c audioDevice has been set. */
@property(nonatomic, readwrite) BOOL hasAudioDevice;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Audio_LogicalChannel*> *logicalChannelsArray;
/** The number of items in @c logicalChannelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logicalChannelsArray_Count;

@property(nonatomic, readwrite) double audioDelay;

@property(nonatomic, readwrite) double masterLevel;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Audio_PhysicalChannel*> *physicalChanelsArray;
/** The number of items in @c physicalChanelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger physicalChanelsArray_Count;

@end

#pragma mark - Audio_Device

typedef GPB_ENUM(Audio_Device_FieldNumber) {
  Audio_Device_FieldNumber_Name = 1,
  Audio_Device_FieldNumber_RenderId = 2,
  Audio_Device_FieldNumber_InputChannelCount = 3,
  Audio_Device_FieldNumber_OutputChannelCount = 4,
  Audio_Device_FieldNumber_FormatsArray = 5,
};

GPB_FINAL @interface Audio_Device : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *renderId;

@property(nonatomic, readwrite) uint32_t inputChannelCount;

@property(nonatomic, readwrite) uint32_t outputChannelCount;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Audio_Device_Format*> *formatsArray;
/** The number of items in @c formatsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger formatsArray_Count;

@end

#pragma mark - Audio_Device_Format

typedef GPB_ENUM(Audio_Device_Format_FieldNumber) {
  Audio_Device_Format_FieldNumber_SampleRate = 1,
  Audio_Device_Format_FieldNumber_BitDepth = 2,
  Audio_Device_Format_FieldNumber_Type = 3,
};

GPB_FINAL @interface Audio_Device_Format : GPBMessage

@property(nonatomic, readwrite) uint32_t sampleRate;

@property(nonatomic, readwrite) uint32_t bitDepth;

@property(nonatomic, readwrite) Audio_Device_Format_Type type;

@end

/**
 * Fetches the raw value of a @c Audio_Device_Format's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Audio_Device_Format_Type_RawValue(Audio_Device_Format *message);
/**
 * Sets the raw value of an @c Audio_Device_Format's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAudio_Device_Format_Type_RawValue(Audio_Device_Format *message, int32_t value);

#pragma mark - Audio_LogicalChannel

typedef GPB_ENUM(Audio_LogicalChannel_FieldNumber) {
  Audio_LogicalChannel_FieldNumber_Uuid = 1,
  Audio_LogicalChannel_FieldNumber_Name = 2,
  Audio_LogicalChannel_FieldNumber_Index = 3,
  Audio_LogicalChannel_FieldNumber_Muted = 4,
  Audio_LogicalChannel_FieldNumber_PhysicalAudioChannelsArray = 5,
  Audio_LogicalChannel_FieldNumber_Solo = 6,
  Audio_LogicalChannel_FieldNumber_TestTone = 7,
};

GPB_FINAL @interface Audio_LogicalChannel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite) BOOL muted;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Audio_LogicalChannel_OutputChannel*> *physicalAudioChannelsArray;
/** The number of items in @c physicalAudioChannelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger physicalAudioChannelsArray_Count;

@property(nonatomic, readwrite) BOOL solo;

@property(nonatomic, readwrite) BOOL testTone;

@end

#pragma mark - Audio_LogicalChannel_OutputChannel

typedef GPB_ENUM(Audio_LogicalChannel_OutputChannel_FieldNumber) {
  Audio_LogicalChannel_OutputChannel_FieldNumber_Index = 1,
  Audio_LogicalChannel_OutputChannel_FieldNumber_Muted = 2,
  Audio_LogicalChannel_OutputChannel_FieldNumber_Solo = 3,
  Audio_LogicalChannel_OutputChannel_FieldNumber_TestTone = 4,
};

GPB_FINAL @interface Audio_LogicalChannel_OutputChannel : GPBMessage

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite) BOOL muted;

@property(nonatomic, readwrite) BOOL solo;

@property(nonatomic, readwrite) BOOL testTone;

@end

#pragma mark - Audio_PhysicalChannel

typedef GPB_ENUM(Audio_PhysicalChannel_FieldNumber) {
  Audio_PhysicalChannel_FieldNumber_Index = 1,
  Audio_PhysicalChannel_FieldNumber_MuteEnable = 2,
  Audio_PhysicalChannel_FieldNumber_SoloEnable = 3,
  Audio_PhysicalChannel_FieldNumber_ToneEnable = 4,
};

GPB_FINAL @interface Audio_PhysicalChannel : GPBMessage

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite) BOOL muteEnable;

@property(nonatomic, readwrite) BOOL soloEnable;

@property(nonatomic, readwrite) BOOL toneEnable;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
