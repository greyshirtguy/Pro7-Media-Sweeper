// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cue.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Action;
@class Cue_PendingImportsEntry;
@class Cue_TimecodeTime;
@class HotKey;
@class URLs;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Cue_CompletionTargetType

typedef GPB_ENUM(Cue_CompletionTargetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Cue_CompletionTargetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Cue_CompletionTargetType_CompletionTargetTypeNone = 0,
  Cue_CompletionTargetType_CompletionTargetTypeNext = 1,
  Cue_CompletionTargetType_CompletionTargetTypeRandom = 2,
  Cue_CompletionTargetType_CompletionTargetTypeCue = 3,
  Cue_CompletionTargetType_CompletionTargetTypeFirst = 4,
};

GPBEnumDescriptor *Cue_CompletionTargetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Cue_CompletionTargetType_IsValidValue(int32_t value);

#pragma mark - Enum Cue_CompletionActionType

typedef GPB_ENUM(Cue_CompletionActionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Cue_CompletionActionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Cue_CompletionActionType_CompletionActionTypeFirst = 0,
  Cue_CompletionActionType_CompletionActionTypeLast = 1,
  Cue_CompletionActionType_CompletionActionTypeAfterAction = 2,
  Cue_CompletionActionType_CompletionActionTypeAfterTime = 3,
};

GPBEnumDescriptor *Cue_CompletionActionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Cue_CompletionActionType_IsValidValue(int32_t value);

#pragma mark - CueRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface CueRoot : GPBRootObject
@end

#pragma mark - Cue

typedef GPB_ENUM(Cue_FieldNumber) {
  Cue_FieldNumber_Uuid = 1,
  Cue_FieldNumber_Name = 2,
  Cue_FieldNumber_CompletionTargetType = 3,
  Cue_FieldNumber_CompletionTargetUuid = 4,
  Cue_FieldNumber_CompletionActionType = 5,
  Cue_FieldNumber_CompletionActionUuid = 6,
  Cue_FieldNumber_TriggerTime = 7,
  Cue_FieldNumber_HotKey = 8,
  Cue_FieldNumber_ActionsArray = 10,
  Cue_FieldNumber_PendingImportsArray = 11,
  Cue_FieldNumber_IsEnabled = 12,
  Cue_FieldNumber_CompletionTime = 13,
};

GPB_FINAL @interface Cue : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) Cue_CompletionTargetType completionTargetType;

@property(nonatomic, readwrite, strong, null_resettable) UUID *completionTargetUuid;
/** Test to see if @c completionTargetUuid has been set. */
@property(nonatomic, readwrite) BOOL hasCompletionTargetUuid;

@property(nonatomic, readwrite) Cue_CompletionActionType completionActionType;

@property(nonatomic, readwrite, strong, null_resettable) UUID *completionActionUuid;
/** Test to see if @c completionActionUuid has been set. */
@property(nonatomic, readwrite) BOOL hasCompletionActionUuid;

@property(nonatomic, readwrite, strong, null_resettable) Cue_TimecodeTime *triggerTime;
/** Test to see if @c triggerTime has been set. */
@property(nonatomic, readwrite) BOOL hasTriggerTime;

@property(nonatomic, readwrite, strong, null_resettable) HotKey *hotKey;
/** Test to see if @c hotKey has been set. */
@property(nonatomic, readwrite) BOOL hasHotKey;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Action*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Cue_PendingImportsEntry*> *pendingImportsArray;
/** The number of items in @c pendingImportsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pendingImportsArray_Count;

@property(nonatomic, readwrite) BOOL isEnabled;

@property(nonatomic, readwrite) double completionTime;

@end

/**
 * Fetches the raw value of a @c Cue's @c completionTargetType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Cue_CompletionTargetType_RawValue(Cue *message);
/**
 * Sets the raw value of an @c Cue's @c completionTargetType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCue_CompletionTargetType_RawValue(Cue *message, int32_t value);

/**
 * Fetches the raw value of a @c Cue's @c completionActionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Cue_CompletionActionType_RawValue(Cue *message);
/**
 * Sets the raw value of an @c Cue's @c completionActionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCue_CompletionActionType_RawValue(Cue *message, int32_t value);

#pragma mark - Cue_TimecodeTime

typedef GPB_ENUM(Cue_TimecodeTime_FieldNumber) {
  Cue_TimecodeTime_FieldNumber_Time = 1,
};

GPB_FINAL @interface Cue_TimecodeTime : GPBMessage

@property(nonatomic, readwrite) double time;

@end

#pragma mark - Cue_PendingImportsEntry

typedef GPB_ENUM(Cue_PendingImportsEntry_FieldNumber) {
  Cue_PendingImportsEntry_FieldNumber_Key = 1,
  Cue_PendingImportsEntry_FieldNumber_Value = 2,
};

GPB_FINAL @interface Cue_PendingImportsEntry : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) URLs *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
