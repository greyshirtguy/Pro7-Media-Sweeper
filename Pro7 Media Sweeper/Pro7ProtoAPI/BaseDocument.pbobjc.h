// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: baseDocument.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ApplicationInfo;
@class PVPDocumentState_PlaylistState;
@class URL;
@class UUID;
@class Version;
@class Workspace;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PVPDocumentState_PlaylistState_LayoutType

typedef GPB_ENUM(PVPDocumentState_PlaylistState_LayoutType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PVPDocumentState_PlaylistState_LayoutType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PVPDocumentState_PlaylistState_LayoutType_LayoutTypeCue = 0,
  PVPDocumentState_PlaylistState_LayoutType_LayoutTypeAction = 1,
  PVPDocumentState_PlaylistState_LayoutType_LayoutTypeLiveVideo = 2,
};

GPBEnumDescriptor *PVPDocumentState_PlaylistState_LayoutType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PVPDocumentState_PlaylistState_LayoutType_IsValidValue(int32_t value);

#pragma mark - BaseDocumentRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface BaseDocumentRoot : GPBRootObject
@end

#pragma mark - Document

typedef GPB_ENUM(Document_FieldNumber) {
  Document_FieldNumber_ApplicationInfo = 1,
  Document_FieldNumber_Uuid = 2,
  Document_FieldNumber_UsesRelativeUrls = 3,
  Document_FieldNumber_Workspace = 10,
};

GPB_FINAL @interface Document : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ApplicationInfo *applicationInfo;
/** Test to see if @c applicationInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationInfo;

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) BOOL usesRelativeUrls;

@property(nonatomic, readwrite, strong, null_resettable) Workspace *workspace;
/** Test to see if @c workspace has been set. */
@property(nonatomic, readwrite) BOOL hasWorkspace;

@end

#pragma mark - CacheInfo

typedef GPB_ENUM(CacheInfo_FieldNumber) {
  CacheInfo_FieldNumber_Uuid = 1,
  CacheInfo_FieldNumber_ApplicationVersion = 2,
  CacheInfo_FieldNumber_URL = 3,
  CacheInfo_FieldNumber_LastModifiedDate = 4,
};

GPB_FINAL @interface CacheInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, strong, null_resettable) Version *applicationVersion;
/** Test to see if @c applicationVersion has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationVersion;

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) double lastModifiedDate;

@end

#pragma mark - PVPDocumentState

typedef GPB_ENUM(PVPDocumentState_FieldNumber) {
  PVPDocumentState_FieldNumber_PrimaryPlaylist = 1,
  PVPDocumentState_FieldNumber_AlternatePlaylist = 2,
  PVPDocumentState_FieldNumber_PlaylistSplitIsVertical = 3,
  PVPDocumentState_FieldNumber_TargetedLayer = 4,
  PVPDocumentState_FieldNumber_SelectedLayer = 5,
  PVPDocumentState_FieldNumber_LockedLayer = 6,
  PVPDocumentState_FieldNumber_LiveVideoPlaylistScale = 7,
  PVPDocumentState_FieldNumber_SplitViewDividerPosition = 8,
};

GPB_FINAL @interface PVPDocumentState : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PVPDocumentState_PlaylistState *primaryPlaylist;
/** Test to see if @c primaryPlaylist has been set. */
@property(nonatomic, readwrite) BOOL hasPrimaryPlaylist;

@property(nonatomic, readwrite, strong, null_resettable) PVPDocumentState_PlaylistState *alternatePlaylist;
/** Test to see if @c alternatePlaylist has been set. */
@property(nonatomic, readwrite) BOOL hasAlternatePlaylist;

@property(nonatomic, readwrite) BOOL playlistSplitIsVertical;

@property(nonatomic, readwrite, strong, null_resettable) UUID *targetedLayer;
/** Test to see if @c targetedLayer has been set. */
@property(nonatomic, readwrite) BOOL hasTargetedLayer;

@property(nonatomic, readwrite, strong, null_resettable) UUID *selectedLayer;
/** Test to see if @c selectedLayer has been set. */
@property(nonatomic, readwrite) BOOL hasSelectedLayer;

@property(nonatomic, readwrite, strong, null_resettable) UUID *lockedLayer;
/** Test to see if @c lockedLayer has been set. */
@property(nonatomic, readwrite) BOOL hasLockedLayer;

@property(nonatomic, readwrite) double liveVideoPlaylistScale;

@property(nonatomic, readwrite) double splitViewDividerPosition;

@end

#pragma mark - PVPDocumentState_PlaylistState

typedef GPB_ENUM(PVPDocumentState_PlaylistState_FieldNumber) {
  PVPDocumentState_PlaylistState_FieldNumber_Uuid = 2,
  PVPDocumentState_PlaylistState_FieldNumber_Layout = 3,
  PVPDocumentState_PlaylistState_FieldNumber_ItemScale = 4,
};

GPB_FINAL @interface PVPDocumentState_PlaylistState : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) PVPDocumentState_PlaylistState_LayoutType layout;

@property(nonatomic, readwrite) double itemScale;

@end

/**
 * Fetches the raw value of a @c PVPDocumentState_PlaylistState's @c layout property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PVPDocumentState_PlaylistState_Layout_RawValue(PVPDocumentState_PlaylistState *message);
/**
 * Sets the raw value of an @c PVPDocumentState_PlaylistState's @c layout property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPVPDocumentState_PlaylistState_Layout_RawValue(PVPDocumentState_PlaylistState *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
