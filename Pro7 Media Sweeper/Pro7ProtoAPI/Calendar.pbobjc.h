// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calendar.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Calendar_Event;
@class Calendar_Event_Action;
@class Calendar_Event_Action_Macro;
@class Calendar_Event_Action_Playlist;
@class CollectionElementType;
@class Timestamp;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Calendar_Event_DayOfWeek

typedef GPB_ENUM(Calendar_Event_DayOfWeek) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Calendar_Event_DayOfWeek_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Calendar_Event_DayOfWeek_DayOfWeekUnknown = 0,
  Calendar_Event_DayOfWeek_DayOfWeekSunday = 1,
  Calendar_Event_DayOfWeek_DayOfWeekMonday = 2,
  Calendar_Event_DayOfWeek_DayOfWeekTuesday = 3,
  Calendar_Event_DayOfWeek_DayOfWeekWednesday = 4,
  Calendar_Event_DayOfWeek_DayOfWeekThursday = 5,
  Calendar_Event_DayOfWeek_DayOfWeekFriday = 6,
  Calendar_Event_DayOfWeek_DayOfWeekSaturday = 7,
};

GPBEnumDescriptor *Calendar_Event_DayOfWeek_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Calendar_Event_DayOfWeek_IsValidValue(int32_t value);

#pragma mark - CalendarRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface CalendarRoot : GPBRootObject
@end

#pragma mark - Calendar

typedef GPB_ENUM(Calendar_FieldNumber) {
  Calendar_FieldNumber_EventsArray = 1,
  Calendar_FieldNumber_Active = 2,
};

GPB_FINAL @interface Calendar : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Calendar_Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@property(nonatomic, readwrite) BOOL active;

@end

#pragma mark - Calendar_Event

typedef GPB_ENUM(Calendar_Event_FieldNumber) {
  Calendar_Event_FieldNumber_Uuid = 1,
  Calendar_Event_FieldNumber_Name = 2,
  Calendar_Event_FieldNumber_Description_p = 3,
  Calendar_Event_FieldNumber_Date = 4,
  Calendar_Event_FieldNumber_RecurrenceDaysArray = 5,
  Calendar_Event_FieldNumber_RecurrenceLimitDate = 6,
  Calendar_Event_FieldNumber_RecurrenceExcludedDatesArray = 7,
  Calendar_Event_FieldNumber_Action = 8,
};

GPB_FINAL @interface Calendar_Event : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) Timestamp *date;
/** Test to see if @c date has been set. */
@property(nonatomic, readwrite) BOOL hasDate;

// |recurrenceDaysArray| contains |Calendar_Event_DayOfWeek|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *recurrenceDaysArray;
/** The number of items in @c recurrenceDaysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recurrenceDaysArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Timestamp *recurrenceLimitDate;
/** Test to see if @c recurrenceLimitDate has been set. */
@property(nonatomic, readwrite) BOOL hasRecurrenceLimitDate;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Timestamp*> *recurrenceExcludedDatesArray;
/** The number of items in @c recurrenceExcludedDatesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recurrenceExcludedDatesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Calendar_Event_Action *action;
/** Test to see if @c action has been set. */
@property(nonatomic, readwrite) BOOL hasAction;

@end

#pragma mark - Calendar_Event_Action

typedef GPB_ENUM(Calendar_Event_Action_FieldNumber) {
  Calendar_Event_Action_FieldNumber_Type = 1,
  Calendar_Event_Action_FieldNumber_Uuid = 2,
  Calendar_Event_Action_FieldNumber_Playlist = 3,
  Calendar_Event_Action_FieldNumber_Macro = 4,
};

typedef GPB_ENUM(Calendar_Event_Action_ActionType_OneOfCase) {
  Calendar_Event_Action_ActionType_OneOfCase_GPBUnsetOneOfCase = 0,
  Calendar_Event_Action_ActionType_OneOfCase_Playlist = 3,
  Calendar_Event_Action_ActionType_OneOfCase_Macro = 4,
};

GPB_FINAL @interface Calendar_Event_Action : GPBMessage

@property(nonatomic, readwrite) uint32_t type;

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readonly) Calendar_Event_Action_ActionType_OneOfCase actionTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Calendar_Event_Action_Playlist *playlist;

@property(nonatomic, readwrite, strong, null_resettable) Calendar_Event_Action_Macro *macro;

@end

/**
 * Clears whatever value was set for the oneof 'actionType'.
 **/
void Calendar_Event_Action_ClearActionTypeOneOfCase(Calendar_Event_Action *message);

#pragma mark - Calendar_Event_Action_Playlist

typedef GPB_ENUM(Calendar_Event_Action_Playlist_FieldNumber) {
  Calendar_Event_Action_Playlist_FieldNumber_PlaylistUuid = 1,
  Calendar_Event_Action_Playlist_FieldNumber_PlaylistItemUuid = 2,
};

GPB_FINAL @interface Calendar_Event_Action_Playlist : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *playlistUuid;
/** Test to see if @c playlistUuid has been set. */
@property(nonatomic, readwrite) BOOL hasPlaylistUuid;

@property(nonatomic, readwrite, strong, null_resettable) UUID *playlistItemUuid;
/** Test to see if @c playlistItemUuid has been set. */
@property(nonatomic, readwrite) BOOL hasPlaylistItemUuid;

@end

#pragma mark - Calendar_Event_Action_Macro

typedef GPB_ENUM(Calendar_Event_Action_Macro_FieldNumber) {
  Calendar_Event_Action_Macro_FieldNumber_Identification = 1,
};

GPB_FINAL @interface Calendar_Event_Action_Macro : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
