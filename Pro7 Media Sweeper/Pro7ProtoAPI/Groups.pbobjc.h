// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class Group;
@class HotKey;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GroupsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GroupsRoot : GPBRootObject
@end

#pragma mark - Group

typedef GPB_ENUM(Group_FieldNumber) {
  Group_FieldNumber_Uuid = 1,
  Group_FieldNumber_Name = 2,
  Group_FieldNumber_Color = 3,
  Group_FieldNumber_HotKey = 4,
  Group_FieldNumber_ApplicationGroupIdentifier = 5,
  Group_FieldNumber_ApplicationGroupName = 6,
};

GPB_FINAL @interface Group : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite, strong, null_resettable) HotKey *hotKey;
/** Test to see if @c hotKey has been set. */
@property(nonatomic, readwrite) BOOL hasHotKey;

@property(nonatomic, readwrite, strong, null_resettable) UUID *applicationGroupIdentifier;
/** Test to see if @c applicationGroupIdentifier has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationGroupIdentifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *applicationGroupName;

@end

#pragma mark - ProGroupsDocument

typedef GPB_ENUM(ProGroupsDocument_FieldNumber) {
  ProGroupsDocument_FieldNumber_GroupsArray = 1,
};

GPB_FINAL @interface ProGroupsDocument : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Group*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
