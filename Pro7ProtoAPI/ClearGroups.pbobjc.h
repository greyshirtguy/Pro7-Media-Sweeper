// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clearGroups.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Action_ClearType;
@class ApplicationInfo;
@class ClearGroupsDocument_ClearGroup;
@class Color;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ClearGroupsDocument_ClearGroup_ImageType

typedef GPB_ENUM(ClearGroupsDocument_ClearGroup_ImageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClearGroupsDocument_ClearGroup_ImageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeCustom = 0,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeOne = 1,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeTwo = 2,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeThree = 3,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeFour = 4,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeFive = 5,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeSix = 6,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeSeven = 7,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeEight = 8,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeNine = 9,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeZero = 10,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeAll = 11,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeMegahorn = 12,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypePlay = 13,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeBulb = 14,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeSunglasses = 15,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeArrow = 16,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeTarget = 17,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeStar = 18,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeSun = 19,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeBell = 20,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypePaperclip = 21,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeFlask = 22,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeEyeglasses = 23,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeCupcake = 24,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeSlide = 25,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeHat = 26,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeFlower = 27,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeHeart = 28,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeMessage = 29,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeAudio = 30,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeCloud = 31,
  ClearGroupsDocument_ClearGroup_ImageType_ImageTypeExclamation = 32,
};

GPBEnumDescriptor *ClearGroupsDocument_ClearGroup_ImageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClearGroupsDocument_ClearGroup_ImageType_IsValidValue(int32_t value);

#pragma mark - Enum ClearGroupsDocument_ClearGroup_ContentDestination

typedef GPB_ENUM(ClearGroupsDocument_ClearGroup_ContentDestination) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClearGroupsDocument_ClearGroup_ContentDestination_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClearGroupsDocument_ClearGroup_ContentDestination_ContentDestinationGlobal = 0,
  ClearGroupsDocument_ClearGroup_ContentDestination_ContentDestinationAnnouncements = 1,
};

GPBEnumDescriptor *ClearGroupsDocument_ClearGroup_ContentDestination_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClearGroupsDocument_ClearGroup_ContentDestination_IsValidValue(int32_t value);

#pragma mark - ClearGroupsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ClearGroupsRoot : GPBRootObject
@end

#pragma mark - ClearGroupsDocument

typedef GPB_ENUM(ClearGroupsDocument_FieldNumber) {
  ClearGroupsDocument_FieldNumber_ApplicationInfo = 1,
  ClearGroupsDocument_FieldNumber_GroupsArray = 2,
};

GPB_FINAL @interface ClearGroupsDocument : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ApplicationInfo *applicationInfo;
/** Test to see if @c applicationInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ClearGroupsDocument_ClearGroup*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@end

#pragma mark - ClearGroupsDocument_ClearGroup

typedef GPB_ENUM(ClearGroupsDocument_ClearGroup_FieldNumber) {
  ClearGroupsDocument_ClearGroup_FieldNumber_Uuid = 1,
  ClearGroupsDocument_ClearGroup_FieldNumber_Name = 2,
  ClearGroupsDocument_ClearGroup_FieldNumber_LayerTargetsArray = 3,
  ClearGroupsDocument_ClearGroup_FieldNumber_IsHiddenInPreview = 4,
  ClearGroupsDocument_ClearGroup_FieldNumber_ImageData = 5,
  ClearGroupsDocument_ClearGroup_FieldNumber_ImageType = 6,
  ClearGroupsDocument_ClearGroup_FieldNumber_IsIconTinted = 7,
  ClearGroupsDocument_ClearGroup_FieldNumber_IconTintColor = 8,
  ClearGroupsDocument_ClearGroup_FieldNumber_TimelineTargetsArray = 9,
};

GPB_FINAL @interface ClearGroupsDocument_ClearGroup : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Action_ClearType*> *layerTargetsArray;
/** The number of items in @c layerTargetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger layerTargetsArray_Count;

@property(nonatomic, readwrite) BOOL isHiddenInPreview;

@property(nonatomic, readwrite, copy, null_resettable) NSData *imageData;

@property(nonatomic, readwrite) ClearGroupsDocument_ClearGroup_ImageType imageType;

@property(nonatomic, readwrite) BOOL isIconTinted;

@property(nonatomic, readwrite, strong, null_resettable) Color *iconTintColor;
/** Test to see if @c iconTintColor has been set. */
@property(nonatomic, readwrite) BOOL hasIconTintColor;

// |timelineTargetsArray| contains |ClearGroupsDocument_ClearGroup_ContentDestination|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *timelineTargetsArray;
/** The number of items in @c timelineTargetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger timelineTargetsArray_Count;

@end

/**
 * Fetches the raw value of a @c ClearGroupsDocument_ClearGroup's @c imageType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClearGroupsDocument_ClearGroup_ImageType_RawValue(ClearGroupsDocument_ClearGroup *message);
/**
 * Sets the raw value of an @c ClearGroupsDocument_ClearGroup's @c imageType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClearGroupsDocument_ClearGroup_ImageType_RawValue(ClearGroupsDocument_ClearGroup *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
