// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proworkspace.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AudioInput;
@class Audio_SettingsDocument;
@class DigitalAudio_Setup;
@class ProAudienceLook;
@class ProMask;
@class ProPresenterScreen;
@class Recording_SettingsDocument;
@class Stage_ScreenAssignment;
@class VideoInput;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ProworkspaceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ProworkspaceRoot : GPBRootObject
@end

#pragma mark - ProPresenterWorkspace

typedef GPB_ENUM(ProPresenterWorkspace_FieldNumber) {
  ProPresenterWorkspace_FieldNumber_ProScreensArray = 1,
  ProPresenterWorkspace_FieldNumber_AudienceLooksArray = 2,
  ProPresenterWorkspace_FieldNumber_LiveAudienceLook = 3,
  ProPresenterWorkspace_FieldNumber_MasksArray = 4,
  ProPresenterWorkspace_FieldNumber_VideoInputsArray = 5,
  ProPresenterWorkspace_FieldNumber_StageLayoutMappingsArray = 6,
  ProPresenterWorkspace_FieldNumber_AudioSettings = 7,
  ProPresenterWorkspace_FieldNumber_SelectedLibraryName = 8,
  ProPresenterWorkspace_FieldNumber_RecordSettings = 9,
  ProPresenterWorkspace_FieldNumber_DigitalAudioSetup = 10,
  ProPresenterWorkspace_FieldNumber_AudioInputsArray = 11,
  ProPresenterWorkspace_FieldNumber_AudioInputTransitionTime = 12,
};

GPB_FINAL @interface ProPresenterWorkspace : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProPresenterScreen*> *proScreensArray;
/** The number of items in @c proScreensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger proScreensArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProAudienceLook*> *audienceLooksArray;
/** The number of items in @c audienceLooksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger audienceLooksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) ProAudienceLook *liveAudienceLook;
/** Test to see if @c liveAudienceLook has been set. */
@property(nonatomic, readwrite) BOOL hasLiveAudienceLook;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProMask*> *masksArray;
/** The number of items in @c masksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger masksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VideoInput*> *videoInputsArray;
/** The number of items in @c videoInputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger videoInputsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Stage_ScreenAssignment*> *stageLayoutMappingsArray;
/** The number of items in @c stageLayoutMappingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stageLayoutMappingsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Audio_SettingsDocument *audioSettings;
/** Test to see if @c audioSettings has been set. */
@property(nonatomic, readwrite) BOOL hasAudioSettings;

@property(nonatomic, readwrite, copy, null_resettable) NSString *selectedLibraryName;

@property(nonatomic, readwrite, strong, null_resettable) Recording_SettingsDocument *recordSettings;
/** Test to see if @c recordSettings has been set. */
@property(nonatomic, readwrite) BOOL hasRecordSettings;

@property(nonatomic, readwrite, strong, null_resettable) DigitalAudio_Setup *digitalAudioSetup;
/** Test to see if @c digitalAudioSetup has been set. */
@property(nonatomic, readwrite) BOOL hasDigitalAudioSetup;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AudioInput*> *audioInputsArray;
/** The number of items in @c audioInputsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger audioInputsArray_Count;

@property(nonatomic, readwrite) double audioInputTransitionTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
