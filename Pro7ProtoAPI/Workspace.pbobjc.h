// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workspace.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AlignmentGuide;
@class Calendar;
@class EdgeBlend;
@class Effect;
@class Graphics_Rect;
@class HotKey;
@class Layer;
@class LiveVideoPlaylist;
@class Mask;
@class OutputDisplay;
@class Playlist;
@class Screen;
@class TargetSet;
@class Transition;
@class URL;
@class UUID;
@class Workspace_EditorBackground;
@class Workspace_UnitScaling;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Workspace_UnitScaling_UnitType

typedef GPB_ENUM(Workspace_UnitScaling_UnitType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Workspace_UnitScaling_UnitType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Workspace_UnitScaling_UnitType_UnitTypePoints = 0,
  Workspace_UnitScaling_UnitType_UnitTypeMillimeters = 1,
  Workspace_UnitScaling_UnitType_UnitTypeCentimeters = 2,
  Workspace_UnitScaling_UnitType_UnitTypeMeters = 3,
  Workspace_UnitScaling_UnitType_UnitTypeInches = 4,
  Workspace_UnitScaling_UnitType_UnitTypeFeet = 5,
};

GPBEnumDescriptor *Workspace_UnitScaling_UnitType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Workspace_UnitScaling_UnitType_IsValidValue(int32_t value);

#pragma mark - WorkspaceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface WorkspaceRoot : GPBRootObject
@end

#pragma mark - Workspace

typedef GPB_ENUM(Workspace_FieldNumber) {
  Workspace_FieldNumber_Uuid = 1,
  Workspace_FieldNumber_Muted = 2,
  Workspace_FieldNumber_Hidden = 3,
  Workspace_FieldNumber_EditorBackground = 4,
  Workspace_FieldNumber_EffectPresetUuid = 5,
  Workspace_FieldNumber_EffectBuildDuration = 6,
  Workspace_FieldNumber_Transition = 7,
  Workspace_FieldNumber_ActiveMaskUuid = 8,
  Workspace_FieldNumber_Playlist = 9,
  Workspace_FieldNumber_UnitScaling = 10,
  Workspace_FieldNumber_EffectsArray = 16,
  Workspace_FieldNumber_MasksArray = 17,
  Workspace_FieldNumber_ScreensArray = 18,
  Workspace_FieldNumber_EdgeBlendsArray = 19,
  Workspace_FieldNumber_LayersArray = 20,
  Workspace_FieldNumber_TargetSetsArray = 21,
  Workspace_FieldNumber_HotKeysArray = 22,
  Workspace_FieldNumber_Calendar = 23,
  Workspace_FieldNumber_AlignmentGuidesArray = 24,
  Workspace_FieldNumber_LiveVideoPlaylist = 25,
  Workspace_FieldNumber_OutputPreviewDisplay = 26,
};

GPB_FINAL @interface Workspace : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) BOOL muted;

@property(nonatomic, readwrite) BOOL hidden;

@property(nonatomic, readwrite, strong, null_resettable) Workspace_EditorBackground *editorBackground;
/** Test to see if @c editorBackground has been set. */
@property(nonatomic, readwrite) BOOL hasEditorBackground;

@property(nonatomic, readwrite, strong, null_resettable) UUID *effectPresetUuid;
/** Test to see if @c effectPresetUuid has been set. */
@property(nonatomic, readwrite) BOOL hasEffectPresetUuid;

@property(nonatomic, readwrite) double effectBuildDuration;

@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

@property(nonatomic, readwrite, strong, null_resettable) UUID *activeMaskUuid;
/** Test to see if @c activeMaskUuid has been set. */
@property(nonatomic, readwrite) BOOL hasActiveMaskUuid;

@property(nonatomic, readwrite, strong, null_resettable) Playlist *playlist;
/** Test to see if @c playlist has been set. */
@property(nonatomic, readwrite) BOOL hasPlaylist;

@property(nonatomic, readwrite, strong, null_resettable) Workspace_UnitScaling *unitScaling;
/** Test to see if @c unitScaling has been set. */
@property(nonatomic, readwrite) BOOL hasUnitScaling;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Mask*> *masksArray;
/** The number of items in @c masksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger masksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Screen*> *screensArray;
/** The number of items in @c screensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger screensArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EdgeBlend*> *edgeBlendsArray;
/** The number of items in @c edgeBlendsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger edgeBlendsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Layer*> *layersArray;
/** The number of items in @c layersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger layersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TargetSet*> *targetSetsArray;
/** The number of items in @c targetSetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetSetsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<HotKey*> *hotKeysArray;
/** The number of items in @c hotKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hotKeysArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Calendar *calendar;
/** Test to see if @c calendar has been set. */
@property(nonatomic, readwrite) BOOL hasCalendar;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AlignmentGuide*> *alignmentGuidesArray;
/** The number of items in @c alignmentGuidesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger alignmentGuidesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) LiveVideoPlaylist *liveVideoPlaylist;
/** Test to see if @c liveVideoPlaylist has been set. */
@property(nonatomic, readwrite) BOOL hasLiveVideoPlaylist;

@property(nonatomic, readwrite, strong, null_resettable) OutputDisplay *outputPreviewDisplay;
/** Test to see if @c outputPreviewDisplay has been set. */
@property(nonatomic, readwrite) BOOL hasOutputPreviewDisplay;

@end

#pragma mark - Workspace_EditorBackground

typedef GPB_ENUM(Workspace_EditorBackground_FieldNumber) {
  Workspace_EditorBackground_FieldNumber_Enabled = 1,
  Workspace_EditorBackground_FieldNumber_Frame = 2,
  Workspace_EditorBackground_FieldNumber_URL = 3,
  Workspace_EditorBackground_FieldNumber_Opacity = 4,
};

GPB_FINAL @interface Workspace_EditorBackground : GPBMessage

@property(nonatomic, readwrite) BOOL enabled;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Rect *frame;
/** Test to see if @c frame has been set. */
@property(nonatomic, readwrite) BOOL hasFrame;

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) double opacity;

@end

#pragma mark - Workspace_UnitScaling

typedef GPB_ENUM(Workspace_UnitScaling_FieldNumber) {
  Workspace_UnitScaling_FieldNumber_Length = 1,
  Workspace_UnitScaling_FieldNumber_Unit = 2,
  Workspace_UnitScaling_FieldNumber_Points = 3,
};

GPB_FINAL @interface Workspace_UnitScaling : GPBMessage

@property(nonatomic, readwrite) double length;

@property(nonatomic, readwrite) Workspace_UnitScaling_UnitType unit;

@property(nonatomic, readwrite) double points;

@end

/**
 * Fetches the raw value of a @c Workspace_UnitScaling's @c unit property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Workspace_UnitScaling_Unit_RawValue(Workspace_UnitScaling *message);
/**
 * Sets the raw value of an @c Workspace_UnitScaling's @c unit property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetWorkspace_UnitScaling_Unit_RawValue(Workspace_UnitScaling *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
