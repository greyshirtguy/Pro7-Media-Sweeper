// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masks.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class Graphics_Element;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Mask_Mode

typedef GPB_ENUM(Mask_Mode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Mask_Mode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Mask_Mode_ModeOverlay = 0,
  Mask_Mode_ModeKeyhole = 1,
};

GPBEnumDescriptor *Mask_Mode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Mask_Mode_IsValidValue(int32_t value);

#pragma mark - MasksRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MasksRoot : GPBRootObject
@end

#pragma mark - Mask

typedef GPB_ENUM(Mask_FieldNumber) {
  Mask_FieldNumber_Uuid = 1,
  Mask_FieldNumber_Name = 2,
  Mask_FieldNumber_Color = 3,
  Mask_FieldNumber_Mode = 4,
  Mask_FieldNumber_ShapesArray = 5,
};

GPB_FINAL @interface Mask : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite) Mask_Mode mode;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Graphics_Element*> *shapesArray;
/** The number of items in @c shapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapesArray_Count;

@end

/**
 * Fetches the raw value of a @c Mask's @c mode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Mask_Mode_RawValue(Mask *message);
/**
 * Sets the raw value of an @c Mask's @c mode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMask_Mode_RawValue(Mask *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
