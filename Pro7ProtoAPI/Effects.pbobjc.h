// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: effects.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class Effect;
@class Effect_EffectVariable;
@class Effect_EffectVariable_EffectColor;
@class Effect_EffectVariable_EffectDirection;
@class Effect_EffectVariable_EffectDouble;
@class Effect_EffectVariable_EffectFloat;
@class Effect_EffectVariable_EffectInt;
@class Transition;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Effect_EffectVariable_EffectDirection_EffectDirection

typedef GPB_ENUM(Effect_EffectVariable_EffectDirection_EffectDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Effect_EffectVariable_EffectDirection_EffectDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionNone = 0,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionTopLeft = 1,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionTop = 2,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionTopRight = 4,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionLeft = 8,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionCenter = 16,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionRight = 32,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionBottomLeft = 64,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionBottom = 128,
  Effect_EffectVariable_EffectDirection_EffectDirection_EffectDirectionBottomRight = 256,
};

GPBEnumDescriptor *Effect_EffectVariable_EffectDirection_EffectDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Effect_EffectVariable_EffectDirection_EffectDirection_IsValidValue(int32_t value);

#pragma mark - EffectsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EffectsRoot : GPBRootObject
@end

#pragma mark - Effect

typedef GPB_ENUM(Effect_FieldNumber) {
  Effect_FieldNumber_Uuid = 1,
  Effect_FieldNumber_Enabled = 2,
  Effect_FieldNumber_Name = 3,
  Effect_FieldNumber_RenderId = 4,
  Effect_FieldNumber_BehaviorDescription = 5,
  Effect_FieldNumber_Category = 6,
  Effect_FieldNumber_VariablesArray = 7,
};

GPB_FINAL @interface Effect : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) BOOL enabled;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *renderId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *behaviorDescription;

@property(nonatomic, readwrite, copy, null_resettable) NSString *category;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect_EffectVariable*> *variablesArray;
/** The number of items in @c variablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger variablesArray_Count;

@end

#pragma mark - Effect_EffectVariable

typedef GPB_ENUM(Effect_EffectVariable_FieldNumber) {
  Effect_EffectVariable_FieldNumber_Name = 1,
  Effect_EffectVariable_FieldNumber_Description_p = 2,
  Effect_EffectVariable_FieldNumber_Int_p = 3,
  Effect_EffectVariable_FieldNumber_Float_p = 4,
  Effect_EffectVariable_FieldNumber_Color = 5,
  Effect_EffectVariable_FieldNumber_Direction = 6,
  Effect_EffectVariable_FieldNumber_Double_p = 7,
};

typedef GPB_ENUM(Effect_EffectVariable_Type_OneOfCase) {
  Effect_EffectVariable_Type_OneOfCase_GPBUnsetOneOfCase = 0,
  Effect_EffectVariable_Type_OneOfCase_Int_p = 3,
  Effect_EffectVariable_Type_OneOfCase_Float_p = 4,
  Effect_EffectVariable_Type_OneOfCase_Color = 5,
  Effect_EffectVariable_Type_OneOfCase_Direction = 6,
  Effect_EffectVariable_Type_OneOfCase_Double_p = 7,
};

GPB_FINAL @interface Effect_EffectVariable : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readonly) Effect_EffectVariable_Type_OneOfCase typeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Effect_EffectVariable_EffectInt *int_p;

@property(nonatomic, readwrite, strong, null_resettable) Effect_EffectVariable_EffectFloat *float_p;

@property(nonatomic, readwrite, strong, null_resettable) Effect_EffectVariable_EffectColor *color;

@property(nonatomic, readwrite, strong, null_resettable) Effect_EffectVariable_EffectDirection *direction;

@property(nonatomic, readwrite, strong, null_resettable) Effect_EffectVariable_EffectDouble *double_p;

@end

/**
 * Clears whatever value was set for the oneof 'type'.
 **/
void Effect_EffectVariable_ClearTypeOneOfCase(Effect_EffectVariable *message);

#pragma mark - Effect_EffectVariable_EffectInt

typedef GPB_ENUM(Effect_EffectVariable_EffectInt_FieldNumber) {
  Effect_EffectVariable_EffectInt_FieldNumber_Value = 1,
  Effect_EffectVariable_EffectInt_FieldNumber_DefaultValue = 2,
  Effect_EffectVariable_EffectInt_FieldNumber_Min = 3,
  Effect_EffectVariable_EffectInt_FieldNumber_Max = 4,
};

GPB_FINAL @interface Effect_EffectVariable_EffectInt : GPBMessage

@property(nonatomic, readwrite) int32_t value;

@property(nonatomic, readwrite) int32_t defaultValue;

@property(nonatomic, readwrite) int32_t min;

@property(nonatomic, readwrite) int32_t max;

@end

#pragma mark - Effect_EffectVariable_EffectFloat

typedef GPB_ENUM(Effect_EffectVariable_EffectFloat_FieldNumber) {
  Effect_EffectVariable_EffectFloat_FieldNumber_Value = 1,
  Effect_EffectVariable_EffectFloat_FieldNumber_DefaultValue = 2,
  Effect_EffectVariable_EffectFloat_FieldNumber_Min = 3,
  Effect_EffectVariable_EffectFloat_FieldNumber_Max = 4,
};

GPB_FINAL @interface Effect_EffectVariable_EffectFloat : GPBMessage

@property(nonatomic, readwrite) float value;

@property(nonatomic, readwrite) float defaultValue;

@property(nonatomic, readwrite) float min;

@property(nonatomic, readwrite) float max;

@end

#pragma mark - Effect_EffectVariable_EffectDouble

typedef GPB_ENUM(Effect_EffectVariable_EffectDouble_FieldNumber) {
  Effect_EffectVariable_EffectDouble_FieldNumber_Value = 1,
  Effect_EffectVariable_EffectDouble_FieldNumber_DefaultValue = 2,
  Effect_EffectVariable_EffectDouble_FieldNumber_Min = 3,
  Effect_EffectVariable_EffectDouble_FieldNumber_Max = 4,
};

GPB_FINAL @interface Effect_EffectVariable_EffectDouble : GPBMessage

@property(nonatomic, readwrite) double value;

@property(nonatomic, readwrite) double defaultValue;

@property(nonatomic, readwrite) double min;

@property(nonatomic, readwrite) double max;

@end

#pragma mark - Effect_EffectVariable_EffectColor

typedef GPB_ENUM(Effect_EffectVariable_EffectColor_FieldNumber) {
  Effect_EffectVariable_EffectColor_FieldNumber_Color = 1,
  Effect_EffectVariable_EffectColor_FieldNumber_DefaultColor = 2,
};

GPB_FINAL @interface Effect_EffectVariable_EffectColor : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite, strong, null_resettable) Color *defaultColor;
/** Test to see if @c defaultColor has been set. */
@property(nonatomic, readwrite) BOOL hasDefaultColor;

@end

#pragma mark - Effect_EffectVariable_EffectDirection

typedef GPB_ENUM(Effect_EffectVariable_EffectDirection_FieldNumber) {
  Effect_EffectVariable_EffectDirection_FieldNumber_Direction = 1,
  Effect_EffectVariable_EffectDirection_FieldNumber_DefaultDirection = 2,
  Effect_EffectVariable_EffectDirection_FieldNumber_AvailableDirections = 3,
};

GPB_FINAL @interface Effect_EffectVariable_EffectDirection : GPBMessage

@property(nonatomic, readwrite) Effect_EffectVariable_EffectDirection_EffectDirection direction;

@property(nonatomic, readwrite) Effect_EffectVariable_EffectDirection_EffectDirection defaultDirection;

@property(nonatomic, readwrite) uint32_t availableDirections;

@end

/**
 * Fetches the raw value of a @c Effect_EffectVariable_EffectDirection's @c direction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Effect_EffectVariable_EffectDirection_Direction_RawValue(Effect_EffectVariable_EffectDirection *message);
/**
 * Sets the raw value of an @c Effect_EffectVariable_EffectDirection's @c direction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEffect_EffectVariable_EffectDirection_Direction_RawValue(Effect_EffectVariable_EffectDirection *message, int32_t value);

/**
 * Fetches the raw value of a @c Effect_EffectVariable_EffectDirection's @c defaultDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Effect_EffectVariable_EffectDirection_DefaultDirection_RawValue(Effect_EffectVariable_EffectDirection *message);
/**
 * Sets the raw value of an @c Effect_EffectVariable_EffectDirection's @c defaultDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEffect_EffectVariable_EffectDirection_DefaultDirection_RawValue(Effect_EffectVariable_EffectDirection *message, int32_t value);

#pragma mark - Effect_Preset

typedef GPB_ENUM(Effect_Preset_FieldNumber) {
  Effect_Preset_FieldNumber_Uuid = 1,
  Effect_Preset_FieldNumber_Name = 2,
  Effect_Preset_FieldNumber_EffectsArray = 3,
};

GPB_FINAL @interface Effect_Preset : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@end

#pragma mark - Transition

typedef GPB_ENUM(Transition_FieldNumber) {
  Transition_FieldNumber_Duration = 1,
  Transition_FieldNumber_FavoriteUuid = 2,
  Transition_FieldNumber_Effect = 3,
};

GPB_FINAL @interface Transition : GPBMessage

@property(nonatomic, readwrite) double duration;

@property(nonatomic, readwrite, strong, null_resettable) UUID *favoriteUuid;
/** Test to see if @c favoriteUuid has been set. */
@property(nonatomic, readwrite) BOOL hasFavoriteUuid;

@property(nonatomic, readwrite, strong, null_resettable) Effect *effect;
/** Test to see if @c effect has been set. */
@property(nonatomic, readwrite) BOOL hasEffect;

@end

#pragma mark - Transition_Preset

typedef GPB_ENUM(Transition_Preset_FieldNumber) {
  Transition_Preset_FieldNumber_Uuid = 1,
  Transition_Preset_FieldNumber_Name = 2,
  Transition_Preset_FieldNumber_Transition = 3,
};

GPB_FINAL @interface Transition_Preset : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
