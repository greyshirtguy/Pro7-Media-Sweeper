// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Action_AudienceLookType;
@class Action_AudioInputType;
@class Action_BackgroundType;
@class Action_BlendModeType;
@class Action_ClearGroupType;
@class Action_ClearType;
@class Action_CommunicationType;
@class Action_CommunicationType_Command;
@class Action_CommunicationType_GVG100Command;
@class Action_CommunicationType_GlobalCacheCommand;
@class Action_CommunicationType_MIDICommand;
@class Action_CommunicationType_SonyBVSCommand;
@class Action_DocumentType;
@class Action_DoubleType;
@class Action_EffectsType;
@class Action_ExternalPresentationType;
@class Action_Label;
@class Action_LayerIdentification;
@class Action_MacroType;
@class Action_MaskType;
@class Action_MediaType;
@class Action_MediaType_Audio;
@class Action_MediaType_Image;
@class Action_MediaType_LiveVideo;
@class Action_MediaType_Video;
@class Action_MessageType;
@class Action_MultiScreenType;
@class Action_OldType;
@class Action_PlaylistItemType;
@class Action_PropType;
@class Action_SlideDestinationType;
@class Action_SlideType;
@class Action_SocialMediaType;
@class Action_StageLayoutType;
@class Action_TimerType;
@class Action_TransitionType;
@class AudioInput_BehaviorMode;
@class Background;
@class CollectionElementType;
@class Color;
@class Effect;
@class IntRange;
@class Layer_Blending;
@class Media;
@class Message_TokenValue;
@class PresentationSlide;
@class PropSlide;
@class Stage_ScreenAssignment;
@class Template_Slide;
@class Timer_Configuration;
@class Transition;
@class URL;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Action_ActionType

typedef GPB_ENUM(Action_ActionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_ActionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_ActionType_ActionTypeUnknown = 0,
  Action_ActionType_ActionTypeStageLayout = 1,
  Action_ActionType_ActionTypeMedia = 2,
  Action_ActionType_ActionTypeTimer = 3,
  Action_ActionType_ActionTypeCommunication = 4,
  Action_ActionType_ActionTypeClear = 5,
  Action_ActionType_ActionTypeProp = 6,
  Action_ActionType_ActionTypeMask = 7,
  Action_ActionType_ActionTypeMessage = 8,
  Action_ActionType_ActionTypeSocialMedia = 9,
  Action_ActionType_ActionTypeMultiscreen = 10,
  Action_ActionType_ActionTypePresentationSlide = 11,
  Action_ActionType_ActionTypeForegroundMedia = 12,
  Action_ActionType_ActionTypeBackgroundMedia = 13,
  Action_ActionType_ActionTypePresentationDocument = 14,
  Action_ActionType_ActionTypePropSlide = 15,
  Action_ActionType_ActionTypeExternalPresentation = 17,
  Action_ActionType_ActionTypeAudienceLook = 18,
  Action_ActionType_ActionTypeAudioInput = 19,
  Action_ActionType_ActionTypeAudioBinPlaylist = 20,
  Action_ActionType_ActionTypeMediaBinPlaylist = 21,
  Action_ActionType_ActionTypeSlideDestination = 22,
  Action_ActionType_ActionTypeMacro = 23,
  Action_ActionType_ActionTypeClearGroup = 24,
};

GPBEnumDescriptor *Action_ActionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_ActionType_IsValidValue(int32_t value);

#pragma mark - Enum Action_OldType_Category

typedef GPB_ENUM(Action_OldType_Category) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_OldType_Category_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_OldType_Category_CategoryUnknown = 0,
  Action_OldType_Category_CategoryMedia = 1,
  Action_OldType_Category_CategoryApplication = 2,
};

GPBEnumDescriptor *Action_OldType_Category_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_OldType_Category_IsValidValue(int32_t value);

#pragma mark - Enum Action_BlendModeType_BlendMode

typedef GPB_ENUM(Action_BlendModeType_BlendMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_BlendModeType_BlendMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_BlendModeType_BlendMode_BlendModeNormal = 0,
  Action_BlendModeType_BlendMode_BlendModeDissolve = 1,
  Action_BlendModeType_BlendMode_BlendModeDarken = 2,
  Action_BlendModeType_BlendMode_BlendModeMultiply = 3,
  Action_BlendModeType_BlendMode_BlendModeColorBurn = 4,
  Action_BlendModeType_BlendMode_BlendModeLinearBurn = 5,
  Action_BlendModeType_BlendMode_BlendModeDarkerColor = 6,
  Action_BlendModeType_BlendMode_BlendModeLighten = 7,
  Action_BlendModeType_BlendMode_BlendModeScreen = 8,
  Action_BlendModeType_BlendMode_BlendModeColorDodge = 9,
  Action_BlendModeType_BlendMode_BlendModeLinearDodge = 10,
  Action_BlendModeType_BlendMode_BlendModeLighterColor = 11,
  Action_BlendModeType_BlendMode_BlendModeOverlay = 12,
  Action_BlendModeType_BlendMode_BlendModeSoftLight = 13,
  Action_BlendModeType_BlendMode_BlendModeHardLight = 14,
  Action_BlendModeType_BlendMode_BlendModeVividLight = 15,
  Action_BlendModeType_BlendMode_BlendModeLinearLight = 16,
  Action_BlendModeType_BlendMode_BlendModePinLight = 17,
  Action_BlendModeType_BlendMode_BlendModeHardMix = 18,
  Action_BlendModeType_BlendMode_BlendModeDifference = 19,
  Action_BlendModeType_BlendMode_BlendModeExclusion = 20,
  Action_BlendModeType_BlendMode_BlendModeSubtract = 21,
  Action_BlendModeType_BlendMode_BlendModeDivide = 22,
  Action_BlendModeType_BlendMode_BlendModeHue = 23,
  Action_BlendModeType_BlendMode_BlendModeSaturation = 24,
  Action_BlendModeType_BlendMode_BlendModeColor = 25,
  Action_BlendModeType_BlendMode_BlendModeLuminosity = 26,
};

GPBEnumDescriptor *Action_BlendModeType_BlendMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_BlendModeType_BlendMode_IsValidValue(int32_t value);

#pragma mark - Enum Action_MediaType_LayerType

typedef GPB_ENUM(Action_MediaType_LayerType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_MediaType_LayerType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_MediaType_LayerType_LayerTypeBackground = 0,
  Action_MediaType_LayerType_LayerTypeForeground = 1,
  Action_MediaType_LayerType_LayerTypeFill = 2,
  Action_MediaType_LayerType_LayerTypeInput = 3,
};

GPBEnumDescriptor *Action_MediaType_LayerType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_MediaType_LayerType_IsValidValue(int32_t value);

#pragma mark - Enum Action_MediaType_Video_PlaybackBehavior

typedef GPB_ENUM(Action_MediaType_Video_PlaybackBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_MediaType_Video_PlaybackBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_MediaType_Video_PlaybackBehavior_PlaybackBehaviorStop = 0,
  Action_MediaType_Video_PlaybackBehavior_PlaybackBehaviorLoop = 1,
  Action_MediaType_Video_PlaybackBehavior_PlaybackBehaviorLoopForCount = 2,
  Action_MediaType_Video_PlaybackBehavior_PlaybackBehaviorLoopForTime = 3,
};

GPBEnumDescriptor *Action_MediaType_Video_PlaybackBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_MediaType_Video_PlaybackBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Action_MediaType_Video_EndBehavior

typedef GPB_ENUM(Action_MediaType_Video_EndBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_MediaType_Video_EndBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_MediaType_Video_EndBehavior_EndBehaviorStop = 0,
  Action_MediaType_Video_EndBehavior_EndBehaviorStopOnBlack = 1,
  Action_MediaType_Video_EndBehavior_EndBehaviorStopOnClear = 2,
  Action_MediaType_Video_EndBehavior_EndBehaviorFadeToBlack = 3,
  Action_MediaType_Video_EndBehavior_EndBehaviorFadeToClear = 4,
};

GPBEnumDescriptor *Action_MediaType_Video_EndBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_MediaType_Video_EndBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Action_MediaType_Audio_PlaybackBehavior

typedef GPB_ENUM(Action_MediaType_Audio_PlaybackBehavior) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_MediaType_Audio_PlaybackBehavior_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_MediaType_Audio_PlaybackBehavior_PlaybackBehaviorStop = 0,
  Action_MediaType_Audio_PlaybackBehavior_PlaybackBehaviorLoop = 1,
  Action_MediaType_Audio_PlaybackBehavior_PlaybackBehaviorLoopForCount = 2,
  Action_MediaType_Audio_PlaybackBehavior_PlaybackBehaviorLoopForTime = 3,
};

GPBEnumDescriptor *Action_MediaType_Audio_PlaybackBehavior_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_MediaType_Audio_PlaybackBehavior_IsValidValue(int32_t value);

#pragma mark - Enum Action_MediaType_Audio_MediaActionAudioType

typedef GPB_ENUM(Action_MediaType_Audio_MediaActionAudioType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_MediaType_Audio_MediaActionAudioType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_MediaType_Audio_MediaActionAudioType_MediaActionAudioTypeTune = 0,
  Action_MediaType_Audio_MediaActionAudioType_MediaActionAudioTypeSound = 1,
};

GPBEnumDescriptor *Action_MediaType_Audio_MediaActionAudioType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_MediaType_Audio_MediaActionAudioType_IsValidValue(int32_t value);

#pragma mark - Enum Action_TimerType_TimerAction

typedef GPB_ENUM(Action_TimerType_TimerAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_TimerType_TimerAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_TimerType_TimerAction_ActionStart = 0,
  Action_TimerType_TimerAction_ActionStop = 1,
  Action_TimerType_TimerAction_ActionReset = 2,
  Action_TimerType_TimerAction_ActionResetAndStart = 3,
  Action_TimerType_TimerAction_ActionStopAndReset = 4,
};

GPBEnumDescriptor *Action_TimerType_TimerAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_TimerType_TimerAction_IsValidValue(int32_t value);

#pragma mark - Enum Action_ClearType_ClearTargetLayer

typedef GPB_ENUM(Action_ClearType_ClearTargetLayer) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_ClearType_ClearTargetLayer_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerAll = 0,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerAudio = 1,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerBackground = 2,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerLiveVideo = 3,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerProp = 4,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerSlide = 5,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerLogo = 6,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerMessages = 7,
  Action_ClearType_ClearTargetLayer_ClearTargetLayerAudioEffects = 8,
};

GPBEnumDescriptor *Action_ClearType_ClearTargetLayer_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_ClearType_ClearTargetLayer_IsValidValue(int32_t value);

#pragma mark - Enum Action_ClearType_ContentDestination

typedef GPB_ENUM(Action_ClearType_ContentDestination) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_ClearType_ContentDestination_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_ClearType_ContentDestination_ContentDestinationGlobal = 0,
  Action_ClearType_ContentDestination_ContentDestinationAnnouncements = 1,
};

GPBEnumDescriptor *Action_ClearType_ContentDestination_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_ClearType_ContentDestination_IsValidValue(int32_t value);

#pragma mark - Enum Action_StageLayoutType_SlideTarget

typedef GPB_ENUM(Action_StageLayoutType_SlideTarget) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_StageLayoutType_SlideTarget_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_StageLayoutType_SlideTarget_SlideTargetNoChange = 0,
  Action_StageLayoutType_SlideTarget_SlideTargetStageOnly = 1,
  Action_StageLayoutType_SlideTarget_SlideTargetAll = 2,
};

GPBEnumDescriptor *Action_StageLayoutType_SlideTarget_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_StageLayoutType_SlideTarget_IsValidValue(int32_t value);

#pragma mark - Enum Action_SlideDestinationType_SlideTarget

typedef GPB_ENUM(Action_SlideDestinationType_SlideTarget) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_SlideDestinationType_SlideTarget_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_SlideDestinationType_SlideTarget_SlideTargetNoChange = 0,
  Action_SlideDestinationType_SlideTarget_SlideTargetStageOnly = 1,
  Action_SlideDestinationType_SlideTarget_SlideTargetAll = 2,
};

GPBEnumDescriptor *Action_SlideDestinationType_SlideTarget_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_SlideDestinationType_SlideTarget_IsValidValue(int32_t value);

#pragma mark - Enum Action_SocialMediaType_SocialMediaAction

typedef GPB_ENUM(Action_SocialMediaType_SocialMediaAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_SocialMediaType_SocialMediaAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_SocialMediaType_SocialMediaAction_SocialMediaActionLengthOfGotoNextTimer = 0,
  Action_SocialMediaType_SocialMediaAction_SocialMediaActionSpecifiedTime = 1,
};

GPBEnumDescriptor *Action_SocialMediaType_SocialMediaAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_SocialMediaType_SocialMediaAction_IsValidValue(int32_t value);

#pragma mark - Enum Action_CommunicationType_MIDICommand_State

typedef GPB_ENUM(Action_CommunicationType_MIDICommand_State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_CommunicationType_MIDICommand_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_CommunicationType_MIDICommand_State_StateOn = 0,
  Action_CommunicationType_MIDICommand_State_StateOff = 1,
};

GPBEnumDescriptor *Action_CommunicationType_MIDICommand_State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_CommunicationType_MIDICommand_State_IsValidValue(int32_t value);

#pragma mark - Enum Action_CommunicationType_GlobalCacheCommand_CommandAction

typedef GPB_ENUM(Action_CommunicationType_GlobalCacheCommand_CommandAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_CommunicationType_GlobalCacheCommand_CommandAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_CommunicationType_GlobalCacheCommand_CommandAction_CommandActionOn = 0,
  Action_CommunicationType_GlobalCacheCommand_CommandAction_CommandActionOff = 1,
  Action_CommunicationType_GlobalCacheCommand_CommandAction_CommandActionOnOffWithInterval = 2,
  Action_CommunicationType_GlobalCacheCommand_CommandAction_CommandActionOffOnWithInterval = 3,
};

GPBEnumDescriptor *Action_CommunicationType_GlobalCacheCommand_CommandAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_CommunicationType_GlobalCacheCommand_CommandAction_IsValidValue(int32_t value);

#pragma mark - Enum Action_CommunicationType_GVG100Command_CommandAction

typedef GPB_ENUM(Action_CommunicationType_GVG100Command_CommandAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_CommunicationType_GVG100Command_CommandAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_CommunicationType_GVG100Command_CommandAction_CommandActionFadeToBlack = 0,
  Action_CommunicationType_GVG100Command_CommandAction_CommandActionDskToggle = 1,
};

GPBEnumDescriptor *Action_CommunicationType_GVG100Command_CommandAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_CommunicationType_GVG100Command_CommandAction_IsValidValue(int32_t value);

#pragma mark - Enum Action_CommunicationType_SonyBVSCommand_CommandAction

typedef GPB_ENUM(Action_CommunicationType_SonyBVSCommand_CommandAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_CommunicationType_SonyBVSCommand_CommandAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_CommunicationType_SonyBVSCommand_CommandAction_CommandActionFadeToBlack = 0,
  Action_CommunicationType_SonyBVSCommand_CommandAction_CommandActionKeyOn = 1,
  Action_CommunicationType_SonyBVSCommand_CommandAction_CommandActionKeyOff = 2,
  Action_CommunicationType_SonyBVSCommand_CommandAction_CommandActionDskOn = 3,
  Action_CommunicationType_SonyBVSCommand_CommandAction_CommandActionDskOff = 4,
};

GPBEnumDescriptor *Action_CommunicationType_SonyBVSCommand_CommandAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_CommunicationType_SonyBVSCommand_CommandAction_IsValidValue(int32_t value);

#pragma mark - Enum Action_DocumentType_ContentDestination

typedef GPB_ENUM(Action_DocumentType_ContentDestination) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_DocumentType_ContentDestination_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_DocumentType_ContentDestination_ContentDestinationGlobal = 0,
  Action_DocumentType_ContentDestination_ContentDestinationAnnouncements = 1,
};

GPBEnumDescriptor *Action_DocumentType_ContentDestination_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_DocumentType_ContentDestination_IsValidValue(int32_t value);

#pragma mark - ActionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ActionRoot : GPBRootObject
@end

#pragma mark - Action

typedef GPB_ENUM(Action_FieldNumber) {
  Action_FieldNumber_Uuid = 1,
  Action_FieldNumber_Name = 2,
  Action_FieldNumber_Label = 3,
  Action_FieldNumber_DelayTime = 4,
  Action_FieldNumber_OldType = 5,
  Action_FieldNumber_IsEnabled = 6,
  Action_FieldNumber_LayerIdentification = 7,
  Action_FieldNumber_Duration = 8,
  Action_FieldNumber_Type = 9,
  Action_FieldNumber_CollectionElement = 16,
  Action_FieldNumber_PlaylistItem = 17,
  Action_FieldNumber_BlendMode = 18,
  Action_FieldNumber_Transition = 19,
  Action_FieldNumber_Media = 20,
  Action_FieldNumber_DoubleItem = 21,
  Action_FieldNumber_Effects = 22,
  Action_FieldNumber_Slide = 23,
  Action_FieldNumber_Background = 24,
  Action_FieldNumber_Timer = 25,
  Action_FieldNumber_Clear_p = 26,
  Action_FieldNumber_Stage = 27,
  Action_FieldNumber_Prop = 28,
  Action_FieldNumber_Mask = 29,
  Action_FieldNumber_Message = 30,
  Action_FieldNumber_SocialMedia = 31,
  Action_FieldNumber_Communication = 32,
  Action_FieldNumber_MultiScreen = 33,
  Action_FieldNumber_PresentationDocument = 34,
  Action_FieldNumber_ExternalPresentation = 36,
  Action_FieldNumber_AudienceLook = 37,
  Action_FieldNumber_AudioInput = 38,
  Action_FieldNumber_SlideDestination = 39,
  Action_FieldNumber_Macro = 40,
  Action_FieldNumber_ClearGroup = 41,
};

typedef GPB_ENUM(Action_ActionTypeData_OneOfCase) {
  Action_ActionTypeData_OneOfCase_GPBUnsetOneOfCase = 0,
  Action_ActionTypeData_OneOfCase_CollectionElement = 16,
  Action_ActionTypeData_OneOfCase_PlaylistItem = 17,
  Action_ActionTypeData_OneOfCase_BlendMode = 18,
  Action_ActionTypeData_OneOfCase_Transition = 19,
  Action_ActionTypeData_OneOfCase_Media = 20,
  Action_ActionTypeData_OneOfCase_DoubleItem = 21,
  Action_ActionTypeData_OneOfCase_Effects = 22,
  Action_ActionTypeData_OneOfCase_Slide = 23,
  Action_ActionTypeData_OneOfCase_Background = 24,
  Action_ActionTypeData_OneOfCase_Timer = 25,
  Action_ActionTypeData_OneOfCase_Clear_p = 26,
  Action_ActionTypeData_OneOfCase_Stage = 27,
  Action_ActionTypeData_OneOfCase_Prop = 28,
  Action_ActionTypeData_OneOfCase_Mask = 29,
  Action_ActionTypeData_OneOfCase_Message = 30,
  Action_ActionTypeData_OneOfCase_SocialMedia = 31,
  Action_ActionTypeData_OneOfCase_Communication = 32,
  Action_ActionTypeData_OneOfCase_MultiScreen = 33,
  Action_ActionTypeData_OneOfCase_PresentationDocument = 34,
  Action_ActionTypeData_OneOfCase_ExternalPresentation = 36,
  Action_ActionTypeData_OneOfCase_AudienceLook = 37,
  Action_ActionTypeData_OneOfCase_AudioInput = 38,
  Action_ActionTypeData_OneOfCase_SlideDestination = 39,
  Action_ActionTypeData_OneOfCase_Macro = 40,
  Action_ActionTypeData_OneOfCase_ClearGroup = 41,
};

GPB_FINAL @interface Action : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) Action_Label *label;
/** Test to see if @c label has been set. */
@property(nonatomic, readwrite) BOOL hasLabel;

@property(nonatomic, readwrite) double delayTime;

@property(nonatomic, readwrite, strong, null_resettable) Action_OldType *oldType;
/** Test to see if @c oldType has been set. */
@property(nonatomic, readwrite) BOOL hasOldType;

@property(nonatomic, readwrite) BOOL isEnabled;

@property(nonatomic, readwrite, strong, null_resettable) Action_LayerIdentification *layerIdentification;
/** Test to see if @c layerIdentification has been set. */
@property(nonatomic, readwrite) BOOL hasLayerIdentification;

@property(nonatomic, readwrite) double duration;

@property(nonatomic, readwrite) Action_ActionType type;

@property(nonatomic, readonly) Action_ActionTypeData_OneOfCase actionTypeDataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *collectionElement;

@property(nonatomic, readwrite, strong, null_resettable) Action_PlaylistItemType *playlistItem;

@property(nonatomic, readwrite, strong, null_resettable) Action_BlendModeType *blendMode;

@property(nonatomic, readwrite, strong, null_resettable) Action_TransitionType *transition;

@property(nonatomic, readwrite, strong, null_resettable) Action_MediaType *media;

@property(nonatomic, readwrite, strong, null_resettable) Action_DoubleType *doubleItem;

@property(nonatomic, readwrite, strong, null_resettable) Action_EffectsType *effects;

@property(nonatomic, readwrite, strong, null_resettable) Action_SlideType *slide;

@property(nonatomic, readwrite, strong, null_resettable) Action_BackgroundType *background;

@property(nonatomic, readwrite, strong, null_resettable) Action_TimerType *timer;

@property(nonatomic, readwrite, strong, null_resettable) Action_ClearType *clear_p;

@property(nonatomic, readwrite, strong, null_resettable) Action_StageLayoutType *stage;

@property(nonatomic, readwrite, strong, null_resettable) Action_PropType *prop;

@property(nonatomic, readwrite, strong, null_resettable) Action_MaskType *mask;

@property(nonatomic, readwrite, strong, null_resettable) Action_MessageType *message;

@property(nonatomic, readwrite, strong, null_resettable) Action_SocialMediaType *socialMedia;

@property(nonatomic, readwrite, strong, null_resettable) Action_CommunicationType *communication;

@property(nonatomic, readwrite, strong, null_resettable) Action_MultiScreenType *multiScreen;

@property(nonatomic, readwrite, strong, null_resettable) Action_DocumentType *presentationDocument;

@property(nonatomic, readwrite, strong, null_resettable) Action_ExternalPresentationType *externalPresentation;

@property(nonatomic, readwrite, strong, null_resettable) Action_AudienceLookType *audienceLook;

@property(nonatomic, readwrite, strong, null_resettable) Action_AudioInputType *audioInput;

@property(nonatomic, readwrite, strong, null_resettable) Action_SlideDestinationType *slideDestination;

@property(nonatomic, readwrite, strong, null_resettable) Action_MacroType *macro;

@property(nonatomic, readwrite, strong, null_resettable) Action_ClearGroupType *clearGroup;

@end

/**
 * Fetches the raw value of a @c Action's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_Type_RawValue(Action *message);
/**
 * Sets the raw value of an @c Action's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_Type_RawValue(Action *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'actionTypeData'.
 **/
void Action_ClearActionTypeDataOneOfCase(Action *message);

#pragma mark - Action_OldType

typedef GPB_ENUM(Action_OldType_FieldNumber) {
  Action_OldType_FieldNumber_Category = 1,
  Action_OldType_FieldNumber_ApplicationType = 2,
};

GPB_FINAL @interface Action_OldType : GPBMessage

@property(nonatomic, readwrite) Action_OldType_Category category;

@property(nonatomic, readwrite) int32_t applicationType;

@end

/**
 * Fetches the raw value of a @c Action_OldType's @c category property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_OldType_Category_RawValue(Action_OldType *message);
/**
 * Sets the raw value of an @c Action_OldType's @c category property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_OldType_Category_RawValue(Action_OldType *message, int32_t value);

#pragma mark - Action_Label

typedef GPB_ENUM(Action_Label_FieldNumber) {
  Action_Label_FieldNumber_Text = 2,
  Action_Label_FieldNumber_Color = 3,
};

GPB_FINAL @interface Action_Label : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@end

#pragma mark - Action_LayerIdentification

typedef GPB_ENUM(Action_LayerIdentification_FieldNumber) {
  Action_LayerIdentification_FieldNumber_Uuid = 1,
  Action_LayerIdentification_FieldNumber_Name = 2,
};

GPB_FINAL @interface Action_LayerIdentification : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - Action_PlaylistItemType

typedef GPB_ENUM(Action_PlaylistItemType_FieldNumber) {
  Action_PlaylistItemType_FieldNumber_PlaylistUuid = 1,
  Action_PlaylistItemType_FieldNumber_PlaylistName = 2,
  Action_PlaylistItemType_FieldNumber_ItemUuid = 3,
  Action_PlaylistItemType_FieldNumber_ItemName = 4,
  Action_PlaylistItemType_FieldNumber_SelectPlaylist = 5,
  Action_PlaylistItemType_FieldNumber_AlwaysRetrigger = 6,
};

GPB_FINAL @interface Action_PlaylistItemType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *playlistUuid;
/** Test to see if @c playlistUuid has been set. */
@property(nonatomic, readwrite) BOOL hasPlaylistUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *playlistName;

@property(nonatomic, readwrite, strong, null_resettable) UUID *itemUuid;
/** Test to see if @c itemUuid has been set. */
@property(nonatomic, readwrite) BOOL hasItemUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *itemName;

@property(nonatomic, readwrite) BOOL selectPlaylist;

@property(nonatomic, readwrite) BOOL alwaysRetrigger;

@end

#pragma mark - Action_BlendModeType

typedef GPB_ENUM(Action_BlendModeType_FieldNumber) {
  Action_BlendModeType_FieldNumber_BlendMode = 1,
  Action_BlendModeType_FieldNumber_Blend = 2,
};

GPB_FINAL @interface Action_BlendModeType : GPBMessage

@property(nonatomic, readwrite) Action_BlendModeType_BlendMode blendMode;

@property(nonatomic, readwrite, strong, null_resettable) Layer_Blending *blend;
/** Test to see if @c blend has been set. */
@property(nonatomic, readwrite) BOOL hasBlend;

@end

/**
 * Fetches the raw value of a @c Action_BlendModeType's @c blendMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_BlendModeType_BlendMode_RawValue(Action_BlendModeType *message);
/**
 * Sets the raw value of an @c Action_BlendModeType's @c blendMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_BlendModeType_BlendMode_RawValue(Action_BlendModeType *message, int32_t value);

#pragma mark - Action_TransitionType

typedef GPB_ENUM(Action_TransitionType_FieldNumber) {
  Action_TransitionType_FieldNumber_TransitionName = 1,
  Action_TransitionType_FieldNumber_Transition = 2,
};

GPB_FINAL @interface Action_TransitionType : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *transitionName;

@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

@end

#pragma mark - Action_DoubleType

typedef GPB_ENUM(Action_DoubleType_FieldNumber) {
  Action_DoubleType_FieldNumber_Value = 1,
};

GPB_FINAL @interface Action_DoubleType : GPBMessage

@property(nonatomic, readwrite) double value;

@end

#pragma mark - Action_EffectsType

typedef GPB_ENUM(Action_EffectsType_FieldNumber) {
  Action_EffectsType_FieldNumber_EffectsArray = 1,
};

GPB_FINAL @interface Action_EffectsType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@end

#pragma mark - Action_MediaType

typedef GPB_ENUM(Action_MediaType_FieldNumber) {
  Action_MediaType_FieldNumber_TransitionDuration = 1,
  Action_MediaType_FieldNumber_SelectedEffectPresetUuid = 2,
  Action_MediaType_FieldNumber_Transition = 3,
  Action_MediaType_FieldNumber_EffectsArray = 4,
  Action_MediaType_FieldNumber_Element = 5,
  Action_MediaType_FieldNumber_Image = 6,
  Action_MediaType_FieldNumber_Video = 7,
  Action_MediaType_FieldNumber_Audio = 8,
  Action_MediaType_FieldNumber_LiveVideo = 9,
  Action_MediaType_FieldNumber_LayerType = 10,
  Action_MediaType_FieldNumber_AlwaysRetrigger = 11,
};

typedef GPB_ENUM(Action_MediaType_MediaType_OneOfCase) {
  Action_MediaType_MediaType_OneOfCase_GPBUnsetOneOfCase = 0,
  Action_MediaType_MediaType_OneOfCase_Image = 6,
  Action_MediaType_MediaType_OneOfCase_Video = 7,
  Action_MediaType_MediaType_OneOfCase_Audio = 8,
  Action_MediaType_MediaType_OneOfCase_LiveVideo = 9,
};

GPB_FINAL @interface Action_MediaType : GPBMessage

@property(nonatomic, readwrite) double transitionDuration;

@property(nonatomic, readwrite, strong, null_resettable) UUID *selectedEffectPresetUuid;
/** Test to see if @c selectedEffectPresetUuid has been set. */
@property(nonatomic, readwrite) BOOL hasSelectedEffectPresetUuid;

@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Effect*> *effectsArray;
/** The number of items in @c effectsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger effectsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Media *element;
/** Test to see if @c element has been set. */
@property(nonatomic, readwrite) BOOL hasElement;

@property(nonatomic, readwrite) Action_MediaType_LayerType layerType;

@property(nonatomic, readwrite) BOOL alwaysRetrigger;

@property(nonatomic, readonly) Action_MediaType_MediaType_OneOfCase mediaTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Action_MediaType_Image *image;

@property(nonatomic, readwrite, strong, null_resettable) Action_MediaType_Video *video;

@property(nonatomic, readwrite, strong, null_resettable) Action_MediaType_Audio *audio;

@property(nonatomic, readwrite, strong, null_resettable) Action_MediaType_LiveVideo *liveVideo;

@end

/**
 * Fetches the raw value of a @c Action_MediaType's @c layerType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_MediaType_LayerType_RawValue(Action_MediaType *message);
/**
 * Sets the raw value of an @c Action_MediaType's @c layerType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_MediaType_LayerType_RawValue(Action_MediaType *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'mediaType'.
 **/
void Action_MediaType_ClearMediaTypeOneOfCase(Action_MediaType *message);

#pragma mark - Action_MediaType_Image

GPB_FINAL @interface Action_MediaType_Image : GPBMessage

@end

#pragma mark - Action_MediaType_Video

typedef GPB_ENUM(Action_MediaType_Video_FieldNumber) {
  Action_MediaType_Video_FieldNumber_PlaybackBehavior = 1,
  Action_MediaType_Video_FieldNumber_EndBehavior = 2,
  Action_MediaType_Video_FieldNumber_LoopTime = 3,
  Action_MediaType_Video_FieldNumber_TimesToLoop = 4,
  Action_MediaType_Video_FieldNumber_SoftLoop = 5,
  Action_MediaType_Video_FieldNumber_SoftLoopDuration = 6,
};

GPB_FINAL @interface Action_MediaType_Video : GPBMessage

@property(nonatomic, readwrite) Action_MediaType_Video_PlaybackBehavior playbackBehavior;

@property(nonatomic, readwrite) Action_MediaType_Video_EndBehavior endBehavior;

@property(nonatomic, readwrite) double loopTime;

@property(nonatomic, readwrite) uint32_t timesToLoop;

@property(nonatomic, readwrite) BOOL softLoop;

@property(nonatomic, readwrite) double softLoopDuration;

@end

/**
 * Fetches the raw value of a @c Action_MediaType_Video's @c playbackBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_MediaType_Video_PlaybackBehavior_RawValue(Action_MediaType_Video *message);
/**
 * Sets the raw value of an @c Action_MediaType_Video's @c playbackBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_MediaType_Video_PlaybackBehavior_RawValue(Action_MediaType_Video *message, int32_t value);

/**
 * Fetches the raw value of a @c Action_MediaType_Video's @c endBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_MediaType_Video_EndBehavior_RawValue(Action_MediaType_Video *message);
/**
 * Sets the raw value of an @c Action_MediaType_Video's @c endBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_MediaType_Video_EndBehavior_RawValue(Action_MediaType_Video *message, int32_t value);

#pragma mark - Action_MediaType_Audio

typedef GPB_ENUM(Action_MediaType_Audio_FieldNumber) {
  Action_MediaType_Audio_FieldNumber_PlaybackBehavior = 1,
  Action_MediaType_Audio_FieldNumber_LoopTime = 2,
  Action_MediaType_Audio_FieldNumber_TimesToLoop = 3,
  Action_MediaType_Audio_FieldNumber_AudioType = 4,
};

GPB_FINAL @interface Action_MediaType_Audio : GPBMessage

@property(nonatomic, readwrite) Action_MediaType_Audio_PlaybackBehavior playbackBehavior;

@property(nonatomic, readwrite) double loopTime;

@property(nonatomic, readwrite) uint32_t timesToLoop;

@property(nonatomic, readwrite) Action_MediaType_Audio_MediaActionAudioType audioType;

@end

/**
 * Fetches the raw value of a @c Action_MediaType_Audio's @c playbackBehavior property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_MediaType_Audio_PlaybackBehavior_RawValue(Action_MediaType_Audio *message);
/**
 * Sets the raw value of an @c Action_MediaType_Audio's @c playbackBehavior property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_MediaType_Audio_PlaybackBehavior_RawValue(Action_MediaType_Audio *message, int32_t value);

/**
 * Fetches the raw value of a @c Action_MediaType_Audio's @c audioType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_MediaType_Audio_AudioType_RawValue(Action_MediaType_Audio *message);
/**
 * Sets the raw value of an @c Action_MediaType_Audio's @c audioType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_MediaType_Audio_AudioType_RawValue(Action_MediaType_Audio *message, int32_t value);

#pragma mark - Action_MediaType_LiveVideo

GPB_FINAL @interface Action_MediaType_LiveVideo : GPBMessage

@end

#pragma mark - Action_SlideType

typedef GPB_ENUM(Action_SlideType_FieldNumber) {
  Action_SlideType_FieldNumber_Template_p = 1,
  Action_SlideType_FieldNumber_Presentation = 2,
  Action_SlideType_FieldNumber_Prop = 3,
};

typedef GPB_ENUM(Action_SlideType_Slide_OneOfCase) {
  Action_SlideType_Slide_OneOfCase_GPBUnsetOneOfCase = 0,
  Action_SlideType_Slide_OneOfCase_Template_p = 1,
  Action_SlideType_Slide_OneOfCase_Presentation = 2,
  Action_SlideType_Slide_OneOfCase_Prop = 3,
};

GPB_FINAL @interface Action_SlideType : GPBMessage

@property(nonatomic, readonly) Action_SlideType_Slide_OneOfCase slideOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Template_Slide *template_p;

@property(nonatomic, readwrite, strong, null_resettable) PresentationSlide *presentation;

@property(nonatomic, readwrite, strong, null_resettable) PropSlide *prop;

@end

/**
 * Clears whatever value was set for the oneof 'slide'.
 **/
void Action_SlideType_ClearSlideOneOfCase(Action_SlideType *message);

#pragma mark - Action_BackgroundType

typedef GPB_ENUM(Action_BackgroundType_FieldNumber) {
  Action_BackgroundType_FieldNumber_Element = 1,
};

GPB_FINAL @interface Action_BackgroundType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Background *element;
/** Test to see if @c element has been set. */
@property(nonatomic, readwrite) BOOL hasElement;

@end

#pragma mark - Action_TimerType

typedef GPB_ENUM(Action_TimerType_FieldNumber) {
  Action_TimerType_FieldNumber_ActionType = 2,
  Action_TimerType_FieldNumber_TimerIdentification = 4,
  Action_TimerType_FieldNumber_TimerConfiguration = 10,
};

GPB_FINAL @interface Action_TimerType : GPBMessage

@property(nonatomic, readwrite) Action_TimerType_TimerAction actionType;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *timerIdentification;
/** Test to see if @c timerIdentification has been set. */
@property(nonatomic, readwrite) BOOL hasTimerIdentification;

@property(nonatomic, readwrite, strong, null_resettable) Timer_Configuration *timerConfiguration;
/** Test to see if @c timerConfiguration has been set. */
@property(nonatomic, readwrite) BOOL hasTimerConfiguration;

@end

/**
 * Fetches the raw value of a @c Action_TimerType's @c actionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_TimerType_ActionType_RawValue(Action_TimerType *message);
/**
 * Sets the raw value of an @c Action_TimerType's @c actionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_TimerType_ActionType_RawValue(Action_TimerType *message, int32_t value);

#pragma mark - Action_ClearType

typedef GPB_ENUM(Action_ClearType_FieldNumber) {
  Action_ClearType_FieldNumber_TargetLayer = 2,
  Action_ClearType_FieldNumber_ContentDestination = 4,
};

GPB_FINAL @interface Action_ClearType : GPBMessage

@property(nonatomic, readwrite) Action_ClearType_ClearTargetLayer targetLayer;

@property(nonatomic, readwrite) Action_ClearType_ContentDestination contentDestination;

@end

/**
 * Fetches the raw value of a @c Action_ClearType's @c targetLayer property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_ClearType_TargetLayer_RawValue(Action_ClearType *message);
/**
 * Sets the raw value of an @c Action_ClearType's @c targetLayer property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_ClearType_TargetLayer_RawValue(Action_ClearType *message, int32_t value);

/**
 * Fetches the raw value of a @c Action_ClearType's @c contentDestination property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_ClearType_ContentDestination_RawValue(Action_ClearType *message);
/**
 * Sets the raw value of an @c Action_ClearType's @c contentDestination property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_ClearType_ContentDestination_RawValue(Action_ClearType *message, int32_t value);

#pragma mark - Action_ClearGroupType

typedef GPB_ENUM(Action_ClearGroupType_FieldNumber) {
  Action_ClearGroupType_FieldNumber_Identification = 1,
};

GPB_FINAL @interface Action_ClearGroupType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

#pragma mark - Action_StageLayoutType

typedef GPB_ENUM(Action_StageLayoutType_FieldNumber) {
  Action_StageLayoutType_FieldNumber_StageScreenAssignmentsArray = 4,
  Action_StageLayoutType_FieldNumber_SlideTarget = 5,
};

GPB_FINAL @interface Action_StageLayoutType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Stage_ScreenAssignment*> *stageScreenAssignmentsArray;
/** The number of items in @c stageScreenAssignmentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stageScreenAssignmentsArray_Count;

@property(nonatomic, readwrite) Action_StageLayoutType_SlideTarget slideTarget;

@end

/**
 * Fetches the raw value of a @c Action_StageLayoutType's @c slideTarget property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_StageLayoutType_SlideTarget_RawValue(Action_StageLayoutType *message);
/**
 * Sets the raw value of an @c Action_StageLayoutType's @c slideTarget property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_StageLayoutType_SlideTarget_RawValue(Action_StageLayoutType *message, int32_t value);

#pragma mark - Action_SlideDestinationType

typedef GPB_ENUM(Action_SlideDestinationType_FieldNumber) {
  Action_SlideDestinationType_FieldNumber_SlideTarget = 1,
};

GPB_FINAL @interface Action_SlideDestinationType : GPBMessage

@property(nonatomic, readwrite) Action_SlideDestinationType_SlideTarget slideTarget;

@end

/**
 * Fetches the raw value of a @c Action_SlideDestinationType's @c slideTarget property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_SlideDestinationType_SlideTarget_RawValue(Action_SlideDestinationType *message);
/**
 * Sets the raw value of an @c Action_SlideDestinationType's @c slideTarget property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_SlideDestinationType_SlideTarget_RawValue(Action_SlideDestinationType *message, int32_t value);

#pragma mark - Action_PropType

typedef GPB_ENUM(Action_PropType_FieldNumber) {
  Action_PropType_FieldNumber_Identification = 3,
};

GPB_FINAL @interface Action_PropType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

#pragma mark - Action_MaskType

typedef GPB_ENUM(Action_MaskType_FieldNumber) {
  Action_MaskType_FieldNumber_Identification = 3,
};

GPB_FINAL @interface Action_MaskType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

#pragma mark - Action_MessageType

typedef GPB_ENUM(Action_MessageType_FieldNumber) {
  Action_MessageType_FieldNumber_MessageIdentificaton = 1,
  Action_MessageType_FieldNumber_ContentArray = 3,
};

GPB_FINAL @interface Action_MessageType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *messageIdentificaton;
/** Test to see if @c messageIdentificaton has been set. */
@property(nonatomic, readwrite) BOOL hasMessageIdentificaton;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Message_TokenValue*> *contentArray;
/** The number of items in @c contentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger contentArray_Count;

@end

#pragma mark - Action_SocialMediaType

typedef GPB_ENUM(Action_SocialMediaType_FieldNumber) {
  Action_SocialMediaType_FieldNumber_ActionType = 1,
  Action_SocialMediaType_FieldNumber_Duration = 2,
};

GPB_FINAL @interface Action_SocialMediaType : GPBMessage

@property(nonatomic, readwrite) Action_SocialMediaType_SocialMediaAction actionType;

@property(nonatomic, readwrite) double duration;

@end

/**
 * Fetches the raw value of a @c Action_SocialMediaType's @c actionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_SocialMediaType_ActionType_RawValue(Action_SocialMediaType *message);
/**
 * Sets the raw value of an @c Action_SocialMediaType's @c actionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_SocialMediaType_ActionType_RawValue(Action_SocialMediaType *message, int32_t value);

#pragma mark - Action_CommunicationType

typedef GPB_ENUM(Action_CommunicationType_FieldNumber) {
  Action_CommunicationType_FieldNumber_DeviceIdentification = 1,
  Action_CommunicationType_FieldNumber_Format = 2,
  Action_CommunicationType_FieldNumber_Description_p = 3,
  Action_CommunicationType_FieldNumber_CommandsArray = 4,
  Action_CommunicationType_FieldNumber_MidiCommand = 5,
  Action_CommunicationType_FieldNumber_GlobalCacheCommand = 6,
  Action_CommunicationType_FieldNumber_Gvg100Command = 7,
  Action_CommunicationType_FieldNumber_SonyBvsCommand = 8,
};

typedef GPB_ENUM(Action_CommunicationType_CommandTypeData_OneOfCase) {
  Action_CommunicationType_CommandTypeData_OneOfCase_GPBUnsetOneOfCase = 0,
  Action_CommunicationType_CommandTypeData_OneOfCase_MidiCommand = 5,
  Action_CommunicationType_CommandTypeData_OneOfCase_GlobalCacheCommand = 6,
  Action_CommunicationType_CommandTypeData_OneOfCase_Gvg100Command = 7,
  Action_CommunicationType_CommandTypeData_OneOfCase_SonyBvsCommand = 8,
};

GPB_FINAL @interface Action_CommunicationType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *deviceIdentification;
/** Test to see if @c deviceIdentification has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceIdentification;

@property(nonatomic, readwrite, copy, null_resettable) NSString *format;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Action_CommunicationType_Command*> *commandsArray;
/** The number of items in @c commandsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger commandsArray_Count;

@property(nonatomic, readonly) Action_CommunicationType_CommandTypeData_OneOfCase commandTypeDataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Action_CommunicationType_MIDICommand *midiCommand;

@property(nonatomic, readwrite, strong, null_resettable) Action_CommunicationType_GlobalCacheCommand *globalCacheCommand;

@property(nonatomic, readwrite, strong, null_resettable) Action_CommunicationType_GVG100Command *gvg100Command;

@property(nonatomic, readwrite, strong, null_resettable) Action_CommunicationType_SonyBVSCommand *sonyBvsCommand;

@end

/**
 * Clears whatever value was set for the oneof 'commandTypeData'.
 **/
void Action_CommunicationType_ClearCommandTypeDataOneOfCase(Action_CommunicationType *message);

#pragma mark - Action_CommunicationType_Command

typedef GPB_ENUM(Action_CommunicationType_Command_FieldNumber) {
  Action_CommunicationType_Command_FieldNumber_Name = 1,
  Action_CommunicationType_Command_FieldNumber_Value = 2,
  Action_CommunicationType_Command_FieldNumber_ReplacementRange = 3,
  Action_CommunicationType_Command_FieldNumber_PossibleValuesArray = 4,
};

GPB_FINAL @interface Action_CommunicationType_Command : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@property(nonatomic, readwrite, strong, null_resettable) IntRange *replacementRange;
/** Test to see if @c replacementRange has been set. */
@property(nonatomic, readwrite) BOOL hasReplacementRange;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *possibleValuesArray;
/** The number of items in @c possibleValuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger possibleValuesArray_Count;

@end

#pragma mark - Action_CommunicationType_MIDICommand

typedef GPB_ENUM(Action_CommunicationType_MIDICommand_FieldNumber) {
  Action_CommunicationType_MIDICommand_FieldNumber_State = 1,
  Action_CommunicationType_MIDICommand_FieldNumber_Channel = 2,
  Action_CommunicationType_MIDICommand_FieldNumber_Note = 3,
  Action_CommunicationType_MIDICommand_FieldNumber_Intensity = 4,
};

GPB_FINAL @interface Action_CommunicationType_MIDICommand : GPBMessage

@property(nonatomic, readwrite) Action_CommunicationType_MIDICommand_State state;

@property(nonatomic, readwrite) uint32_t channel;

@property(nonatomic, readwrite) uint32_t note;

@property(nonatomic, readwrite) uint32_t intensity;

@end

/**
 * Fetches the raw value of a @c Action_CommunicationType_MIDICommand's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_CommunicationType_MIDICommand_State_RawValue(Action_CommunicationType_MIDICommand *message);
/**
 * Sets the raw value of an @c Action_CommunicationType_MIDICommand's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_CommunicationType_MIDICommand_State_RawValue(Action_CommunicationType_MIDICommand *message, int32_t value);

#pragma mark - Action_CommunicationType_GlobalCacheCommand

typedef GPB_ENUM(Action_CommunicationType_GlobalCacheCommand_FieldNumber) {
  Action_CommunicationType_GlobalCacheCommand_FieldNumber_CommandAction = 1,
  Action_CommunicationType_GlobalCacheCommand_FieldNumber_Output = 2,
  Action_CommunicationType_GlobalCacheCommand_FieldNumber_Interval = 3,
};

GPB_FINAL @interface Action_CommunicationType_GlobalCacheCommand : GPBMessage

@property(nonatomic, readwrite) Action_CommunicationType_GlobalCacheCommand_CommandAction commandAction;

@property(nonatomic, readwrite) uint32_t output;

@property(nonatomic, readwrite) uint32_t interval;

@end

/**
 * Fetches the raw value of a @c Action_CommunicationType_GlobalCacheCommand's @c commandAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_CommunicationType_GlobalCacheCommand_CommandAction_RawValue(Action_CommunicationType_GlobalCacheCommand *message);
/**
 * Sets the raw value of an @c Action_CommunicationType_GlobalCacheCommand's @c commandAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_CommunicationType_GlobalCacheCommand_CommandAction_RawValue(Action_CommunicationType_GlobalCacheCommand *message, int32_t value);

#pragma mark - Action_CommunicationType_GVG100Command

typedef GPB_ENUM(Action_CommunicationType_GVG100Command_FieldNumber) {
  Action_CommunicationType_GVG100Command_FieldNumber_CommandAction = 1,
};

GPB_FINAL @interface Action_CommunicationType_GVG100Command : GPBMessage

@property(nonatomic, readwrite) Action_CommunicationType_GVG100Command_CommandAction commandAction;

@end

/**
 * Fetches the raw value of a @c Action_CommunicationType_GVG100Command's @c commandAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_CommunicationType_GVG100Command_CommandAction_RawValue(Action_CommunicationType_GVG100Command *message);
/**
 * Sets the raw value of an @c Action_CommunicationType_GVG100Command's @c commandAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_CommunicationType_GVG100Command_CommandAction_RawValue(Action_CommunicationType_GVG100Command *message, int32_t value);

#pragma mark - Action_CommunicationType_SonyBVSCommand

typedef GPB_ENUM(Action_CommunicationType_SonyBVSCommand_FieldNumber) {
  Action_CommunicationType_SonyBVSCommand_FieldNumber_CommandAction = 1,
};

GPB_FINAL @interface Action_CommunicationType_SonyBVSCommand : GPBMessage

@property(nonatomic, readwrite) Action_CommunicationType_SonyBVSCommand_CommandAction commandAction;

@end

/**
 * Fetches the raw value of a @c Action_CommunicationType_SonyBVSCommand's @c commandAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_CommunicationType_SonyBVSCommand_CommandAction_RawValue(Action_CommunicationType_SonyBVSCommand *message);
/**
 * Sets the raw value of an @c Action_CommunicationType_SonyBVSCommand's @c commandAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_CommunicationType_SonyBVSCommand_CommandAction_RawValue(Action_CommunicationType_SonyBVSCommand *message, int32_t value);

#pragma mark - Action_MultiScreenType

typedef GPB_ENUM(Action_MultiScreenType_FieldNumber) {
  Action_MultiScreenType_FieldNumber_Identification = 3,
};

GPB_FINAL @interface Action_MultiScreenType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

#pragma mark - Action_DocumentType

typedef GPB_ENUM(Action_DocumentType_FieldNumber) {
  Action_DocumentType_FieldNumber_Identification = 1,
  Action_DocumentType_FieldNumber_SelectedArrangement = 2,
  Action_DocumentType_FieldNumber_ContentDestination = 3,
};

GPB_FINAL @interface Action_DocumentType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@property(nonatomic, readwrite, strong, null_resettable) UUID *selectedArrangement;
/** Test to see if @c selectedArrangement has been set. */
@property(nonatomic, readwrite) BOOL hasSelectedArrangement;

@property(nonatomic, readwrite) Action_DocumentType_ContentDestination contentDestination;

@end

/**
 * Fetches the raw value of a @c Action_DocumentType's @c contentDestination property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Action_DocumentType_ContentDestination_RawValue(Action_DocumentType *message);
/**
 * Sets the raw value of an @c Action_DocumentType's @c contentDestination property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAction_DocumentType_ContentDestination_RawValue(Action_DocumentType *message, int32_t value);

#pragma mark - Action_ExternalPresentationType

typedef GPB_ENUM(Action_ExternalPresentationType_FieldNumber) {
  Action_ExternalPresentationType_FieldNumber_URL = 1,
};

GPB_FINAL @interface Action_ExternalPresentationType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - Action_AudienceLookType

typedef GPB_ENUM(Action_AudienceLookType_FieldNumber) {
  Action_AudienceLookType_FieldNumber_Identification = 1,
};

GPB_FINAL @interface Action_AudienceLookType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

#pragma mark - Action_AudioInputType

typedef GPB_ENUM(Action_AudioInputType_FieldNumber) {
  Action_AudioInputType_FieldNumber_Index = 1,
  Action_AudioInputType_FieldNumber_OverrideMode = 2,
  Action_AudioInputType_FieldNumber_BehaviorMode = 3,
  Action_AudioInputType_FieldNumber_OverrideVolume = 4,
  Action_AudioInputType_FieldNumber_Volume = 5,
};

GPB_FINAL @interface Action_AudioInputType : GPBMessage

@property(nonatomic, readwrite) int32_t index;

@property(nonatomic, readwrite) BOOL overrideMode;

@property(nonatomic, readwrite, strong, null_resettable) AudioInput_BehaviorMode *behaviorMode;
/** Test to see if @c behaviorMode has been set. */
@property(nonatomic, readwrite) BOOL hasBehaviorMode;

@property(nonatomic, readwrite) BOOL overrideVolume;

@property(nonatomic, readwrite) double volume;

@end

#pragma mark - Action_MacroType

typedef GPB_ENUM(Action_MacroType_FieldNumber) {
  Action_MacroType_FieldNumber_Identification = 1,
};

GPB_FINAL @interface Action_MacroType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *identification;
/** Test to see if @c identification has been set. */
@property(nonatomic, readwrite) BOOL hasIdentification;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
