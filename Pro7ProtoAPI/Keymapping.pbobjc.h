// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keymapping.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ApplicationInfo;
@class CollectionElementType;
@class KeyMapping;
@class KeyMapping_ComputerKeyboard;
@class KeyMapping_MIDIKeyboard;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum KeyMapping_ComputerKeyboard_ModifierFlags

typedef GPB_ENUM(KeyMapping_ComputerKeyboard_ModifierFlags) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  KeyMapping_ComputerKeyboard_ModifierFlags_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  KeyMapping_ComputerKeyboard_ModifierFlags_ModifierflagsCommandKey = 0,
  KeyMapping_ComputerKeyboard_ModifierFlags_ModifierflagsShiftKey = 1,
  KeyMapping_ComputerKeyboard_ModifierFlags_ModifierflagsOptionKey = 2,
  KeyMapping_ComputerKeyboard_ModifierFlags_ModifierflagsControlKey = 3,
  KeyMapping_ComputerKeyboard_ModifierFlags_ModifierflagsFunctionKey = 4,
};

GPBEnumDescriptor *KeyMapping_ComputerKeyboard_ModifierFlags_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KeyMapping_ComputerKeyboard_ModifierFlags_IsValidValue(int32_t value);

#pragma mark - KeymappingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface KeymappingRoot : GPBRootObject
@end

#pragma mark - KeyMapping

typedef GPB_ENUM(KeyMapping_FieldNumber) {
  KeyMapping_FieldNumber_Keyboard = 1,
  KeyMapping_FieldNumber_Midi = 2,
  KeyMapping_FieldNumber_MenuItem = 100,
  KeyMapping_FieldNumber_ClearGroupIdentifier = 101,
  KeyMapping_FieldNumber_CueIdentifier = 102,
  KeyMapping_FieldNumber_GroupIdentifier = 103,
  KeyMapping_FieldNumber_MacroIdentifier = 104,
  KeyMapping_FieldNumber_PropIdentifier = 105,
  KeyMapping_FieldNumber_TimerIdentifier = 106,
};

typedef GPB_ENUM(KeyMapping_TargetIdentifier_OneOfCase) {
  KeyMapping_TargetIdentifier_OneOfCase_GPBUnsetOneOfCase = 0,
  KeyMapping_TargetIdentifier_OneOfCase_MenuItem = 100,
  KeyMapping_TargetIdentifier_OneOfCase_ClearGroupIdentifier = 101,
  KeyMapping_TargetIdentifier_OneOfCase_CueIdentifier = 102,
  KeyMapping_TargetIdentifier_OneOfCase_GroupIdentifier = 103,
  KeyMapping_TargetIdentifier_OneOfCase_MacroIdentifier = 104,
  KeyMapping_TargetIdentifier_OneOfCase_PropIdentifier = 105,
  KeyMapping_TargetIdentifier_OneOfCase_TimerIdentifier = 106,
};

GPB_FINAL @interface KeyMapping : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) KeyMapping_ComputerKeyboard *keyboard;
/** Test to see if @c keyboard has been set. */
@property(nonatomic, readwrite) BOOL hasKeyboard;

@property(nonatomic, readwrite, strong, null_resettable) KeyMapping_MIDIKeyboard *midi;
/** Test to see if @c midi has been set. */
@property(nonatomic, readwrite) BOOL hasMidi;

@property(nonatomic, readonly) KeyMapping_TargetIdentifier_OneOfCase targetIdentifierOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *menuItem;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *clearGroupIdentifier;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *cueIdentifier;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *groupIdentifier;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *macroIdentifier;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *propIdentifier;

@property(nonatomic, readwrite, strong, null_resettable) CollectionElementType *timerIdentifier;

@end

/**
 * Clears whatever value was set for the oneof 'targetIdentifier'.
 **/
void KeyMapping_ClearTargetIdentifierOneOfCase(KeyMapping *message);

#pragma mark - KeyMapping_ComputerKeyboard

typedef GPB_ENUM(KeyMapping_ComputerKeyboard_FieldNumber) {
  KeyMapping_ComputerKeyboard_FieldNumber_KeyEquivalent = 1,
  KeyMapping_ComputerKeyboard_FieldNumber_KeyEquivalentModifierFlagsArray = 2,
};

GPB_FINAL @interface KeyMapping_ComputerKeyboard : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *keyEquivalent;

// |keyEquivalentModifierFlagsArray| contains |KeyMapping_ComputerKeyboard_ModifierFlags|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *keyEquivalentModifierFlagsArray;
/** The number of items in @c keyEquivalentModifierFlagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keyEquivalentModifierFlagsArray_Count;

@end

#pragma mark - KeyMapping_MIDIKeyboard

typedef GPB_ENUM(KeyMapping_MIDIKeyboard_FieldNumber) {
  KeyMapping_MIDIKeyboard_FieldNumber_Channel = 1,
  KeyMapping_MIDIKeyboard_FieldNumber_Pitch = 2,
  KeyMapping_MIDIKeyboard_FieldNumber_Velocity = 3,
};

GPB_FINAL @interface KeyMapping_MIDIKeyboard : GPBMessage

@property(nonatomic, readwrite) int32_t channel;

@property(nonatomic, readwrite) int32_t pitch;

@property(nonatomic, readwrite) int32_t velocity;

@end

#pragma mark - KeyMappingDocument

typedef GPB_ENUM(KeyMappingDocument_FieldNumber) {
  KeyMappingDocument_FieldNumber_ApplicationInfo = 1,
  KeyMappingDocument_FieldNumber_KeymappingsArray = 2,
  KeyMappingDocument_FieldNumber_MacosKeymappingsArray = 3,
  KeyMappingDocument_FieldNumber_WindowsKeymappingsArray = 4,
};

GPB_FINAL @interface KeyMappingDocument : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ApplicationInfo *applicationInfo;
/** Test to see if @c applicationInfo has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KeyMapping*> *keymappingsArray;
/** The number of items in @c keymappingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keymappingsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KeyMapping*> *macosKeymappingsArray;
/** The number of items in @c macosKeymappingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger macosKeymappingsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KeyMapping*> *windowsKeymappingsArray;
/** The number of items in @c windowsKeymappingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger windowsKeymappingsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
