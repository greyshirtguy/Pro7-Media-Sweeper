// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: slide.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AlignmentGuide;
@class Clock_Format;
@class Color;
@class Graphics_Element;
@class Graphics_Size;
@class Slide_Element;
@class Slide_Element_Build;
@class Slide_Element_ChildBuild;
@class Slide_Element_DataLink;
@class Slide_Element_DataLink_AlternateElementFill;
@class Slide_Element_DataLink_AlternateElementText;
@class Slide_Element_DataLink_AudioCountdown;
@class Slide_Element_DataLink_AutoAdvanceTimeRemaining;
@class Slide_Element_DataLink_CCLIText;
@class Slide_Element_DataLink_CaptureStatusColor;
@class Slide_Element_DataLink_CaptureStatusText;
@class Slide_Element_DataLink_CaptureStatusText_ElapsedTime;
@class Slide_Element_DataLink_CaptureStatusText_StatusText;
@class Slide_Element_DataLink_ChordChart;
@class Slide_Element_DataLink_ChordProChart;
@class Slide_Element_DataLink_ClockText;
@class Slide_Element_DataLink_ColorTrigger;
@class Slide_Element_DataLink_FileFeed;
@class Slide_Element_DataLink_GroupColor;
@class Slide_Element_DataLink_GroupName;
@class Slide_Element_DataLink_OutputScreen;
@class Slide_Element_DataLink_PCOLive;
@class Slide_Element_DataLink_PlaylistItem;
@class Slide_Element_DataLink_Presentation;
@class Slide_Element_DataLink_PresentationNotes;
@class Slide_Element_DataLink_RSSFeed;
@class Slide_Element_DataLink_SlideCount;
@class Slide_Element_DataLink_SlideImage;
@class Slide_Element_DataLink_SlideLabelColor;
@class Slide_Element_DataLink_SlideLabelText;
@class Slide_Element_DataLink_SlideText;
@class Slide_Element_DataLink_StageMessage;
@class Slide_Element_DataLink_Ticker;
@class Slide_Element_DataLink_Ticker_FileType;
@class Slide_Element_DataLink_Ticker_RSSType;
@class Slide_Element_DataLink_Ticker_TextType;
@class Slide_Element_DataLink_TimerText;
@class Slide_Element_DataLink_VideoCountdown;
@class Slide_Element_DataLink_VisibilityLink;
@class Slide_Element_DataLink_VisibilityLink_Condition;
@class Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility;
@class Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility;
@class Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility;
@class Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility;
@class Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility;
@class Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility;
@class Slide_Element_TextScroller;
@class Timer_Format;
@class Transition;
@class URL;
@class UUID;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Slide_Element_TextRevealType

typedef GPB_ENUM(Slide_Element_TextRevealType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_TextRevealType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_TextRevealType_TextRevealTypeNone = 0,
  Slide_Element_TextRevealType_TextRevealTypeBullet = 1,
  Slide_Element_TextRevealType_TextRevealTypeUnderline = 2,
};

GPBEnumDescriptor *Slide_Element_TextRevealType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_TextRevealType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_Build_Start

typedef GPB_ENUM(Slide_Element_Build_Start) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_Build_Start_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_Build_Start_StartOnClick = 0,
  Slide_Element_Build_Start_StartWithPrevious = 1,
  Slide_Element_Build_Start_StartAfterPrevious = 2,
  Slide_Element_Build_Start_StartWithSlide = 3,
};

GPBEnumDescriptor *Slide_Element_Build_Start_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_Build_Start_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_ChildBuild_Start

typedef GPB_ENUM(Slide_Element_ChildBuild_Start) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_ChildBuild_Start_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_ChildBuild_Start_StartOnClick = 0,
  Slide_Element_ChildBuild_Start_StartWithPrevious = 1,
  Slide_Element_ChildBuild_Start_StartAfterPrevious = 2,
  Slide_Element_ChildBuild_Start_StartWithSlide = 3,
};

GPBEnumDescriptor *Slide_Element_ChildBuild_Start_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_ChildBuild_Start_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_RSSFeed_ContentType

typedef GPB_ENUM(Slide_Element_DataLink_RSSFeed_ContentType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_RSSFeed_ContentType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_RSSFeed_ContentType_ContentTypeTitleOnly = 0,
  Slide_Element_DataLink_RSSFeed_ContentType_ContentTypeTitleAndDescription = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_RSSFeed_ContentType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_RSSFeed_ContentType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_Ticker_RSSType_ContentType

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_RSSType_ContentType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_Ticker_RSSType_ContentType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_Ticker_RSSType_ContentType_ContentTypeTitleOnly = 0,
  Slide_Element_DataLink_Ticker_RSSType_ContentType_ContentTypeTitleAndDescription = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_Ticker_RSSType_ContentType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_Ticker_RSSType_ContentType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_AlternateElementText_TextTransformOption

typedef GPB_ENUM(Slide_Element_DataLink_AlternateElementText_TextTransformOption) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_AlternateElementText_TextTransformOption_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_AlternateElementText_TextTransformOption_TextTransformOptionNone = 0,
  Slide_Element_DataLink_AlternateElementText_TextTransformOption_TextTransformOptionRemoveLineReturns = 1,
  Slide_Element_DataLink_AlternateElementText_TextTransformOption_TextTransformOptionOneWordPerLine = 2,
  Slide_Element_DataLink_AlternateElementText_TextTransformOption_TextTransformOptionOneCharacterPerLine = 3,
};

GPBEnumDescriptor *Slide_Element_DataLink_AlternateElementText_TextTransformOption_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_AlternateElementText_TextTransformOption_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_PCOLive_Theme

typedef GPB_ENUM(Slide_Element_DataLink_PCOLive_Theme) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_PCOLive_Theme_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_PCOLive_Theme_PcoliveThemeLight = 0,
  Slide_Element_DataLink_PCOLive_Theme_PcoliveThemeDark = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_PCOLive_Theme_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_PCOLive_Theme_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_PCOLive_CountdownType

typedef GPB_ENUM(Slide_Element_DataLink_PCOLive_CountdownType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_PCOLive_CountdownType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_PCOLive_CountdownType_CountdownTypeFullItemLength = 0,
  Slide_Element_DataLink_PCOLive_CountdownType_CountdownTypeEndItemOnTime = 1,
  Slide_Element_DataLink_PCOLive_CountdownType_CountdownTypeEndServiceOnTime = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_PCOLive_CountdownType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_PCOLive_CountdownType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_VisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_VisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_VisibilityCriterionAll = 0,
  Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_VisibilityCriterionAny = 1,
  Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_VisibilityCriterionNone = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion_ElementVisibilityCriterionHasText = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion_ElementVisibilityCriterionHasNoText = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_TimerVisibilityCriterionHasTimeRemaining = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_TimerVisibilityCriterionHasExpired = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_TimerVisibilityCriterionIsRunning = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_TimerVisibilityCriterionNotRunning = 3,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionHasTimeRemaining = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionHasExpired = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionIsRunning = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionNotRunning = 3,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionLooping = 4,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_VideoCountdownVisibilityCriterionNotLooping = 5,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionHasTimeRemaining = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionHasExpired = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionIsRunning = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionNotRunning = 3,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionLooping = 4,
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_AudioCountdownVisibilityCriterionNotLooping = 5,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion_CaptureSessionVisibilityCriterionActive = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion_CaptureSessionVisibilityCriterionInactive = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion_VideoInputVisibilityCriterionActive = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion_VideoInputVisibilityCriterionInactive = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideText_SlideSourceType

typedef GPB_ENUM(Slide_Element_DataLink_SlideText_SlideSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideText_SlideSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideText_SlideSourceType_SlideSourceTypeCurrentSlide = 0,
  Slide_Element_DataLink_SlideText_SlideSourceType_SlideSourceTypeNextSlide = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideText_SlideSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideText_SlideSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideText_TextSourceOption

typedef GPB_ENUM(Slide_Element_DataLink_SlideText_TextSourceOption) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideText_TextSourceOption_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideText_TextSourceOption_TextSourceOptionText = 0,
  Slide_Element_DataLink_SlideText_TextSourceOption_TextSourceOptionNotes = 1,
  Slide_Element_DataLink_SlideText_TextSourceOption_TextSourceOptionElementMatchingName = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideText_TextSourceOption_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideText_TextSourceOption_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideText_TextTransformOption

typedef GPB_ENUM(Slide_Element_DataLink_SlideText_TextTransformOption) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideText_TextTransformOption_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideText_TextTransformOption_TextTransformOptionNone = 0,
  Slide_Element_DataLink_SlideText_TextTransformOption_TextTransformOptionRemoveLineReturns = 1,
  Slide_Element_DataLink_SlideText_TextTransformOption_TextTransformOptionOneWordPerLine = 2,
  Slide_Element_DataLink_SlideText_TextTransformOption_TextTransformOptionOneCharacterPerLine = 3,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideText_TextTransformOption_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideText_TextTransformOption_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideImage_SlideSourceType

typedef GPB_ENUM(Slide_Element_DataLink_SlideImage_SlideSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideImage_SlideSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideImage_SlideSourceType_SlideSourceTypeCurrentSlide = 0,
  Slide_Element_DataLink_SlideImage_SlideSourceType_SlideSourceTypeNextSlide = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideImage_SlideSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideImage_SlideSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_VideoCountdown_VideoCountdownSource

typedef GPB_ENUM(Slide_Element_DataLink_VideoCountdown_VideoCountdownSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_VideoCountdownSourcePresentation = 0,
  Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_VideoCountdownSourceAnnouncement = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_GroupName_GroupSourceType

typedef GPB_ENUM(Slide_Element_DataLink_GroupName_GroupSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_GroupName_GroupSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_GroupName_GroupSourceType_GroupSourceTypeCurrentSlide = 0,
  Slide_Element_DataLink_GroupName_GroupSourceType_GroupSourceTypeNextSlide = 1,
  Slide_Element_DataLink_GroupName_GroupSourceType_GroupSourceTypeNextGroup = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_GroupName_GroupSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_GroupName_GroupSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_GroupColor_GroupSourceType

typedef GPB_ENUM(Slide_Element_DataLink_GroupColor_GroupSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_GroupColor_GroupSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_GroupColor_GroupSourceType_GroupSourceTypeCurrentSlide = 0,
  Slide_Element_DataLink_GroupColor_GroupSourceType_GroupSourceTypeNextSlide = 1,
  Slide_Element_DataLink_GroupColor_GroupSourceType_GroupSourceTypeNextGroup = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_GroupColor_GroupSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_GroupColor_GroupSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideLabelText_SlideLabelSource

typedef GPB_ENUM(Slide_Element_DataLink_SlideLabelText_SlideLabelSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideLabelText_SlideLabelSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideLabelText_SlideLabelSource_SlideLabelSourceCurrentSlide = 0,
  Slide_Element_DataLink_SlideLabelText_SlideLabelSource_SlideLabelSourceNextSlide = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideLabelText_SlideLabelSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideLabelText_SlideLabelSource_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideLabelColor_SlideLabelSource

typedef GPB_ENUM(Slide_Element_DataLink_SlideLabelColor_SlideLabelSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_SlideLabelSourceCurrentSlide = 0,
  Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_SlideLabelSourceNextSlide = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_Presentation_PresentationSource

typedef GPB_ENUM(Slide_Element_DataLink_Presentation_PresentationSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_Presentation_PresentationSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_Presentation_PresentationSource_PresentationSourcePresentation = 0,
  Slide_Element_DataLink_Presentation_PresentationSource_PresentationSourceAnnouncement = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_Presentation_PresentationSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_Presentation_PresentationSource_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType

typedef GPB_ENUM(Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_PlaylistItemSourceTypeCurrent = 0,
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_PlaylistItemSourceTypeNext = 1,
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_PlaylistItemSourceTypeCurrentHeader = 2,
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_PlaylistItemSourceTypeNextHeader = 3,
  Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_PlaylistItemSourceTypeParentPlaylist = 4,
};

GPBEnumDescriptor *Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource

typedef GPB_ENUM(Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_AutoAdvanceSourcePresentation = 0,
  Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_AutoAdvanceSourceAnnouncement = 1,
};

GPBEnumDescriptor *Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_DataLink_SlideCount_SlideCountSourceType

typedef GPB_ENUM(Slide_Element_DataLink_SlideCount_SlideCountSourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_DataLink_SlideCount_SlideCountSourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_DataLink_SlideCount_SlideCountSourceType_SlideCountSourceTypeCurrent = 0,
  Slide_Element_DataLink_SlideCount_SlideCountSourceType_SlideCountSourceTypeRemaining = 1,
  Slide_Element_DataLink_SlideCount_SlideCountSourceType_SlideCountSourceTypeTotal = 2,
};

GPBEnumDescriptor *Slide_Element_DataLink_SlideCount_SlideCountSourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_DataLink_SlideCount_SlideCountSourceType_IsValidValue(int32_t value);

#pragma mark - Enum Slide_Element_TextScroller_Direction

typedef GPB_ENUM(Slide_Element_TextScroller_Direction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Slide_Element_TextScroller_Direction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Slide_Element_TextScroller_Direction_DirectionLeft = 0,
  Slide_Element_TextScroller_Direction_DirectionRight = 1,
  Slide_Element_TextScroller_Direction_DirectionUp = 2,
  Slide_Element_TextScroller_Direction_DirectionDown = 3,
};

GPBEnumDescriptor *Slide_Element_TextScroller_Direction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Slide_Element_TextScroller_Direction_IsValidValue(int32_t value);

#pragma mark - SlideRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SlideRoot : GPBRootObject
@end

#pragma mark - Slide

typedef GPB_ENUM(Slide_FieldNumber) {
  Slide_FieldNumber_ElementsArray = 1,
  Slide_FieldNumber_ElementBuildOrderArray = 2,
  Slide_FieldNumber_GuidelinesArray = 3,
  Slide_FieldNumber_DrawsBackgroundColor = 4,
  Slide_FieldNumber_BackgroundColor = 5,
  Slide_FieldNumber_Size = 6,
  Slide_FieldNumber_Uuid = 7,
};

GPB_FINAL @interface Slide : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element*> *elementsArray;
/** The number of items in @c elementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger elementsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UUID*> *elementBuildOrderArray;
/** The number of items in @c elementBuildOrderArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger elementBuildOrderArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AlignmentGuide*> *guidelinesArray;
/** The number of items in @c guidelinesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger guidelinesArray_Count;

@property(nonatomic, readwrite) BOOL drawsBackgroundColor;

@property(nonatomic, readwrite, strong, null_resettable) Color *backgroundColor;
/** Test to see if @c backgroundColor has been set. */
@property(nonatomic, readwrite) BOOL hasBackgroundColor;

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Size *size;
/** Test to see if @c size has been set. */
@property(nonatomic, readwrite) BOOL hasSize;

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@end

#pragma mark - Slide_Element

typedef GPB_ENUM(Slide_Element_FieldNumber) {
  Slide_Element_FieldNumber_Element = 1,
  Slide_Element_FieldNumber_BuildIn = 2,
  Slide_Element_FieldNumber_BuildOut = 3,
  Slide_Element_FieldNumber_Info = 4,
  Slide_Element_FieldNumber_RevealType = 5,
  Slide_Element_FieldNumber_DataLinksArray = 6,
  Slide_Element_FieldNumber_ChildBuildsArray = 7,
  Slide_Element_FieldNumber_RevealFromIndex = 8,
  Slide_Element_FieldNumber_TextScroller = 9,
};

GPB_FINAL @interface Slide_Element : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Graphics_Element *element;
/** Test to see if @c element has been set. */
@property(nonatomic, readwrite) BOOL hasElement;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_Build *buildIn;
/** Test to see if @c buildIn has been set. */
@property(nonatomic, readwrite) BOOL hasBuildIn;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_Build *buildOut;
/** Test to see if @c buildOut has been set. */
@property(nonatomic, readwrite) BOOL hasBuildOut;

@property(nonatomic, readwrite) uint32_t info;

@property(nonatomic, readwrite) Slide_Element_TextRevealType revealType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_DataLink*> *dataLinksArray;
/** The number of items in @c dataLinksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataLinksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_ChildBuild*> *childBuildsArray;
/** The number of items in @c childBuildsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger childBuildsArray_Count;

@property(nonatomic, readwrite) uint32_t revealFromIndex;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_TextScroller *textScroller;
/** Test to see if @c textScroller has been set. */
@property(nonatomic, readwrite) BOOL hasTextScroller;

@end

/**
 * Fetches the raw value of a @c Slide_Element's @c revealType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_RevealType_RawValue(Slide_Element *message);
/**
 * Sets the raw value of an @c Slide_Element's @c revealType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_RevealType_RawValue(Slide_Element *message, int32_t value);

#pragma mark - Slide_Element_Build

typedef GPB_ENUM(Slide_Element_Build_FieldNumber) {
  Slide_Element_Build_FieldNumber_Uuid = 1,
  Slide_Element_Build_FieldNumber_ElementUuid = 2,
  Slide_Element_Build_FieldNumber_Start = 3,
  Slide_Element_Build_FieldNumber_DelayTime = 4,
  Slide_Element_Build_FieldNumber_Transition = 5,
};

GPB_FINAL @interface Slide_Element_Build : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite, strong, null_resettable) UUID *elementUuid;
/** Test to see if @c elementUuid has been set. */
@property(nonatomic, readwrite) BOOL hasElementUuid;

@property(nonatomic, readwrite) Slide_Element_Build_Start start;

@property(nonatomic, readwrite) double delayTime;

@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

@end

/**
 * Fetches the raw value of a @c Slide_Element_Build's @c start property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_Build_Start_RawValue(Slide_Element_Build *message);
/**
 * Sets the raw value of an @c Slide_Element_Build's @c start property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_Build_Start_RawValue(Slide_Element_Build *message, int32_t value);

#pragma mark - Slide_Element_ChildBuild

typedef GPB_ENUM(Slide_Element_ChildBuild_FieldNumber) {
  Slide_Element_ChildBuild_FieldNumber_Uuid = 1,
  Slide_Element_ChildBuild_FieldNumber_Start = 2,
  Slide_Element_ChildBuild_FieldNumber_DelayTime = 3,
  Slide_Element_ChildBuild_FieldNumber_Index = 4,
};

GPB_FINAL @interface Slide_Element_ChildBuild : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@property(nonatomic, readwrite) Slide_Element_ChildBuild_Start start;

@property(nonatomic, readwrite) double delayTime;

@property(nonatomic, readwrite) uint32_t index;

@end

/**
 * Fetches the raw value of a @c Slide_Element_ChildBuild's @c start property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_ChildBuild_Start_RawValue(Slide_Element_ChildBuild *message);
/**
 * Sets the raw value of an @c Slide_Element_ChildBuild's @c start property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_ChildBuild_Start_RawValue(Slide_Element_ChildBuild *message, int32_t value);

#pragma mark - Slide_Element_DataLink

typedef GPB_ENUM(Slide_Element_DataLink_FieldNumber) {
  Slide_Element_DataLink_FieldNumber_Ticker = 1,
  Slide_Element_DataLink_FieldNumber_AlternateText = 2,
  Slide_Element_DataLink_FieldNumber_TimerText = 3,
  Slide_Element_DataLink_FieldNumber_ClockText = 4,
  Slide_Element_DataLink_FieldNumber_ChordChart = 5,
  Slide_Element_DataLink_FieldNumber_OutputScreen = 6,
  Slide_Element_DataLink_FieldNumber_PcoLive = 7,
  Slide_Element_DataLink_FieldNumber_AlternateFill = 8,
  Slide_Element_DataLink_FieldNumber_VisibilityLink = 9,
  Slide_Element_DataLink_FieldNumber_SlideText = 10,
  Slide_Element_DataLink_FieldNumber_StageMessage = 11,
  Slide_Element_DataLink_FieldNumber_VideoCountdown = 12,
  Slide_Element_DataLink_FieldNumber_SlideImage = 13,
  Slide_Element_DataLink_FieldNumber_CcliText = 14,
  Slide_Element_DataLink_FieldNumber_GroupName = 15,
  Slide_Element_DataLink_FieldNumber_GroupColor = 16,
  Slide_Element_DataLink_FieldNumber_PresentationNotes = 17,
  Slide_Element_DataLink_FieldNumber_PlaylistItem = 18,
  Slide_Element_DataLink_FieldNumber_AutoAdvanceTimeRemaining = 19,
  Slide_Element_DataLink_FieldNumber_CaptureStatusText = 20,
  Slide_Element_DataLink_FieldNumber_CaptureStatusColor = 21,
  Slide_Element_DataLink_FieldNumber_SlideCount = 22,
  Slide_Element_DataLink_FieldNumber_AudioCountdown = 23,
  Slide_Element_DataLink_FieldNumber_Presentation = 24,
  Slide_Element_DataLink_FieldNumber_SlideLabelText = 25,
  Slide_Element_DataLink_FieldNumber_SlideLabelColor = 26,
  Slide_Element_DataLink_FieldNumber_RssFeed = 27,
  Slide_Element_DataLink_FieldNumber_FileFeed = 28,
  Slide_Element_DataLink_FieldNumber_ChordProChart = 29,
};

typedef GPB_ENUM(Slide_Element_DataLink_PropertyType_OneOfCase) {
  Slide_Element_DataLink_PropertyType_OneOfCase_GPBUnsetOneOfCase = 0,
  Slide_Element_DataLink_PropertyType_OneOfCase_Ticker = 1,
  Slide_Element_DataLink_PropertyType_OneOfCase_AlternateText = 2,
  Slide_Element_DataLink_PropertyType_OneOfCase_TimerText = 3,
  Slide_Element_DataLink_PropertyType_OneOfCase_ClockText = 4,
  Slide_Element_DataLink_PropertyType_OneOfCase_ChordChart = 5,
  Slide_Element_DataLink_PropertyType_OneOfCase_OutputScreen = 6,
  Slide_Element_DataLink_PropertyType_OneOfCase_PcoLive = 7,
  Slide_Element_DataLink_PropertyType_OneOfCase_AlternateFill = 8,
  Slide_Element_DataLink_PropertyType_OneOfCase_VisibilityLink = 9,
  Slide_Element_DataLink_PropertyType_OneOfCase_SlideText = 10,
  Slide_Element_DataLink_PropertyType_OneOfCase_StageMessage = 11,
  Slide_Element_DataLink_PropertyType_OneOfCase_VideoCountdown = 12,
  Slide_Element_DataLink_PropertyType_OneOfCase_SlideImage = 13,
  Slide_Element_DataLink_PropertyType_OneOfCase_CcliText = 14,
  Slide_Element_DataLink_PropertyType_OneOfCase_GroupName = 15,
  Slide_Element_DataLink_PropertyType_OneOfCase_GroupColor = 16,
  Slide_Element_DataLink_PropertyType_OneOfCase_PresentationNotes = 17,
  Slide_Element_DataLink_PropertyType_OneOfCase_PlaylistItem = 18,
  Slide_Element_DataLink_PropertyType_OneOfCase_AutoAdvanceTimeRemaining = 19,
  Slide_Element_DataLink_PropertyType_OneOfCase_CaptureStatusText = 20,
  Slide_Element_DataLink_PropertyType_OneOfCase_CaptureStatusColor = 21,
  Slide_Element_DataLink_PropertyType_OneOfCase_SlideCount = 22,
  Slide_Element_DataLink_PropertyType_OneOfCase_AudioCountdown = 23,
  Slide_Element_DataLink_PropertyType_OneOfCase_Presentation = 24,
  Slide_Element_DataLink_PropertyType_OneOfCase_SlideLabelText = 25,
  Slide_Element_DataLink_PropertyType_OneOfCase_SlideLabelColor = 26,
  Slide_Element_DataLink_PropertyType_OneOfCase_RssFeed = 27,
  Slide_Element_DataLink_PropertyType_OneOfCase_FileFeed = 28,
  Slide_Element_DataLink_PropertyType_OneOfCase_ChordProChart = 29,
};

GPB_FINAL @interface Slide_Element_DataLink : GPBMessage

@property(nonatomic, readonly) Slide_Element_DataLink_PropertyType_OneOfCase propertyTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_Ticker *ticker;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_AlternateElementText *alternateText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_TimerText *timerText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_ClockText *clockText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_ChordChart *chordChart;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_OutputScreen *outputScreen;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_PCOLive *pcoLive;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_AlternateElementFill *alternateFill;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink *visibilityLink;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_SlideText *slideText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_StageMessage *stageMessage;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VideoCountdown *videoCountdown;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_SlideImage *slideImage;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_CCLIText *ccliText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_GroupName *groupName;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_GroupColor *groupColor;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_PresentationNotes *presentationNotes;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_PlaylistItem *playlistItem;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_AutoAdvanceTimeRemaining *autoAdvanceTimeRemaining;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_CaptureStatusText *captureStatusText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_CaptureStatusColor *captureStatusColor;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_SlideCount *slideCount;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_AudioCountdown *audioCountdown;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_Presentation *presentation;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_SlideLabelText *slideLabelText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_SlideLabelColor *slideLabelColor;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_RSSFeed *rssFeed;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_FileFeed *fileFeed;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_ChordProChart *chordProChart;

@end

/**
 * Clears whatever value was set for the oneof 'propertyType'.
 **/
void Slide_Element_DataLink_ClearPropertyTypeOneOfCase(Slide_Element_DataLink *message);

#pragma mark - Slide_Element_DataLink_RSSFeed

typedef GPB_ENUM(Slide_Element_DataLink_RSSFeed_FieldNumber) {
  Slide_Element_DataLink_RSSFeed_FieldNumber_URL = 1,
  Slide_Element_DataLink_RSSFeed_FieldNumber_Content = 2,
  Slide_Element_DataLink_RSSFeed_FieldNumber_TextDelimiter = 3,
};

GPB_FINAL @interface Slide_Element_DataLink_RSSFeed : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) Slide_Element_DataLink_RSSFeed_ContentType content;

@property(nonatomic, readwrite, copy, null_resettable) NSString *textDelimiter;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_RSSFeed's @c content property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_RSSFeed_Content_RawValue(Slide_Element_DataLink_RSSFeed *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_RSSFeed's @c content property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_RSSFeed_Content_RawValue(Slide_Element_DataLink_RSSFeed *message, int32_t value);

#pragma mark - Slide_Element_DataLink_FileFeed

typedef GPB_ENUM(Slide_Element_DataLink_FileFeed_FieldNumber) {
  Slide_Element_DataLink_FileFeed_FieldNumber_URL = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_FileFeed : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - Slide_Element_DataLink_Ticker

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_FieldNumber) {
  Slide_Element_DataLink_Ticker_FieldNumber_TextType = 1,
  Slide_Element_DataLink_Ticker_FieldNumber_RssType = 2,
  Slide_Element_DataLink_Ticker_FieldNumber_FileType = 3,
  Slide_Element_DataLink_Ticker_FieldNumber_PlayRate = 4,
  Slide_Element_DataLink_Ticker_FieldNumber_ShouldLoop = 5,
  Slide_Element_DataLink_Ticker_FieldNumber_LoopDelay = 6,
  Slide_Element_DataLink_Ticker_FieldNumber_TextDelimiter = 7,
};

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_SourceType_OneOfCase) {
  Slide_Element_DataLink_Ticker_SourceType_OneOfCase_GPBUnsetOneOfCase = 0,
  Slide_Element_DataLink_Ticker_SourceType_OneOfCase_TextType = 1,
  Slide_Element_DataLink_Ticker_SourceType_OneOfCase_RssType = 2,
  Slide_Element_DataLink_Ticker_SourceType_OneOfCase_FileType = 3,
};

GPB_FINAL @interface Slide_Element_DataLink_Ticker : GPBMessage

@property(nonatomic, readwrite) double playRate;

@property(nonatomic, readwrite) BOOL shouldLoop;

@property(nonatomic, readwrite) double loopDelay;

@property(nonatomic, readwrite, copy, null_resettable) NSString *textDelimiter;

@property(nonatomic, readonly) Slide_Element_DataLink_Ticker_SourceType_OneOfCase sourceTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_Ticker_TextType *textType;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_Ticker_RSSType *rssType;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_Ticker_FileType *fileType;

@end

/**
 * Clears whatever value was set for the oneof 'sourceType'.
 **/
void Slide_Element_DataLink_Ticker_ClearSourceTypeOneOfCase(Slide_Element_DataLink_Ticker *message);

#pragma mark - Slide_Element_DataLink_Ticker_TextType

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_TextType_FieldNumber) {
  Slide_Element_DataLink_Ticker_TextType_FieldNumber_Text = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_Ticker_TextType : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@end

#pragma mark - Slide_Element_DataLink_Ticker_RSSType

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_RSSType_FieldNumber) {
  Slide_Element_DataLink_Ticker_RSSType_FieldNumber_URL = 1,
  Slide_Element_DataLink_Ticker_RSSType_FieldNumber_Content = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_Ticker_RSSType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) Slide_Element_DataLink_Ticker_RSSType_ContentType content;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_Ticker_RSSType's @c content property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_Ticker_RSSType_Content_RawValue(Slide_Element_DataLink_Ticker_RSSType *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_Ticker_RSSType's @c content property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_Ticker_RSSType_Content_RawValue(Slide_Element_DataLink_Ticker_RSSType *message, int32_t value);

#pragma mark - Slide_Element_DataLink_Ticker_FileType

typedef GPB_ENUM(Slide_Element_DataLink_Ticker_FileType_FieldNumber) {
  Slide_Element_DataLink_Ticker_FileType_FieldNumber_URL = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_Ticker_FileType : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) URL *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - Slide_Element_DataLink_AlternateElementText

typedef GPB_ENUM(Slide_Element_DataLink_AlternateElementText_FieldNumber) {
  Slide_Element_DataLink_AlternateElementText_FieldNumber_OtherElementUuid = 1,
  Slide_Element_DataLink_AlternateElementText_FieldNumber_OtherElementName = 2,
  Slide_Element_DataLink_AlternateElementText_FieldNumber_TextTransformOptions = 3,
  Slide_Element_DataLink_AlternateElementText_FieldNumber_TextTransform = 4,
};

GPB_FINAL @interface Slide_Element_DataLink_AlternateElementText : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *otherElementUuid;
/** Test to see if @c otherElementUuid has been set. */
@property(nonatomic, readwrite) BOOL hasOtherElementUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *otherElementName;

@property(nonatomic, readwrite) uint32_t textTransformOptions;

@property(nonatomic, readwrite) Slide_Element_DataLink_AlternateElementText_TextTransformOption textTransform;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_AlternateElementText's @c textTransform property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_AlternateElementText_TextTransform_RawValue(Slide_Element_DataLink_AlternateElementText *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_AlternateElementText's @c textTransform property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_AlternateElementText_TextTransform_RawValue(Slide_Element_DataLink_AlternateElementText *message, int32_t value);

#pragma mark - Slide_Element_DataLink_CCLIText

GPB_FINAL @interface Slide_Element_DataLink_CCLIText : GPBMessage

@end

#pragma mark - Slide_Element_DataLink_ColorTrigger

typedef GPB_ENUM(Slide_Element_DataLink_ColorTrigger_FieldNumber) {
  Slide_Element_DataLink_ColorTrigger_FieldNumber_Time = 1,
  Slide_Element_DataLink_ColorTrigger_FieldNumber_Color = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_ColorTrigger : GPBMessage

@property(nonatomic, readwrite) double time;

@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@end

#pragma mark - Slide_Element_DataLink_TimerText

typedef GPB_ENUM(Slide_Element_DataLink_TimerText_FieldNumber) {
  Slide_Element_DataLink_TimerText_FieldNumber_TimerUuid = 1,
  Slide_Element_DataLink_TimerText_FieldNumber_TimerName = 2,
  Slide_Element_DataLink_TimerText_FieldNumber_TimerFormat = 3,
  Slide_Element_DataLink_TimerText_FieldNumber_TimerFormatString = 4,
  Slide_Element_DataLink_TimerText_FieldNumber_ColorTriggersArray = 5,
};

GPB_FINAL @interface Slide_Element_DataLink_TimerText : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *timerUuid;
/** Test to see if @c timerUuid has been set. */
@property(nonatomic, readwrite) BOOL hasTimerUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timerName;

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *timerFormat;
/** Test to see if @c timerFormat has been set. */
@property(nonatomic, readwrite) BOOL hasTimerFormat;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timerFormatString;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_DataLink_ColorTrigger*> *colorTriggersArray;
/** The number of items in @c colorTriggersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colorTriggersArray_Count;

@end

#pragma mark - Slide_Element_DataLink_ClockText

typedef GPB_ENUM(Slide_Element_DataLink_ClockText_FieldNumber) {
  Slide_Element_DataLink_ClockText_FieldNumber_ClockFormatString = 1,
  Slide_Element_DataLink_ClockText_FieldNumber_Format = 5,
};

GPB_FINAL @interface Slide_Element_DataLink_ClockText : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *clockFormatString;

@property(nonatomic, readwrite, strong, null_resettable) Clock_Format *format;
/** Test to see if @c format has been set. */
@property(nonatomic, readwrite) BOOL hasFormat;

@end

#pragma mark - Slide_Element_DataLink_ChordChart

GPB_FINAL @interface Slide_Element_DataLink_ChordChart : GPBMessage

@end

#pragma mark - Slide_Element_DataLink_OutputScreen

typedef GPB_ENUM(Slide_Element_DataLink_OutputScreen_FieldNumber) {
  Slide_Element_DataLink_OutputScreen_FieldNumber_ScreenId = 1,
  Slide_Element_DataLink_OutputScreen_FieldNumber_ScreenName = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_OutputScreen : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *screenId;
/** Test to see if @c screenId has been set. */
@property(nonatomic, readwrite) BOOL hasScreenId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *screenName;

@end

#pragma mark - Slide_Element_DataLink_PCOLive

typedef GPB_ENUM(Slide_Element_DataLink_PCOLive_FieldNumber) {
  Slide_Element_DataLink_PCOLive_FieldNumber_Theme = 2,
  Slide_Element_DataLink_PCOLive_FieldNumber_CountdownType = 3,
};

GPB_FINAL @interface Slide_Element_DataLink_PCOLive : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_PCOLive_Theme theme;

@property(nonatomic, readwrite) Slide_Element_DataLink_PCOLive_CountdownType countdownType;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_PCOLive's @c theme property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_PCOLive_Theme_RawValue(Slide_Element_DataLink_PCOLive *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_PCOLive's @c theme property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_PCOLive_Theme_RawValue(Slide_Element_DataLink_PCOLive *message, int32_t value);

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_PCOLive's @c countdownType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_PCOLive_CountdownType_RawValue(Slide_Element_DataLink_PCOLive *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_PCOLive's @c countdownType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_PCOLive_CountdownType_RawValue(Slide_Element_DataLink_PCOLive *message, int32_t value);

#pragma mark - Slide_Element_DataLink_AlternateElementFill

typedef GPB_ENUM(Slide_Element_DataLink_AlternateElementFill_FieldNumber) {
  Slide_Element_DataLink_AlternateElementFill_FieldNumber_OtherElementUuid = 1,
  Slide_Element_DataLink_AlternateElementFill_FieldNumber_OtherElementName = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_AlternateElementFill : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *otherElementUuid;
/** Test to see if @c otherElementUuid has been set. */
@property(nonatomic, readwrite) BOOL hasOtherElementUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *otherElementName;

@end

#pragma mark - Slide_Element_DataLink_VisibilityLink

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_FieldNumber_VisibilityCriterion = 1,
  Slide_Element_DataLink_VisibilityLink_FieldNumber_ConditionsArray = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_VisibilityCriterion visibilityCriterion;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_DataLink_VisibilityLink_Condition*> *conditionsArray;
/** The number of items in @c conditionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger conditionsArray_Count;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_ElementVisibility = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_TimerVisibility = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_VideoCountdownVisibility = 3,
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_CaptureSessionVisibility = 4,
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_VideoInputVisibility = 5,
  Slide_Element_DataLink_VisibilityLink_Condition_FieldNumber_AudioCountdownVisibility = 6,
};

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase) {
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_GPBUnsetOneOfCase = 0,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_ElementVisibility = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_TimerVisibility = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_VideoCountdownVisibility = 3,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_CaptureSessionVisibility = 4,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_VideoInputVisibility = 5,
  Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase_AudioCountdownVisibility = 6,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition : GPBMessage

@property(nonatomic, readonly) Slide_Element_DataLink_VisibilityLink_Condition_ConditionType_OneOfCase conditionTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility *elementVisibility;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility *timerVisibility;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility *videoCountdownVisibility;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility *captureSessionVisibility;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility *videoInputVisibility;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility *audioCountdownVisibility;

@end

/**
 * Clears whatever value was set for the oneof 'conditionType'.
 **/
void Slide_Element_DataLink_VisibilityLink_Condition_ClearConditionTypeOneOfCase(Slide_Element_DataLink_VisibilityLink_Condition *message);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_FieldNumber_OtherElementUuid = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_FieldNumber_OtherElementName = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_FieldNumber_VisibilityCriterion = 3,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *otherElementUuid;
/** Test to see if @c otherElementUuid has been set. */
@property(nonatomic, readwrite) BOOL hasOtherElementUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *otherElementName;

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_ElementVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_ElementVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_ElementVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_FieldNumber_TimerUuid = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_FieldNumber_TimerName = 2,
  Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_FieldNumber_VisibilityCriterion = 3,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UUID *timerUuid;
/** Test to see if @c timerUuid has been set. */
@property(nonatomic, readwrite) BOOL hasTimerUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timerName;

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_TimerVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_TimerVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_TimerVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_FieldNumber_VisibilityCriterion = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VideoCountdownVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_VideoCountdownVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_FieldNumber_VisibilityCriterion = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_AudioCountdownVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_AudioCountdownVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_FieldNumber_VisibilityCriterion = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_CaptureSessionVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_CaptureSessionVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility

typedef GPB_ENUM(Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_FieldNumber) {
  Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_FieldNumber_VideoInputIndex = 1,
  Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_FieldNumber_VisibilityCriterion = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility : GPBMessage

@property(nonatomic, readwrite) int32_t videoInputIndex;

@property(nonatomic, readwrite) Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VideoInputVisibilityCriterion visibilityCriterion;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility's @c visibilityCriterion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility's @c visibilityCriterion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility_VisibilityCriterion_RawValue(Slide_Element_DataLink_VisibilityLink_Condition_VideoInputVisibility *message, int32_t value);

#pragma mark - Slide_Element_DataLink_SlideText

typedef GPB_ENUM(Slide_Element_DataLink_SlideText_FieldNumber) {
  Slide_Element_DataLink_SlideText_FieldNumber_SourceSlide = 1,
  Slide_Element_DataLink_SlideText_FieldNumber_SourceOption = 2,
  Slide_Element_DataLink_SlideText_FieldNumber_PreserveNotesFormat = 3,
  Slide_Element_DataLink_SlideText_FieldNumber_NameToMatch = 4,
  Slide_Element_DataLink_SlideText_FieldNumber_ElementTextTransform = 5,
};

GPB_FINAL @interface Slide_Element_DataLink_SlideText : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideText_SlideSourceType sourceSlide;

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideText_TextSourceOption sourceOption;

@property(nonatomic, readwrite) BOOL preserveNotesFormat;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nameToMatch;

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideText_TextTransformOption elementTextTransform;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideText's @c sourceSlide property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideText_SourceSlide_RawValue(Slide_Element_DataLink_SlideText *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideText's @c sourceSlide property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideText_SourceSlide_RawValue(Slide_Element_DataLink_SlideText *message, int32_t value);

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideText's @c sourceOption property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideText_SourceOption_RawValue(Slide_Element_DataLink_SlideText *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideText's @c sourceOption property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideText_SourceOption_RawValue(Slide_Element_DataLink_SlideText *message, int32_t value);

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideText's @c elementTextTransform property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideText_ElementTextTransform_RawValue(Slide_Element_DataLink_SlideText *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideText's @c elementTextTransform property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideText_ElementTextTransform_RawValue(Slide_Element_DataLink_SlideText *message, int32_t value);

#pragma mark - Slide_Element_DataLink_SlideImage

typedef GPB_ENUM(Slide_Element_DataLink_SlideImage_FieldNumber) {
  Slide_Element_DataLink_SlideImage_FieldNumber_SourceSlide = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_SlideImage : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideImage_SlideSourceType sourceSlide;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideImage's @c sourceSlide property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideImage_SourceSlide_RawValue(Slide_Element_DataLink_SlideImage *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideImage's @c sourceSlide property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideImage_SourceSlide_RawValue(Slide_Element_DataLink_SlideImage *message, int32_t value);

#pragma mark - Slide_Element_DataLink_StageMessage

typedef GPB_ENUM(Slide_Element_DataLink_StageMessage_FieldNumber) {
  Slide_Element_DataLink_StageMessage_FieldNumber_ShouldFlash = 1,
  Slide_Element_DataLink_StageMessage_FieldNumber_FlashColor = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_StageMessage : GPBMessage

@property(nonatomic, readwrite) BOOL shouldFlash;

@property(nonatomic, readwrite, strong, null_resettable) Color *flashColor;
/** Test to see if @c flashColor has been set. */
@property(nonatomic, readwrite) BOOL hasFlashColor;

@end

#pragma mark - Slide_Element_DataLink_VideoCountdown

typedef GPB_ENUM(Slide_Element_DataLink_VideoCountdown_FieldNumber) {
  Slide_Element_DataLink_VideoCountdown_FieldNumber_TimerFormat = 1,
  Slide_Element_DataLink_VideoCountdown_FieldNumber_TimerFormatString = 2,
  Slide_Element_DataLink_VideoCountdown_FieldNumber_ColorTriggersArray = 3,
  Slide_Element_DataLink_VideoCountdown_FieldNumber_IgnoreLoopingVideos = 4,
  Slide_Element_DataLink_VideoCountdown_FieldNumber_VideoCountdownSource = 5,
};

GPB_FINAL @interface Slide_Element_DataLink_VideoCountdown : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *timerFormat;
/** Test to see if @c timerFormat has been set. */
@property(nonatomic, readwrite) BOOL hasTimerFormat;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timerFormatString;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_DataLink_ColorTrigger*> *colorTriggersArray;
/** The number of items in @c colorTriggersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colorTriggersArray_Count;

@property(nonatomic, readwrite) BOOL ignoreLoopingVideos;

@property(nonatomic, readwrite) Slide_Element_DataLink_VideoCountdown_VideoCountdownSource videoCountdownSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_VideoCountdown's @c videoCountdownSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_VideoCountdown_VideoCountdownSource_RawValue(Slide_Element_DataLink_VideoCountdown *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_VideoCountdown's @c videoCountdownSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_VideoCountdown_VideoCountdownSource_RawValue(Slide_Element_DataLink_VideoCountdown *message, int32_t value);

#pragma mark - Slide_Element_DataLink_AudioCountdown

typedef GPB_ENUM(Slide_Element_DataLink_AudioCountdown_FieldNumber) {
  Slide_Element_DataLink_AudioCountdown_FieldNumber_TimerFormat = 1,
  Slide_Element_DataLink_AudioCountdown_FieldNumber_TimerFormatString = 2,
  Slide_Element_DataLink_AudioCountdown_FieldNumber_ColorTriggersArray = 3,
  Slide_Element_DataLink_AudioCountdown_FieldNumber_IgnoreLoopingAudio = 4,
};

GPB_FINAL @interface Slide_Element_DataLink_AudioCountdown : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *timerFormat;
/** Test to see if @c timerFormat has been set. */
@property(nonatomic, readwrite) BOOL hasTimerFormat;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timerFormatString;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Slide_Element_DataLink_ColorTrigger*> *colorTriggersArray;
/** The number of items in @c colorTriggersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colorTriggersArray_Count;

@property(nonatomic, readwrite) BOOL ignoreLoopingAudio;

@end

#pragma mark - Slide_Element_DataLink_GroupName

typedef GPB_ENUM(Slide_Element_DataLink_GroupName_FieldNumber) {
  Slide_Element_DataLink_GroupName_FieldNumber_GroupSource = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_GroupName : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_GroupName_GroupSourceType groupSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_GroupName's @c groupSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_GroupName_GroupSource_RawValue(Slide_Element_DataLink_GroupName *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_GroupName's @c groupSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_GroupName_GroupSource_RawValue(Slide_Element_DataLink_GroupName *message, int32_t value);

#pragma mark - Slide_Element_DataLink_GroupColor

typedef GPB_ENUM(Slide_Element_DataLink_GroupColor_FieldNumber) {
  Slide_Element_DataLink_GroupColor_FieldNumber_GroupSource = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_GroupColor : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_GroupColor_GroupSourceType groupSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_GroupColor's @c groupSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_GroupColor_GroupSource_RawValue(Slide_Element_DataLink_GroupColor *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_GroupColor's @c groupSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_GroupColor_GroupSource_RawValue(Slide_Element_DataLink_GroupColor *message, int32_t value);

#pragma mark - Slide_Element_DataLink_SlideLabelText

typedef GPB_ENUM(Slide_Element_DataLink_SlideLabelText_FieldNumber) {
  Slide_Element_DataLink_SlideLabelText_FieldNumber_SlideLabelSource = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_SlideLabelText : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideLabelText_SlideLabelSource slideLabelSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideLabelText's @c slideLabelSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideLabelText_SlideLabelSource_RawValue(Slide_Element_DataLink_SlideLabelText *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideLabelText's @c slideLabelSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideLabelText_SlideLabelSource_RawValue(Slide_Element_DataLink_SlideLabelText *message, int32_t value);

#pragma mark - Slide_Element_DataLink_SlideLabelColor

typedef GPB_ENUM(Slide_Element_DataLink_SlideLabelColor_FieldNumber) {
  Slide_Element_DataLink_SlideLabelColor_FieldNumber_SlideLabelSource = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_SlideLabelColor : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideLabelColor_SlideLabelSource slideLabelSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideLabelColor's @c slideLabelSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideLabelColor_SlideLabelSource_RawValue(Slide_Element_DataLink_SlideLabelColor *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideLabelColor's @c slideLabelSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideLabelColor_SlideLabelSource_RawValue(Slide_Element_DataLink_SlideLabelColor *message, int32_t value);

#pragma mark - Slide_Element_DataLink_PresentationNotes

GPB_FINAL @interface Slide_Element_DataLink_PresentationNotes : GPBMessage

@end

#pragma mark - Slide_Element_DataLink_Presentation

typedef GPB_ENUM(Slide_Element_DataLink_Presentation_FieldNumber) {
  Slide_Element_DataLink_Presentation_FieldNumber_PresentationSource = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_Presentation : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_Presentation_PresentationSource presentationSource;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_Presentation's @c presentationSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_Presentation_PresentationSource_RawValue(Slide_Element_DataLink_Presentation *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_Presentation's @c presentationSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_Presentation_PresentationSource_RawValue(Slide_Element_DataLink_Presentation *message, int32_t value);

#pragma mark - Slide_Element_DataLink_PlaylistItem

typedef GPB_ENUM(Slide_Element_DataLink_PlaylistItem_FieldNumber) {
  Slide_Element_DataLink_PlaylistItem_FieldNumber_PlaylistItemSource = 1,
  Slide_Element_DataLink_PlaylistItem_FieldNumber_ShowArrangement = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_PlaylistItem : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_PlaylistItem_PlaylistItemSourceType playlistItemSource;

@property(nonatomic, readwrite) BOOL showArrangement;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_PlaylistItem's @c playlistItemSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_PlaylistItem_PlaylistItemSource_RawValue(Slide_Element_DataLink_PlaylistItem *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_PlaylistItem's @c playlistItemSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_PlaylistItem_PlaylistItemSource_RawValue(Slide_Element_DataLink_PlaylistItem *message, int32_t value);

#pragma mark - Slide_Element_DataLink_AutoAdvanceTimeRemaining

typedef GPB_ENUM(Slide_Element_DataLink_AutoAdvanceTimeRemaining_FieldNumber) {
  Slide_Element_DataLink_AutoAdvanceTimeRemaining_FieldNumber_AutoAdvanceSource = 1,
  Slide_Element_DataLink_AutoAdvanceTimeRemaining_FieldNumber_TimerFormat = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_AutoAdvanceTimeRemaining : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource autoAdvanceSource;

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *timerFormat;
/** Test to see if @c timerFormat has been set. */
@property(nonatomic, readwrite) BOOL hasTimerFormat;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_AutoAdvanceTimeRemaining's @c autoAdvanceSource property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_RawValue(Slide_Element_DataLink_AutoAdvanceTimeRemaining *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_AutoAdvanceTimeRemaining's @c autoAdvanceSource property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_AutoAdvanceTimeRemaining_AutoAdvanceSource_RawValue(Slide_Element_DataLink_AutoAdvanceTimeRemaining *message, int32_t value);

#pragma mark - Slide_Element_DataLink_CaptureStatusText

typedef GPB_ENUM(Slide_Element_DataLink_CaptureStatusText_FieldNumber) {
  Slide_Element_DataLink_CaptureStatusText_FieldNumber_StatusText = 1,
  Slide_Element_DataLink_CaptureStatusText_FieldNumber_ElapsedTime = 2,
};

typedef GPB_ENUM(Slide_Element_DataLink_CaptureStatusText_TextType_OneOfCase) {
  Slide_Element_DataLink_CaptureStatusText_TextType_OneOfCase_GPBUnsetOneOfCase = 0,
  Slide_Element_DataLink_CaptureStatusText_TextType_OneOfCase_StatusText = 1,
  Slide_Element_DataLink_CaptureStatusText_TextType_OneOfCase_ElapsedTime = 2,
};

GPB_FINAL @interface Slide_Element_DataLink_CaptureStatusText : GPBMessage

@property(nonatomic, readonly) Slide_Element_DataLink_CaptureStatusText_TextType_OneOfCase textTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_CaptureStatusText_StatusText *statusText;

@property(nonatomic, readwrite, strong, null_resettable) Slide_Element_DataLink_CaptureStatusText_ElapsedTime *elapsedTime;

@end

/**
 * Clears whatever value was set for the oneof 'textType'.
 **/
void Slide_Element_DataLink_CaptureStatusText_ClearTextTypeOneOfCase(Slide_Element_DataLink_CaptureStatusText *message);

#pragma mark - Slide_Element_DataLink_CaptureStatusText_StatusText

GPB_FINAL @interface Slide_Element_DataLink_CaptureStatusText_StatusText : GPBMessage

@end

#pragma mark - Slide_Element_DataLink_CaptureStatusText_ElapsedTime

typedef GPB_ENUM(Slide_Element_DataLink_CaptureStatusText_ElapsedTime_FieldNumber) {
  Slide_Element_DataLink_CaptureStatusText_ElapsedTime_FieldNumber_TimerFormat = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_CaptureStatusText_ElapsedTime : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Timer_Format *timerFormat;
/** Test to see if @c timerFormat has been set. */
@property(nonatomic, readwrite) BOOL hasTimerFormat;

@end

#pragma mark - Slide_Element_DataLink_CaptureStatusColor

GPB_FINAL @interface Slide_Element_DataLink_CaptureStatusColor : GPBMessage

@end

#pragma mark - Slide_Element_DataLink_SlideCount

typedef GPB_ENUM(Slide_Element_DataLink_SlideCount_FieldNumber) {
  Slide_Element_DataLink_SlideCount_FieldNumber_SlideCountSourceType = 1,
};

GPB_FINAL @interface Slide_Element_DataLink_SlideCount : GPBMessage

@property(nonatomic, readwrite) Slide_Element_DataLink_SlideCount_SlideCountSourceType slideCountSourceType;

@end

/**
 * Fetches the raw value of a @c Slide_Element_DataLink_SlideCount's @c slideCountSourceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_DataLink_SlideCount_SlideCountSourceType_RawValue(Slide_Element_DataLink_SlideCount *message);
/**
 * Sets the raw value of an @c Slide_Element_DataLink_SlideCount's @c slideCountSourceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_DataLink_SlideCount_SlideCountSourceType_RawValue(Slide_Element_DataLink_SlideCount *message, int32_t value);

#pragma mark - Slide_Element_DataLink_ChordProChart

GPB_FINAL @interface Slide_Element_DataLink_ChordProChart : GPBMessage

@end

#pragma mark - Slide_Element_TextScroller

typedef GPB_ENUM(Slide_Element_TextScroller_FieldNumber) {
  Slide_Element_TextScroller_FieldNumber_ShouldScroll = 1,
  Slide_Element_TextScroller_FieldNumber_ScrollRate = 2,
  Slide_Element_TextScroller_FieldNumber_ShouldRepeat = 3,
  Slide_Element_TextScroller_FieldNumber_RepeatDistance = 4,
  Slide_Element_TextScroller_FieldNumber_ScrollingDirection = 5,
  Slide_Element_TextScroller_FieldNumber_StartsOffScreen = 6,
  Slide_Element_TextScroller_FieldNumber_FadeLeft = 7,
  Slide_Element_TextScroller_FieldNumber_FadeRight = 8,
};

GPB_FINAL @interface Slide_Element_TextScroller : GPBMessage

@property(nonatomic, readwrite) BOOL shouldScroll;

@property(nonatomic, readwrite) double scrollRate;

@property(nonatomic, readwrite) BOOL shouldRepeat;

@property(nonatomic, readwrite) double repeatDistance;

@property(nonatomic, readwrite) Slide_Element_TextScroller_Direction scrollingDirection;

@property(nonatomic, readwrite) BOOL startsOffScreen;

@property(nonatomic, readwrite) double fadeLeft;

@property(nonatomic, readwrite) double fadeRight;

@end

/**
 * Fetches the raw value of a @c Slide_Element_TextScroller's @c scrollingDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Slide_Element_TextScroller_ScrollingDirection_RawValue(Slide_Element_TextScroller *message);
/**
 * Sets the raw value of an @c Slide_Element_TextScroller's @c scrollingDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSlide_Element_TextScroller_ScrollingDirection_RawValue(Slide_Element_TextScroller *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
