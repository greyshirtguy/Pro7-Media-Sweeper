// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dmxProfiles.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DMXProfiles_DMXProfile;
@class DMXProfiles_DMXProfile_ChannelMapping;
@class DMXProfiles_DMXProfile_Fixture;
@class DMXProfiles_DMXProfile_Profile;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DMXProfiles_DMXProfile_Profile_ProfileType

typedef GPB_ENUM(DMXProfiles_DMXProfile_Profile_ProfileType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DMXProfiles_DMXProfile_Profile_ProfileType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DMXProfiles_DMXProfile_Profile_ProfileType_Basic = 0,
  DMXProfiles_DMXProfile_Profile_ProfileType_Advanced = 1,
  DMXProfiles_DMXProfile_Profile_ProfileType_Custom = 2,
};

GPBEnumDescriptor *DMXProfiles_DMXProfile_Profile_ProfileType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DMXProfiles_DMXProfile_Profile_ProfileType_IsValidValue(int32_t value);

#pragma mark - Enum DMXProfiles_DMXProfile_ChannelMapping_CommandType

typedef GPB_ENUM(DMXProfiles_DMXProfile_ChannelMapping_CommandType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_Opacity = 0,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_BlendMode = 1,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_SelectCue = 2,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_ControlType = 3,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_ControlValue = 4,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_TransitionDuration = 5,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_SelectPlaylist = 6,
  DMXProfiles_DMXProfile_ChannelMapping_CommandType_TargetedLayer = 7,
};

GPBEnumDescriptor *DMXProfiles_DMXProfile_ChannelMapping_CommandType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DMXProfiles_DMXProfile_ChannelMapping_CommandType_IsValidValue(int32_t value);

#pragma mark - Enum DMXProfiles_DMXProfile_Fixture_FixtureType

typedef GPB_ENUM(DMXProfiles_DMXProfile_Fixture_FixtureType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DMXProfiles_DMXProfile_Fixture_FixtureType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DMXProfiles_DMXProfile_Fixture_FixtureType_Workspace = 0,
  DMXProfiles_DMXProfile_Fixture_FixtureType_Layer = 1,
};

GPBEnumDescriptor *DMXProfiles_DMXProfile_Fixture_FixtureType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DMXProfiles_DMXProfile_Fixture_FixtureType_IsValidValue(int32_t value);

#pragma mark - DmxProfilesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DmxProfilesRoot : GPBRootObject
@end

#pragma mark - DMXProfiles

typedef GPB_ENUM(DMXProfiles_FieldNumber) {
  DMXProfiles_FieldNumber_WorkspaceProfile = 1,
  DMXProfiles_FieldNumber_LayerProfilesArray = 2,
};

GPB_FINAL @interface DMXProfiles : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) DMXProfiles_DMXProfile *workspaceProfile;
/** Test to see if @c workspaceProfile has been set. */
@property(nonatomic, readwrite) BOOL hasWorkspaceProfile;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DMXProfiles_DMXProfile*> *layerProfilesArray;
/** The number of items in @c layerProfilesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger layerProfilesArray_Count;

@end

#pragma mark - DMXProfiles_DMXProfile

typedef GPB_ENUM(DMXProfiles_DMXProfile_FieldNumber) {
  DMXProfiles_DMXProfile_FieldNumber_Profile = 1,
  DMXProfiles_DMXProfile_FieldNumber_Fixture = 2,
  DMXProfiles_DMXProfile_FieldNumber_IsEnabled = 3,
  DMXProfiles_DMXProfile_FieldNumber_CustomMappingsArray = 4,
};

GPB_FINAL @interface DMXProfiles_DMXProfile : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) DMXProfiles_DMXProfile_Profile *profile;
/** Test to see if @c profile has been set. */
@property(nonatomic, readwrite) BOOL hasProfile;

@property(nonatomic, readwrite, strong, null_resettable) DMXProfiles_DMXProfile_Fixture *fixture;
/** Test to see if @c fixture has been set. */
@property(nonatomic, readwrite) BOOL hasFixture;

@property(nonatomic, readwrite) BOOL isEnabled;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DMXProfiles_DMXProfile_ChannelMapping*> *customMappingsArray;
/** The number of items in @c customMappingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger customMappingsArray_Count;

@end

#pragma mark - DMXProfiles_DMXProfile_Profile

typedef GPB_ENUM(DMXProfiles_DMXProfile_Profile_FieldNumber) {
  DMXProfiles_DMXProfile_Profile_FieldNumber_ProfileType = 1,
  DMXProfiles_DMXProfile_Profile_FieldNumber_StartingChannel = 2,
};

typedef GPB_ENUM(DMXProfiles_DMXProfile_Profile_StartingChannelOneof_OneOfCase) {
  DMXProfiles_DMXProfile_Profile_StartingChannelOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  DMXProfiles_DMXProfile_Profile_StartingChannelOneof_OneOfCase_StartingChannel = 2,
};

GPB_FINAL @interface DMXProfiles_DMXProfile_Profile : GPBMessage

@property(nonatomic, readwrite) DMXProfiles_DMXProfile_Profile_ProfileType profileType;

@property(nonatomic, readonly) DMXProfiles_DMXProfile_Profile_StartingChannelOneof_OneOfCase startingChannelOneofOneOfCase;

@property(nonatomic, readwrite) uint32_t startingChannel;

@end

/**
 * Fetches the raw value of a @c DMXProfiles_DMXProfile_Profile's @c profileType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DMXProfiles_DMXProfile_Profile_ProfileType_RawValue(DMXProfiles_DMXProfile_Profile *message);
/**
 * Sets the raw value of an @c DMXProfiles_DMXProfile_Profile's @c profileType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDMXProfiles_DMXProfile_Profile_ProfileType_RawValue(DMXProfiles_DMXProfile_Profile *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'startingChannelOneof'.
 **/
void DMXProfiles_DMXProfile_Profile_ClearStartingChannelOneofOneOfCase(DMXProfiles_DMXProfile_Profile *message);

#pragma mark - DMXProfiles_DMXProfile_ChannelMapping

typedef GPB_ENUM(DMXProfiles_DMXProfile_ChannelMapping_FieldNumber) {
  DMXProfiles_DMXProfile_ChannelMapping_FieldNumber_ChannelIndex = 1,
  DMXProfiles_DMXProfile_ChannelMapping_FieldNumber_Command = 2,
};

GPB_FINAL @interface DMXProfiles_DMXProfile_ChannelMapping : GPBMessage

@property(nonatomic, readwrite) uint32_t channelIndex;

@property(nonatomic, readwrite) DMXProfiles_DMXProfile_ChannelMapping_CommandType command;

@end

/**
 * Fetches the raw value of a @c DMXProfiles_DMXProfile_ChannelMapping's @c command property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DMXProfiles_DMXProfile_ChannelMapping_Command_RawValue(DMXProfiles_DMXProfile_ChannelMapping *message);
/**
 * Sets the raw value of an @c DMXProfiles_DMXProfile_ChannelMapping's @c command property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDMXProfiles_DMXProfile_ChannelMapping_Command_RawValue(DMXProfiles_DMXProfile_ChannelMapping *message, int32_t value);

#pragma mark - DMXProfiles_DMXProfile_Fixture

typedef GPB_ENUM(DMXProfiles_DMXProfile_Fixture_FieldNumber) {
  DMXProfiles_DMXProfile_Fixture_FieldNumber_FixtureType = 1,
  DMXProfiles_DMXProfile_Fixture_FieldNumber_LayerIndex = 2,
};

typedef GPB_ENUM(DMXProfiles_DMXProfile_Fixture_LayerIndexOneof_OneOfCase) {
  DMXProfiles_DMXProfile_Fixture_LayerIndexOneof_OneOfCase_GPBUnsetOneOfCase = 0,
  DMXProfiles_DMXProfile_Fixture_LayerIndexOneof_OneOfCase_LayerIndex = 2,
};

GPB_FINAL @interface DMXProfiles_DMXProfile_Fixture : GPBMessage

@property(nonatomic, readwrite) DMXProfiles_DMXProfile_Fixture_FixtureType fixtureType;

@property(nonatomic, readonly) DMXProfiles_DMXProfile_Fixture_LayerIndexOneof_OneOfCase layerIndexOneofOneOfCase;

@property(nonatomic, readwrite) uint32_t layerIndex;

@end

/**
 * Fetches the raw value of a @c DMXProfiles_DMXProfile_Fixture's @c fixtureType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DMXProfiles_DMXProfile_Fixture_FixtureType_RawValue(DMXProfiles_DMXProfile_Fixture *message);
/**
 * Sets the raw value of an @c DMXProfiles_DMXProfile_Fixture's @c fixtureType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDMXProfiles_DMXProfile_Fixture_FixtureType_RawValue(DMXProfiles_DMXProfile_Fixture *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'layerIndexOneof'.
 **/
void DMXProfiles_DMXProfile_Fixture_ClearLayerIndexOneofOneOfCase(DMXProfiles_DMXProfile_Fixture *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
